import { type ReadonlyVec3 } from "gl-matrix";
import { BaseController, type ControllerInitParams } from "./base";
import { type RenderStateCamera } from "../../core3d";
import { ControllerInput } from "./input";
/** Null type camera motion controller.
 * @remarks
 * This controller is completely passive and will not overwrite/modify any camera render state.
 * @category Camera Controllers
 */
export declare class NullController extends BaseController {
    kind: "null";
    projection: undefined;
    /**
     * @param input The input source.
     */
    constructor(input: ControllerInput);
    serialize(): ControllerInitParams;
    init(params: ControllerInitParams): void;
    autoFit(center: ReadonlyVec3, radius: number): void;
    update(): void;
    stateChanges(state?: RenderStateCamera): Partial<RenderStateCamera>;
    /** NullController type guard function.
     * @param controller The controller to type guard.
     */
    static is(controller: BaseController): controller is NullController;
    /** NullController type assert function.
     * @param controller The controller to type assert.
     */
    static assert(controller: BaseController): asserts controller is NullController;
}
//# sourceMappingURL=null.d.ts.map