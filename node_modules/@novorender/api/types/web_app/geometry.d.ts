import type { RenderStateDynamicMaterial, RenderStateDynamicObject } from "../core3d/state";
/**
 * Create a simple cube mesh object.
 * @param material The material to use, or undefined for default material.
 * @example
 * ```typescript
 * const cube = createCubeObject();
 * view.modifyRenderState({ dynamic: { objects: [cube] } });
 * ```
 * @category Geometry
 * @experimental
 */
export declare function createCubeObject(material?: RenderStateDynamicMaterial): RenderStateDynamicObject;
/**
 * Create a simple sphere mesh object.
 * @param detail The level of tesselation, expressed as # subdivisions of the base icosahedron.
 * @param material The material to use, or undefined for default material.
 * @example
 * ```typescript
 * const sphere = createSphereObject();
 * view.modifyRenderState({ dynamic: { objects: [sphere] } });
 * ```
 * @category Geometry
 * @experimental
 */
export declare function createSphereObject(detail?: number, material?: RenderStateDynamicMaterial): RenderStateDynamicObject;
//# sourceMappingURL=geometry.d.ts.map