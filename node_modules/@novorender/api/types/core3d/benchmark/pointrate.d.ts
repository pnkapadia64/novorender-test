import { Benchmark } from "./benchmark";
import type { ShaderImports } from "core3d/shaders";
/** A basic GPU point rate profiler.
 * @category Device Profile
 */
export declare class PointrateProfiler {
    /** The benchmark context. */
    readonly benchmark: Benchmark;
    readonly program: WebGLProgram;
    readonly uniforms: Record<"color", WebGLUniformLocation | null>;
    /**
     * @param benchmark The benchmark context to use.
     * @param shaders The shader imports.
     */
    constructor(
    /** The benchmark context. */
    benchmark: Benchmark, shaders: ShaderImports["benchmark"]);
    /**
     * Measure fill rate by rendering a series of noisy, semi-transparent point primitives.
     * @returns Primitive/point rate estimate in primitives/second.
     * @remarks
     * This test is quite inaccurate and does not match close to the nominal primitive/triangle rate of a GPU, particularly on tile based mobile GPUs.
     * Points are being used instead of triangles since they more closely reflect the maximum theoretical primitive rate of most GPUs.
     * The result should only serve as a rough estimate.
     */
    measure(): Promise<number>;
}
//# sourceMappingURL=pointrate.d.ts.map