export declare function glCreateBuffer(gl: WebGL2RenderingContext, params: BufferParams): WebGLBuffer;
export declare function glUpdateBuffer(gl: WebGL2RenderingContext, params: UpdateParams): void;
export type BufferParams = BufferParamsSize | BufferParamsData;
export type BufferTargetString = "ARRAY_BUFFER" | "ELEMENT_ARRAY_BUFFER" | "COPY_READ_BUFFER" | "COPY_WRITE_BUFFER" | "TRANSFORM_FEEDBACK_BUFFER" | "UNIFORM_BUFFER" | "PIXEL_PACK_BUFFER" | "PIXEL_UNPACK_BUFFER";
export type BufferUsageString = "STATIC_DRAW" | "DYNAMIC_DRAW" | "STREAM_DRAW" | "STATIC_READ" | "DYNAMIC_READ" | "STREAM_READ" | "STATIC_COPY" | "DYNAMIC_COPY" | "STREAM_COPY";
export interface BufferParamsSize {
    readonly kind: BufferTargetString;
    readonly byteSize: GLsizeiptr;
    readonly usage?: BufferUsageString;
}
export interface BufferParamsData {
    readonly kind: BufferTargetString;
    readonly srcData: BufferSource;
    readonly usage?: BufferUsageString;
}
export interface UpdateParams {
    readonly kind: BufferTargetString;
    readonly srcData: BufferSource;
    readonly targetBuffer: WebGLBuffer;
    readonly srcElementOffset?: number;
    readonly dstByteOffset?: number;
    readonly byteSize?: number;
}
//# sourceMappingURL=buffer.d.ts.map