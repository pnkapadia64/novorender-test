import type { ReadonlyMat4, ReadonlyVec2, ReadonlyVec3 } from "gl-matrix";
import { vec3 } from "gl-matrix";
import type { Face } from "./face";
import type { Edge } from "./edge";
type Index = number;
type IndexPair = readonly [Index, Index];
type SurfaceVertex = {
    pos: ReadonlyVec3;
    uv: ReadonlyVec2;
    normal: ReadonlyVec3;
};
export type PathInfo = {
    path: string;
    centerDepth: number;
    originalIndex: number;
    instanceIndex: number;
    kind: "edge" | "face";
};
export declare function getEdgeStrip(edge: Edge, sense: number): ReadonlyVec3[];
export declare function getBrepEdges(edges: readonly (Edge | undefined)[], worldViewMatrix: ReadonlyMat4): PathInfo[];
export declare function getBrepFaces(faces: readonly Face[], worldViewMatrix: ReadonlyMat4): PathInfo[];
export declare function getProjectedLoops(face: Face, worldViewMatrix: ReadonlyMat4): {
    loops: ReadonlyVec3[][];
    trimLoops: ReadonlyVec3[][];
    contourLoops: ReadonlyVec3[][];
    trimEdges: IndexPair[];
    vertices: readonly SurfaceVertex[];
    positionsVS: vec3[];
};
export {};
//# sourceMappingURL=outline.d.ts.map