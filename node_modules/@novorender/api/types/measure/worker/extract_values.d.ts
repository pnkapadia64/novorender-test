import { vec3 } from "gl-matrix";
import type { CylinderData, FaceData, ProductData } from "./brep";
import type { Surface } from "./surfaces";
import type { CameraValues, CylinderValues, EdgeValues, FaceValues, MeasureSettings, ObjectId, PlaneValues } from "..";
export declare function extractCurveValues(product: ProductData, pathIdx: number, instanceIdx: number, pathKind: "edge" | "curveSegment"): Promise<EdgeValues | undefined>;
export declare function extractPlaneValues(prodId: ObjectId, faceIdx: number, product: ProductData, instanceIdx: number, faceData: FaceData, surf: Surface, scale: number): Promise<PlaneValues>;
export declare function extractCylinderValues(prodId: ObjectId, faceIdx: number, product: ProductData, instanceIdx: number, faceData: FaceData, cylinderData: CylinderData, scale: number, setting?: MeasureSettings): Promise<CylinderValues>;
export declare function extractFaceValues(prodId: ObjectId, product: ProductData, faceIdx: number, instanceIdx: number, setting?: MeasureSettings): Promise<FaceValues | undefined>;
export declare function extractCameraValuesFromFace(product: ProductData, faceIdx: number, instanceIdx: number, cameraDir: vec3, setting?: MeasureSettings): Promise<CameraValues | undefined>;
//# sourceMappingURL=extract_values.d.ts.map