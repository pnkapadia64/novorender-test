import type { ReadonlyVec2, ReadonlyVec3 } from "gl-matrix";
import type { ProductData } from "./brep";
import type { Curve3D } from "./curves";
import type { MeasureSettings, Profile } from "..";
export declare function slopeFromProfile(profile: ReadonlyVec2[]): number[];
export declare function topAndBottomFromProfile(profile: ReadonlyVec2[]): {
    top: number;
    bottom: number;
};
export declare function reduceProfile(profile: ReadonlyVec2[]): Profile;
export declare function getCurveSegmentProfile(product: ProductData, curveSeg: Curve3D, instanceIdx: number): Profile | undefined;
export declare function getCylinderProfile(product: ProductData, faceIdx: number, instanceIdx: number, setting?: MeasureSettings): Promise<Profile | undefined>;
export declare function addCenterLinesFromCylinders(product: ProductData, centerLines: {
    start: ReadonlyVec3;
    end: ReadonlyVec3;
    radius: number;
    prev: number | undefined;
    next: number | undefined;
}[], scale: number, setting?: MeasureSettings): Promise<void>;
export declare function centerLinesToLinesTrip(centerLines: {
    start: ReadonlyVec3;
    end: ReadonlyVec3;
    radius: number;
    prev: number | undefined;
    next: number | undefined;
}[]): ReadonlyVec3[];
//# sourceMappingURL=profile.d.ts.map