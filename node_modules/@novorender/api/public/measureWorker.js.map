{
  "version": 3,
  "sources": ["../../src/comlink.ts", "/projects/Novorender/ts/node_modules/gl-matrix/esm/common.js", "/projects/Novorender/ts/node_modules/gl-matrix/esm/mat3.js", "/projects/Novorender/ts/node_modules/gl-matrix/esm/mat4.js", "/projects/Novorender/ts/node_modules/gl-matrix/esm/vec3.js", "/projects/Novorender/ts/node_modules/gl-matrix/esm/vec4.js", "/projects/Novorender/ts/node_modules/gl-matrix/esm/vec2.js", "/projects/Novorender/ts/dist/measure/worker/nurbs.ts", "/projects/Novorender/ts/dist/measure/worker/face.ts", "/projects/Novorender/ts/dist/measure/worker/ray.ts", "/projects/Novorender/ts/dist/measure/worker/surfaces.ts", "/projects/Novorender/ts/dist/measure/worker/edge.ts", "/projects/Novorender/ts/dist/measure/wasm/nurbs_wrapper.js", "/projects/Novorender/ts/dist/measure/worker/loader.ts", "/projects/Novorender/ts/dist/measure/worker/util.ts", "/projects/Novorender/ts/dist/measure/worker/curves.ts", "/projects/Novorender/ts/dist/measure/worker/calculations.ts", "/projects/Novorender/ts/dist/measure/worker/outline.ts", "/projects/Novorender/ts/dist/measure/worker/extract_values.ts", "/projects/Novorender/ts/dist/measure/worker/parametric_product.ts", "/projects/Novorender/ts/dist/measure/worker/profile.ts", "/projects/Novorender/ts/dist/measure/worker/manhole.ts", "/projects/Novorender/ts/dist/measure/worker/draw_objects.ts", "/projects/Novorender/ts/dist/measure/worker/collision.ts", "/projects/Novorender/ts/dist/measure/worker/snaps.ts", "/projects/Novorender/ts/dist/measure/worker/roads/scene.ts", "/projects/Novorender/ts/dist/measure/worker/scene.ts", "/projects/Novorender/ts/dist/measure/worker/service.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport type { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\nexport const finalizer = Symbol(\"Comlink.finalizer\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nfunction isAllowedOrigin(\n  allowedOrigins: (string | RegExp)[],\n  origin: string\n): boolean {\n  for (const allowedOrigin of allowedOrigins) {\n    if (origin === allowedOrigin || allowedOrigin === \"*\") {\n      return true;\n    }\n    if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function expose(\n  obj: any,\n  ep: Endpoint = globalThis as any,\n  allowedOrigins: (string | RegExp)[] = [\"*\"]\n) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n      console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n          if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n            obj[finalizer]();\n          }\n        }\n      })\n      .catch((error) => {\n        // Send Serialization Error To Caller\n        const [wireValue, transferables] = toWireValue({\n          value: new TypeError(\"Unserializable return value\"),\n          [throwMarker]: 0,\n        });\n        ep.postMessage({ ...wireValue, id }, transferables);\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction releaseEndpoint(ep: Endpoint) {\n  return requestResponseMessage(ep, {\n    type: MessageType.RELEASE,\n  }).then(() => {\n    closeEndPoint(ep);\n  });\n}\n\ninterface FinalizationRegistry<T> {\n  new (cb: (heldValue: T) => void): FinalizationRegistry<T>;\n  register(\n    weakItem: object,\n    heldValue: T,\n    unregisterToken?: object | undefined\n  ): void;\n  unregister(unregisterToken: object): void;\n}\ndeclare var FinalizationRegistry: FinalizationRegistry<Endpoint>;\n\nconst proxyCounter = new WeakMap<Endpoint, number>();\nconst proxyFinalizers =\n  \"FinalizationRegistry\" in globalThis &&\n  new FinalizationRegistry((ep: Endpoint) => {\n    const newCount = (proxyCounter.get(ep) || 0) - 1;\n    proxyCounter.set(ep, newCount);\n    if (newCount === 0) {\n      releaseEndpoint(ep);\n    }\n  });\n\nfunction registerProxy(proxy: object, ep: Endpoint) {\n  const newCount = (proxyCounter.get(ep) || 0) + 1;\n  proxyCounter.set(ep, newCount);\n  if (proxyFinalizers) {\n    proxyFinalizers.register(proxy, ep, proxy);\n  }\n}\n\nfunction unregisterProxy(proxy: object) {\n  if (proxyFinalizers) {\n    proxyFinalizers.unregister(proxy);\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          unregisterProxy(proxy);\n          releaseEndpoint(ep);\n          isProxyReleased = true;\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously \u00AF\\_(\u30C4)_/\u00AF\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn\u2019t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  registerProxy(proxy, ep);\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T extends {}>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = globalThis,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();", "import type { ReadonlyVec2, ReadonlyVec3 } from \"gl-matrix\";\r\n\r\n/*\r\nnurbs_wrapper.js\r\nTo work with ESbuild replace :\r\n\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n    module.exports = Module;\r\nelse if (typeof define === 'function' && define['amd'])\r\n    define([], function () { return Module; });\r\nelse if (typeof exports === 'object')\r\n    exports[\"Module\"] = Module;\r\n\r\nwith:\r\nexport default Module;\r\n*/\r\n\r\n// https://kripken.github.io/emscripten-site/docs/api_reference/module.html\r\n\r\nexport function makeNurbsCurve3D(instance: any, knots: number[], controlPoints: ReadonlyVec3[], weights: number[] | undefined, order: number) {\r\n    const degree = order - 1;\r\n    var knotsPtr = instance._malloc(8 * knots.length);\r\n    var knotsHeap = new Float64Array(instance.HEAPF64.buffer, knotsPtr, knots.length);\r\n    knotsHeap.set(knots);\r\n\r\n    var controlPointsPtr = instance._malloc(controlPoints.length * 24);\r\n    var controlPointsHeap = new Float64Array(instance.HEAPF64.buffer, controlPointsPtr, controlPoints.length * 3);\r\n    var ctrlPoints = new Float64Array(controlPoints.length * 3);\r\n    controlPoints.forEach((point, index) => {\r\n        ctrlPoints[index * 3] = point[0];\r\n        ctrlPoints[(index * 3) + 1] = point[1];\r\n        ctrlPoints[(index * 3) + 2] = point[2];\r\n    });\r\n    controlPointsHeap.set(ctrlPoints);\r\n\r\n    var nurbs = undefined;\r\n    if (weights != undefined && weights.length > 0) {\r\n        var weightsPtr = instance._malloc(8 * weights.length);\r\n        var weightsHeap = new Float64Array(instance.HEAPF64.buffer, weightsPtr, weights.length);\r\n        weightsHeap.set(weights);\r\n        nurbs = instance._getNurbsCurve3DWithWeights(degree, controlPoints.length, knotsHeap.byteOffset,\r\n            controlPointsHeap.byteOffset, weightsHeap.byteOffset);\r\n        instance._free(weightsHeap.byteOffset);\r\n    }\r\n    else {\r\n        nurbs = instance._getNurbsCurve3D(degree, controlPoints.length, knotsHeap.byteOffset,\r\n            controlPointsHeap.byteOffset, 0);\r\n    }\r\n    instance._free(knotsHeap.byteOffset);\r\n    instance._free(controlPointsHeap.byteOffset);\r\n    return nurbs;\r\n}\r\n\r\nexport function makeNurbsCurve2D(instance: any, knots: number[], controlPoints: ReadonlyVec2[], weights: number[] | undefined, order: number) {\r\n    const degree = order - 1;\r\n    var knotsPtr = instance._malloc(8 * knots.length);\r\n    var knotsHeap = new Float64Array(instance.HEAPF64.buffer, knotsPtr, knots.length);\r\n    knotsHeap.set(knots);\r\n\r\n    var controlPointsPtr = instance._malloc(controlPoints.length * 16);\r\n    var controlPointsHeap = new Float64Array(instance.HEAPF64.buffer, controlPointsPtr, controlPoints.length * 2);\r\n    var ctrlPoints = new Float64Array(controlPoints.length * 2);\r\n    controlPoints.forEach((point, index) => {\r\n        ctrlPoints[index * 2] = point[0];\r\n        ctrlPoints[(index * 2) + 1] = point[1];\r\n    });\r\n    controlPointsHeap.set(ctrlPoints);\r\n\r\n    var nurbs = undefined;\r\n    if (weights != undefined && weights.length > 0) {\r\n        var weightsPtr = instance._malloc(8 * weights.length);\r\n        var weightsHeap = new Float64Array(instance.HEAPF64.buffer, weightsPtr, weights.length);\r\n        weightsHeap.set(weights);\r\n        nurbs = instance._getNurbsCurve2DWithWeights(degree, controlPoints.length, knotsHeap.byteOffset,\r\n            controlPointsHeap.byteOffset, weightsHeap.byteOffset);\r\n        instance._free(weightsHeap.byteOffset);\r\n    }\r\n    else {\r\n        nurbs = instance._getNurbsCurve2D(degree, controlPoints.length, knotsHeap.byteOffset,\r\n            controlPointsHeap.byteOffset, 0);\r\n    }\r\n    instance._free(knotsHeap.byteOffset);\r\n    instance._free(controlPointsHeap.byteOffset);\r\n    return nurbs;\r\n}\r\n\r\n\r\n\r\nexport function makeNurbsSurface(instance: any, knots: number[], dimU: number, dimV: number, controlPoints: ReadonlyVec3[], weights: number[] | undefined, orderU: number, orderV: number) {\r\n    const degreeU = orderU - 1;\r\n    const degreeV = orderV - 1;\r\n    var knotsPtr = instance._malloc(8 * knots.length);\r\n    var knotsHeap = new Float64Array(instance.HEAPF64.buffer, knotsPtr, knots.length);\r\n    knotsHeap.set(knots);\r\n\r\n    var controlPointsPtr = instance._malloc(controlPoints.length * 24);\r\n    var controlPointsHeap = new Float64Array(instance.HEAPF64.buffer, controlPointsPtr, controlPoints.length * 3);\r\n    var ctrlPoints = new Float64Array(controlPoints.length * 3);\r\n    controlPoints.forEach((point, index) => {\r\n        ctrlPoints[index * 3] = point[0];\r\n        ctrlPoints[(index * 3) + 1] = point[1];\r\n        ctrlPoints[(index * 3) + 2] = point[2];\r\n    });\r\n    controlPointsHeap.set(ctrlPoints);\r\n\r\n    var nurbs = undefined;\r\n\r\n    if (weights != undefined && weights.length > 0) {\r\n        var weightsPtr = instance._malloc(8 * weights.length);\r\n        var weightsHeap = new Float64Array(instance.HEAPF64.buffer, weightsPtr, weights.length);\r\n        weightsHeap.set(weights);\r\n        nurbs = instance._getNurbsSurfaceWithWeights(degreeU, degreeV, dimU, dimV, knotsHeap.byteOffset,\r\n            controlPointsHeap.byteOffset, weightsHeap.byteOffset);\r\n        instance._free(weightsHeap.byteOffset);\r\n    }\r\n    else {\r\n        nurbs = instance._getNurbsSurface(degreeU, degreeV, dimU, dimV, knotsHeap.byteOffset,\r\n            controlPointsHeap.byteOffset, 0);\r\n    }\r\n    instance._free(knotsHeap.byteOffset);\r\n    instance._free(controlPointsHeap.byteOffset);\r\n    return nurbs;\r\n}", "import { vec2, glMatrix } from \"gl-matrix\";\r\nimport type { ReadonlyMat4, ReadonlyVec2 } from \"gl-matrix\";\r\nimport type { Curve2D } from \"./curves\";\r\nimport type { IndexPair, Triangulation } from \"./brep\";\r\nimport type { Ray } from \"./ray\";\r\nimport type { Surface } from \"./surfaces\";\r\n\r\nglMatrix.setMatrixArrayType(Array);\r\n\r\nconst projectedPoint = vec2.create();\r\nconst projectedTangent = vec2.create();\r\nconst beginUV = vec2.create();\r\nconst endUV = vec2.create();\r\n\r\nexport interface Seam {\r\n    vertexIndexPairs: IndexPair[]; // pairs of face vertex indices that form part of a seam, i.e. they are different in UV space, but not in 3D.\r\n}\r\n\r\nexport class Face {\r\n    constructor(readonly surface: Surface, readonly sense: 1 | -1, readonly loops: readonly (readonly Curve2D[])[], readonly triangulation: Triangulation, readonly seams: Seam[], readonly instanceIndex: number, readonly geometryTransformation?: ReadonlyMat4) {\r\n        // TODO: Check cone ray intersection. Seems to be an issue with sense (works if surface gets negative sense, but face doesnt).\r\n        // const uv = vec2.fromValues(3.14, -35);\r\n        // const pos = vec3.create();\r\n        // surface.evalPosition(pos, uv);\r\n        // const invUV = vec2.create();\r\n        // surface.invert(invUV, pos);\r\n        // for (const curves of loops) {\r\n        //     if (curves.length > 1) {\r\n        //         for (let i0 = 0; i0 < curves.length; i0++) {\r\n        //             let i1 = (i0 + 1) % curves.length;\r\n        //             const c0 = curves[i0];\r\n        //             const c1 = curves[i1];\r\n        //             c0.eval(c0.endParam, endUV, undefined);\r\n        //             c1.eval(c1.beginParam, beginUV, undefined);\r\n        //             const distUV = vec2.distance(beginUV, endUV);\r\n        //             console.assert(distUV < 1e-5);\r\n        //             const t = c1.project(beginUV);\r\n        //             const distT = Math.abs(t - c1.beginParam);\r\n        //             console.assert(distT < 1e-3);\r\n        //         }\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    raytrace(uvOut: vec2, ray: Ray): boolean {\r\n        if (!this.surface.intersect(uvOut, ray)) return false;\r\n        // return this.isInside(uvOut);\r\n        return true;\r\n    }\r\n\r\n    isInside(uv: ReadonlyVec2): boolean {\r\n        const { loops, sense } = this;\r\n        let nearestDist = Number.MAX_VALUE;\r\n        let inside = true;\r\n        for (const curves of loops) {\r\n            for (const curve of curves) {\r\n                const t = curve.project(uv);\r\n                curve.eval(t, projectedPoint, projectedTangent);\r\n                const dist = vec2.distance(uv, projectedPoint);\r\n                if (dist < nearestDist) {\r\n                    nearestDist = dist;\r\n                    vec2.sub(projectedPoint, uv, projectedPoint);\r\n                    const [tx, ty] = projectedTangent;\r\n                    // rotate tangent 90 deg clockwise, such that it points away from the interior of the curve\r\n                    projectedTangent[0] = ty * sense;\r\n                    projectedTangent[1] = -tx * sense;\r\n                    inside = vec2.dot(projectedTangent, projectedPoint) < 0;\r\n                }\r\n            }\r\n        }\r\n        return inside;\r\n    }\r\n}\r\n", "import { glMatrix, vec3 } from \"gl-matrix\";\r\nimport type { ReadonlyVec2, ReadonlyVec3 } from \"gl-matrix\";\r\nglMatrix.setMatrixArrayType(Array);\r\n\r\nconst tmp3 = vec3.create();\r\n\r\nexport class Ray {\r\n    constructor(readonly origin: ReadonlyVec3, readonly direction: ReadonlyVec3) { }\r\n\r\n    eval(pointOut: vec3, t: number) {\r\n        vec3.scale(pointOut, this.direction, t);\r\n        vec3.add(pointOut, pointOut, this.origin);\r\n    }\r\n\r\n    invert(point: ReadonlyVec3): number {\r\n        vec3.sub(tmp3, point, this.origin);\r\n        return vec3.dot(tmp3, this.direction);\r\n    }\r\n}\r\n\r\nexport interface Intersection {\r\n    readonly distance: number;\r\n    readonly uv: ReadonlyVec2;\r\n}\r\n", "import type { ReadonlyMat3, ReadonlyMat4, ReadonlyVec2, ReadonlyVec3 } from \"gl-matrix\";\r\nimport { glMatrix, mat3, mat4, vec2, vec3 } from \"gl-matrix\";\r\nimport { makeNurbsSurface } from \"./nurbs\";\r\nimport { Ray } from \"./ray\";\r\n\r\ntype SurfaceKind = \"plane\" | \"sphere\" | \"cylinder\" | \"cone\" | \"torus\" | \"nurbs\";\r\nglMatrix.setMatrixArrayType(Array);\r\n\r\nexport interface Surface {\r\n    readonly kind: SurfaceKind;\r\n    readonly sense: -1 | 1;\r\n    evalPosition(positionOut: vec3, uv: ReadonlyVec2): void;\r\n    evalNormal(normalOut: vec3, uv: ReadonlyVec2): void;\r\n    invert(uvOut: vec2, pos: ReadonlyVec3): void;\r\n    intersect(uvOut: vec2, ray: Ray): boolean;\r\n}\r\n\r\nconst tmp3 = vec3.create();\r\nconst origin = vec3.create();\r\nconst direction = vec3.create();\r\nconst unitRay = new Ray(origin, direction);\r\n\r\n// solution: 0 = smallest, 1 = largest\r\nfunction solveQuadraticPolynomial(a: number, b: number, c: number, solution: 0 | 1 = 0) {\r\n    const discriminant = b * b - 4 * a * c;\r\n    if (discriminant < 0 || a == 0) return undefined;\r\n    const sign = Math.sign(a) * solution ? 1 : -1;\r\n    // const s0 = (-b - Math.sqrt(discriminant)) / (2 * a);\r\n    // const s1 = (-b + Math.sqrt(discriminant)) / (2 * a);\r\n    // if (s0 == s1) console.log(s0);\r\n    return (-b + sign * Math.sqrt(discriminant)) / (2 * a);\r\n}\r\n\r\nfunction combineMatrices(m0: ReadonlyMat4 | undefined, m1: mat4 | undefined): ReadonlyMat4 | undefined {\r\n    if (m0 && !m1) return m0;\r\n    else if (!m0 && m1) return m1;\r\n    else if (m0 && m1) {\r\n        return mat4.multiply(m1, m0, m1);\r\n        // return mat4.multiply(m1, m1, m0);\r\n    }\r\n}\r\n\r\nfunction unitSphereMatrix(radius: number): mat4 | undefined {\r\n    if (radius == 1) return undefined;\r\n    const m = mat4.create();\r\n    mat4.fromScaling(m, vec3.fromValues(radius, radius, radius));\r\n    return m;\r\n}\r\n\r\nfunction unitCylinderMatrix(radius: number): mat4 | undefined {\r\n    if (radius == 1) return undefined;\r\n    const m = mat4.create();\r\n    mat4.fromScaling(m, vec3.fromValues(radius, radius, 1));\r\n    return m;\r\n}\r\n\r\nexport abstract class UnitSurface implements Surface {\r\n    // Scale from mm to meters. Applied on functions that deal with 3D coordinate (which should be in meters), such as evalPos, invert and intersect. UV coords are still in mm since open cascade uses that unit internally and conversion is non-trivial.\r\n    private readonly surfaceToObjectSpaceTransform: ReadonlyMat4;\r\n    private readonly objectToSurfaceSpaceTransform: ReadonlyMat4;\r\n    private readonly surfaceToObjectSpaceTransformNormal: ReadonlyMat3;\r\n    private readonly objectToSurfaceSpaceTransformNormal: ReadonlyMat3;\r\n\r\n    constructor(readonly kind: SurfaceKind, surfaceToObjectSpaceTransform: ReadonlyMat4 | undefined, readonly sense: -1 | 1, readonly scale: number) {\r\n        const transform = surfaceToObjectSpaceTransform ? mat4.clone(surfaceToObjectSpaceTransform) : mat4.create();\r\n        const scaleMat = mat4.fromScaling(mat4.create(), vec3.fromValues(this.scale, this.scale, this.scale));\r\n        mat4.multiply(transform, scaleMat, transform);\r\n        this.surfaceToObjectSpaceTransform = transform;\r\n        const objectToSurfaceSpaceTransform = mat4.invert(mat4.create(), this.surfaceToObjectSpaceTransform);\r\n        this.objectToSurfaceSpaceTransform = objectToSurfaceSpaceTransform;\r\n        let surfaceToObjectSpaceTransformNormal = mat3.fromMat4(mat3.create(), this.surfaceToObjectSpaceTransform);\r\n        // mat3.normalFromMat4(surfaceToObjectSpaceTransformNormal, this.surfaceToObjectSpaceTransform)\r\n        this.surfaceToObjectSpaceTransformNormal = surfaceToObjectSpaceTransformNormal;\r\n        const objectToSurfaceSpaceTransformNormal = mat3.fromMat4(mat3.create(), this.objectToSurfaceSpaceTransform);\r\n        // mat3.normalFromMat4(objectToSurfaceSpaceTransformNormal, this.objectToSurfaceSpaceTransform)\r\n        this.objectToSurfaceSpaceTransformNormal = objectToSurfaceSpaceTransformNormal;\r\n    }\r\n\r\n    evalPosition(positionOut: vec3, uv: ReadonlyVec2) {\r\n        this.unitEvalPosition(positionOut, uv);\r\n        vec3.transformMat4(positionOut, positionOut, this.surfaceToObjectSpaceTransform);\r\n    }\r\n\r\n    evalNormal(normalOut: vec3, uv: ReadonlyVec2) {\r\n        this.unitEvalNormal(normalOut, uv);\r\n        vec3.scale(normalOut, normalOut, this.sense);\r\n        vec3.transformMat3(normalOut, normalOut, this.surfaceToObjectSpaceTransformNormal);\r\n        vec3.normalize(normalOut, normalOut);\r\n    }\r\n\r\n    invert(uvOut: vec2, point: ReadonlyVec3) {\r\n        vec3.transformMat4(tmp3, point, this.objectToSurfaceSpaceTransform);\r\n        this.unitInvert(uvOut, tmp3);\r\n    }\r\n\r\n    intersect(uvOut: vec2, ray: Ray): boolean {\r\n        vec3.transformMat4(origin, ray.origin, this.objectToSurfaceSpaceTransform);\r\n        vec3.transformMat3(direction, ray.direction, this.objectToSurfaceSpaceTransformNormal); // it's okay of direction isn't a normal (length=1)\r\n        const t = this.unitIntersect(unitRay);\r\n        if (!t) return false;\r\n        unitRay.eval(tmp3, t);\r\n        this.unitInvert(uvOut, tmp3);\r\n        return true;\r\n    }\r\n\r\n    dispose(): void { }\r\n\r\n    protected abstract unitEvalPosition(positionOut: vec3, uv: ReadonlyVec2): void;\r\n    protected abstract unitEvalNormal(normalOut: vec3, uv: ReadonlyVec2): void;\r\n    protected abstract unitInvert(uvOut: vec2, point: ReadonlyVec3): void;\r\n    protected abstract unitIntersect(ray: Ray): number | undefined;\r\n}\r\n\r\nexport class Plane extends UnitSurface {\r\n    constructor(surfaceToObjectSpaceTransform?: ReadonlyMat4, sense: -1 | 1 = 1, scale?: number) {\r\n        super(\"plane\", surfaceToObjectSpaceTransform, sense, scale ?? 1);\r\n    }\r\n\r\n    unitEvalPosition(positionOut: vec3, uv: ReadonlyVec2) {\r\n        vec3.set(positionOut, uv[0], uv[1], 0);\r\n    }\r\n\r\n    unitEvalNormal(normalOut: vec3, uv: ReadonlyVec2 | undefined) {\r\n        vec3.set(normalOut, 0, 0, 1);\r\n    }\r\n\r\n    unitInvert(uvOut: vec2, point: ReadonlyVec3) {\r\n        return vec2.set(uvOut, point[0], point[1]);\r\n    }\r\n\r\n    unitIntersect(ray: Ray): number | undefined {\r\n        if (ray.direction[2] * this.sense < 0) {\r\n            // only intersect forward facing planes\r\n            const t = -ray.origin[2] / ray.direction[2];\r\n            return t;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Sphere extends UnitSurface {\r\n    constructor(readonly radius = 1, surfaceToObjectSpaceTransform?: ReadonlyMat4, sense: -1 | 1 = 1, scale?: number) {\r\n        super(\"sphere\", combineMatrices(surfaceToObjectSpaceTransform, unitSphereMatrix(radius)), sense, scale ?? 1);\r\n    }\r\n\r\n    unitEvalPosition(positionOut: vec3, uv: ReadonlyVec2) {\r\n        const s = Math.cos(uv[1]);\r\n        vec3.set(positionOut, Math.cos(uv[0]) * s, Math.sin(uv[0]) * s, Math.sin(uv[1]));\r\n    }\r\n\r\n    unitEvalNormal(normalOut: vec3, uv: ReadonlyVec2) {\r\n        const s = Math.cos(uv[1]);\r\n        vec3.set(normalOut, Math.cos(uv[0]) * s, Math.sin(uv[0]) * s, Math.sin(uv[1]));\r\n    }\r\n\r\n    unitInvert(uvOut: vec2, point: ReadonlyVec3) {\r\n        vec2.set(uvOut, Math.atan2(point[1], point[0]), Math.asin(Math.max(-1, Math.min(1, point[2]))));\r\n    }\r\n\r\n    unitIntersect(ray: Ray) {\r\n        const { origin, direction } = ray;\r\n        const [x0, y0, z0] = origin;\r\n        const [dx, dy, dz] = direction;\r\n\r\n        const a = dx * dx + dy * dy + dz * dz;\r\n        const b = 2 * (x0 * dx + y0 * dy + z0 * dz);\r\n        const c = x0 * x0 + y0 * y0 + z0 * z0 - 1;\r\n        const t = solveQuadraticPolynomial(a, b, c, this.sense > 0 ? 0 : 1);\r\n        return t;\r\n    }\r\n}\r\n\r\nexport class Cylinder extends UnitSurface {\r\n    constructor(readonly radius = 1, surfaceToObjectSpaceTransform?: ReadonlyMat4, sense: -1 | 1 = 1, scale?: number) {\r\n        super(\"cylinder\", combineMatrices(surfaceToObjectSpaceTransform, unitCylinderMatrix(radius)), (sense * matrixInversion(surfaceToObjectSpaceTransform)) as -1 | 1, scale ?? 1);\r\n    }\r\n\r\n    unitEvalPosition(positionOut: vec3, uv: ReadonlyVec2) {\r\n        vec3.set(positionOut, Math.cos(uv[0]), Math.sin(uv[0]), uv[1]);\r\n    }\r\n\r\n    unitEvalNormal(normalOut: vec3, uv: ReadonlyVec2) {\r\n        vec3.set(normalOut, Math.cos(uv[0]), Math.sin(uv[0]), 0);\r\n    }\r\n\r\n    unitInvert(uvOut: vec2, point: ReadonlyVec3) {\r\n        const [x, y, z] = point;\r\n        let u = Math.atan2(y, x);\r\n        if (u < 0) u += Math.PI * 2;\r\n        vec2.set(uvOut, u, z);\r\n    }\r\n\r\n    unitIntersect(ray: Ray) {\r\n        const { origin, direction } = ray;\r\n        const [x0, y0] = origin;\r\n        const [dx, dy] = direction;\r\n        const a = dx * dx + dy * dy;\r\n        const b = 2 * (x0 * dx + y0 * dy);\r\n        const c = x0 * x0 + y0 * y0 - 1;\r\n        const t = solveQuadraticPolynomial(a, b, c, this.sense > 0 ? 0 : 1);\r\n        return t;\r\n    }\r\n}\r\n\r\nfunction unitConeMatrix(halfAngleTan: number, radius: number): mat4 | undefined {\r\n    if (halfAngleTan == 1) return undefined;\r\n    const scaleXY = 1; // Math.abs(halfAngleTan);\r\n    const scaleZ = 1 / halfAngleTan; // Math.sign(halfAngleTan); //Math.cos(Math.atan(halfAngleTan));\r\n    const s = mat4.create();\r\n    const t = mat4.create();\r\n    const m = mat4.create();\r\n    // z = (z + radius) / halfAngleTan;\r\n    mat4.fromTranslation(t, vec3.fromValues(0, 0, radius * Math.sign(halfAngleTan)));\r\n    mat4.fromScaling(s, vec3.fromValues(scaleXY, scaleXY, scaleZ));\r\n    mat4.multiply(m, s, t);\r\n    return m;\r\n}\r\n\r\nfunction matrixInversion(m?: ReadonlyMat4): 1 | -1 {\r\n    if (!m) return 1;\r\n\r\n    const [e00, e01, e02, e03, e10, e11, e12, e13, e20, e21, e22, e23, e30, e31, e32, e33] = m;\r\n    const x = vec3.fromValues(e00, e10, e20);\r\n    const y = vec3.fromValues(e01, e11, e21);\r\n    const z = vec3.fromValues(e02, e12, e22);\r\n    const cp = vec3.create();\r\n    vec3.cross(cp, x, y);\r\n    const dp = vec3.dot(cp, z);\r\n    return dp >= 0 ? 1 : -1;\r\n}\r\n\r\nexport class Cone extends UnitSurface {\r\n    readonly scaleV;\r\n    // readonly offsetV;\r\n\r\n    constructor(readonly radius = 1, readonly halfAngleTan = -1, surfaceToObjectSpaceTransform?: ReadonlyMat4, sense: -1 | 1 = 1, scale?: number) {\r\n        super(\"cone\", combineMatrices(surfaceToObjectSpaceTransform, unitConeMatrix(halfAngleTan, radius)), (sense * matrixInversion(surfaceToObjectSpaceTransform)) as -1 | 1, scale ?? 1);\r\n        this.scaleV = halfAngleTan * Math.cos(Math.atan(halfAngleTan));\r\n    }\r\n\r\n    unitEvalPosition(positionOut: vec3, uv: ReadonlyVec2) {\r\n        let [u, v] = uv;\r\n        v = v * this.scaleV + this.radius; // / Math.abs(this.halfAngleTan);\r\n        vec3.set(positionOut, Math.cos(u) * v, Math.sin(u) * v, v);\r\n    }\r\n\r\n    unitEvalNormal(normalOut: vec3, uv: ReadonlyVec2) {\r\n        const [u, v] = uv;\r\n        const s = Math.sqrt(0.5);\r\n        vec3.set(normalOut, Math.cos(u) * s, Math.sin(u) * s, -s);\r\n    }\r\n\r\n    unitInvert(uvOut: vec2, point: ReadonlyVec3) {\r\n        const [x, y, z] = point;\r\n        let u = Math.atan2(y, x);\r\n        if (u < 0) u += Math.PI * 2;\r\n        const v = (z - this.radius) / this.scaleV;\r\n        vec2.set(uvOut, u, v);\r\n    }\r\n\r\n    unitIntersect(ray: Ray) {\r\n        const { origin, direction } = ray;\r\n        const [x0, y0, z0] = origin;\r\n        const [dx, dy, dz] = direction;\r\n        const a = dx * dx + dy * dy - dz * dz;\r\n        const b = 2 * (x0 * dx + y0 * dy - z0 * dz);\r\n        const c = x0 * x0 + y0 * y0 - z0 * z0;\r\n        // const t = solveQuadraticPolynomial(a, b, c, 0); // perhaps just give the hit that faces the ray?\r\n        const t = solveQuadraticPolynomial(a, b, c, this.sense > 0 ? 0 : 1); // perhaps just give the hit that faces the ray?\r\n        return t;\r\n    }\r\n}\r\n\r\nexport class Torus extends UnitSurface {\r\n    constructor(readonly majorRadius = 1, readonly minorRadius = 0.5, surfaceToObjectSpaceTransform?: ReadonlyMat4, sense: -1 | 1 = 1, scale?: number) {\r\n        super(\"torus\", surfaceToObjectSpaceTransform, sense, scale ?? 1);\r\n    }\r\n\r\n    unitEvalPosition(positionOut: vec3, uv: ReadonlyVec2) {\r\n        const [u, v] = uv;\r\n        const { majorRadius, minorRadius } = this;\r\n        const r = majorRadius + Math.cos(v) * minorRadius;\r\n        vec3.set(positionOut, Math.cos(u) * r, Math.sin(u) * r, Math.sin(v) * minorRadius);\r\n    }\r\n\r\n    unitEvalNormal(normalOut: vec3, uv: ReadonlyVec2) {\r\n        const [u, v] = uv;\r\n        vec3.set(normalOut, Math.cos(u) * Math.cos(v), Math.sin(u) * Math.cos(v), Math.sin(v));\r\n    }\r\n\r\n    unitInvert(uvOut: vec2, point: ReadonlyVec3) {\r\n        const [x, y, z] = point;\r\n        let u = Math.atan2(y, x);\r\n        if (u < 0) u += Math.PI * 2;\r\n        let v = Math.atan2(z, Math.sqrt(x * x + y * y) - this.majorRadius);\r\n        if (v < 0) v += Math.PI * 2;\r\n        vec2.set(uvOut, u, v);\r\n    }\r\n\r\n    unitIntersect(ray: Ray) {\r\n        // TODO: handle inverted torus\r\n        return intersectTorus(ray, this.majorRadius, this.minorRadius);\r\n    }\r\n}\r\n\r\ntype Pointer = number;\r\n\r\nexport class Nurbs extends UnitSurface {\r\n    readonly kind = \"nurbs\";\r\n    ptr: Pointer = 0;\r\n    constructor(readonly orders: [number, number], readonly dim: [number, number], readonly controlPoints: ReadonlyVec3[], readonly knots: number[], readonly weights: number[] | undefined, readonly sense: -1 | 1, private readonly wasmInstance: any, private readonly buffer: Float64Array, scale?: number) {\r\n        super(\"nurbs\", undefined, sense, scale ?? 1);\r\n    }\r\n\r\n    dispose() {\r\n        if (this.weights) {\r\n            this.wasmInstance._disposeNurbsSurface(this.ptr);\r\n        } else {\r\n            this.wasmInstance._disposeNurbsSurfaceWithWeights(this.ptr);\r\n        }\r\n    }\r\n\r\n    unitEvalPosition(positionOut: vec3, uv: ReadonlyVec2) {\r\n        if (this.ptr === 0) {\r\n            this.ptr = makeNurbsSurface(this.wasmInstance, this.knots, this.dim[0], this.dim[1], this.controlPoints, this.weights, this.orders[0], this.orders[1]);\r\n        }\r\n        if (this.weights) {\r\n            this.wasmInstance._evalNurbsSurfaceWithWeights(this.ptr, uv[0], uv[1], this.buffer.byteOffset, undefined);\r\n        } else {\r\n            this.wasmInstance._evalNurbsSurface(this.ptr, uv[0], uv[1], this.buffer.byteOffset, undefined);\r\n        }\r\n        const [x, y, z] = this.buffer.subarray(0, 3);\r\n        vec3.set(positionOut, x, y, z);\r\n    }\r\n\r\n    unitEvalNormal(normalOut: vec3, uv: ReadonlyVec2) {\r\n        if (this.ptr === 0) {\r\n            this.ptr = makeNurbsSurface(this.wasmInstance, this.knots, this.dim[0], this.dim[1], this.controlPoints, this.weights, this.orders[0], this.orders[1]);\r\n        }\r\n        if (this.weights) {\r\n            this.wasmInstance._evalNurbsSurfaceWithWeights(this.ptr, uv[0], uv[1], undefined, this.buffer.byteOffset + 24);\r\n        } else {\r\n            this.wasmInstance._evalNurbsSurface(this.ptr, uv[0], uv[1], undefined, this.buffer.byteOffset + 24);\r\n        }\r\n        const [x, y, z] = this.buffer.subarray(3, 6);\r\n        vec3.set(normalOut, -x, -y, -z);\r\n    }\r\n\r\n    unitInvert(uvOut: vec2, pos: ReadonlyVec3) {\r\n        if (this.ptr === 0) {\r\n            this.ptr = makeNurbsSurface(this.wasmInstance, this.knots, this.dim[0], this.dim[1], this.controlPoints, this.weights, this.orders[0], this.orders[1]);\r\n        }\r\n        this.wasmInstance._invertSurface(this.ptr, pos[0], pos[1], pos[2], this.buffer.byteOffset);\r\n        const [u, v] = this.buffer.subarray(0, 2);\r\n        vec2.set(uvOut, u, v);\r\n    }\r\n    unitIntersect(ray: Ray) {\r\n        return undefined;\r\n    }\r\n}\r\n\r\n// f(x) = (|x|\u00B2 + R\u00B2 - r\u00B2)\u00B2 - 4\u00B7R\u00B2\u00B7|xy|\u00B2 = 0\r\nfunction intersectTorus(ray: Ray, majorRadius: number, minorRadius: number) {\r\n    const { origin, direction } = ray;\r\n    let po = 1.0;\r\n\r\n    const Ra2 = majorRadius * majorRadius;\r\n    const ra2 = minorRadius * minorRadius;\r\n\r\n    const m = vec3.dot(origin, origin);\r\n    const n = vec3.dot(origin, direction);\r\n\r\n    // bounding sphere\r\n    {\r\n        const h = n * n - m + (majorRadius + minorRadius) * (majorRadius + minorRadius);\r\n        if (h < 0.0) return undefined;\r\n        //const t = -n-sqrt(h); // could use this to compute intersections from ro+t*rd\r\n    }\r\n\r\n    // find quartic equation\r\n    const k = (m - ra2 - Ra2) / 2.0;\r\n    let k3 = n;\r\n    let k2 = n * n + Ra2 * direction[2] * direction[2] + k;\r\n    let k1 = k * n + Ra2 * origin[2] * direction[2];\r\n    let k0 = k * k + Ra2 * origin[2] * origin[2] - Ra2 * ra2;\r\n\r\n    // prevent |c1| from being too close to zero\r\n    if (Math.abs(k3 * (k3 * k3 - k2) + k1) < 0.01) {\r\n        po = -1.0;\r\n        const tmp = k1;\r\n        k1 = k3;\r\n        k3 = tmp;\r\n        k0 = 1.0 / k0;\r\n        k1 = k1 * k0;\r\n        k2 = k2 * k0;\r\n        k3 = k3 * k0;\r\n    }\r\n\r\n    let c2 = 2.0 * k2 - 3.0 * k3 * k3;\r\n    let c1 = k3 * (k3 * k3 - k2) + k1;\r\n    let c0 = k3 * (k3 * (-3.0 * k3 * k3 + 4.0 * k2) - 8.0 * k1) + 4.0 * k0;\r\n\r\n    c2 /= 3.0;\r\n    c1 *= 2.0;\r\n    c0 /= 3.0;\r\n\r\n    const Q = c2 * c2 + c0;\r\n    const R = 3.0 * c0 * c2 - c2 * c2 * c2 - c1 * c1;\r\n\r\n    let h = R * R - Q * Q * Q;\r\n    let z = 0.0;\r\n    if (h < 0.0) {\r\n        // 4 intersections\r\n        const sQ = Math.sqrt(Q);\r\n        z = 2.0 * sQ * Math.cos(Math.acos(R / (sQ * Q)) / 3.0);\r\n    } else {\r\n        // 2 intersections\r\n        const sQ = Math.pow(Math.sqrt(h) + Math.abs(R), 1.0 / 3.0);\r\n        z = Math.sign(R) * Math.abs(sQ + Q / sQ);\r\n    }\r\n    z = c2 - z;\r\n\r\n    let d1 = z - 3.0 * c2;\r\n    let d2 = z * z - 3.0 * c0;\r\n    if (Math.abs(d1) < 1.0e-4) {\r\n        if (d2 < 0.0) return undefined;\r\n        d2 = Math.sqrt(d2);\r\n    } else {\r\n        if (d1 < 0.0) return undefined;\r\n        d1 = Math.sqrt(d1 / 2.0);\r\n        d2 = c1 / d1;\r\n    }\r\n\r\n    //----------------------------------\r\n\r\n    let result = Number.MAX_VALUE;\r\n\r\n    h = d1 * d1 - z + d2;\r\n    if (h > 0.0) {\r\n        h = Math.sqrt(h);\r\n        let t1 = -d1 - h - k3;\r\n        t1 = po < 0.0 ? 2.0 / t1 : t1;\r\n        let t2 = -d1 + h - k3;\r\n        t2 = po < 0.0 ? 2.0 / t2 : t2;\r\n        if (t1 > 0.0) result = t1;\r\n        if (t2 > 0.0) result = Math.min(result, t2);\r\n    }\r\n\r\n    h = d1 * d1 - z - d2;\r\n    if (h > 0.0) {\r\n        h = Math.sqrt(h);\r\n        let t1 = d1 - h - k3;\r\n        t1 = po < 0.0 ? 2.0 / t1 : t1;\r\n        let t2 = d1 + h - k3;\r\n        t2 = po < 0.0 ? 2.0 / t2 : t2;\r\n        if (t1 > 0.0) result = Math.min(result, t1);\r\n        if (t2 > 0.0) result = Math.min(result, t2);\r\n    }\r\n\r\n    if (result != Number.MAX_VALUE) return result;\r\n}\r\n", "import type { ReadonlyMat4 } from \"gl-matrix\";\r\nimport type { Curve3D } from \"./curves\";\r\n\r\nexport class Edge {\r\n    constructor(\r\n        readonly curve: Curve3D,\r\n        readonly geometryTransformation: ReadonlyMat4,\r\n        readonly instanceIndex: number\r\n    ) { }\r\n}", "\r\nvar Module = (function () {\r\n    var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n\r\n    return (\r\n        function (Module) {\r\n            Module = Module || {};\r\n\r\n\r\n\r\n            // The Module object: Our interface to the outside world. We import\r\n            // and export values on it. There are various ways Module can be used:\r\n            // 1. Not defined. We create it here\r\n            // 2. A function parameter, function(Module) { ..generated code.. }\r\n            // 3. pre-run appended it, var Module = {}; ..generated code..\r\n            // 4. External script tag defines var Module.\r\n            // We need to check if Module already exists (e.g. case 3 above).\r\n            // Substitution will be replaced with actual code on later stage of the build,\r\n            // this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n            // Note that if you want to run closure, and also to use Module\r\n            // after the generated code, you will need to define   var Module = {};\r\n            // before the code. Then that object will be used in the code, and you\r\n            // can continue to use Module afterwards as well.\r\n            var Module = typeof Module !== 'undefined' ? Module : {};\r\n\r\n            // Set up the promise that indicates the Module is initialized\r\n            var readyPromiseResolve, readyPromiseReject;\r\n            Module['ready'] = new Promise(function (resolve, reject) {\r\n                readyPromiseResolve = resolve;\r\n                readyPromiseReject = reject;\r\n            });\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_malloc')) {\r\n                Object.defineProperty(Module['ready'], '_malloc', { configurable: true, get: function () { abort('You are getting _malloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_malloc', { configurable: true, set: function () { abort('You are setting _malloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_free')) {\r\n                Object.defineProperty(Module['ready'], '_free', { configurable: true, get: function () { abort('You are getting _free on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_free', { configurable: true, set: function () { abort('You are setting _free on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_emscripten_stack_get_end')) {\r\n                Object.defineProperty(Module['ready'], '_emscripten_stack_get_end', { configurable: true, get: function () { abort('You are getting _emscripten_stack_get_end on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_emscripten_stack_get_end', { configurable: true, set: function () { abort('You are setting _emscripten_stack_get_end on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_emscripten_stack_get_free')) {\r\n                Object.defineProperty(Module['ready'], '_emscripten_stack_get_free', { configurable: true, get: function () { abort('You are getting _emscripten_stack_get_free on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_emscripten_stack_get_free', { configurable: true, set: function () { abort('You are setting _emscripten_stack_get_free on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_emscripten_stack_init')) {\r\n                Object.defineProperty(Module['ready'], '_emscripten_stack_init', { configurable: true, get: function () { abort('You are getting _emscripten_stack_init on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_emscripten_stack_init', { configurable: true, set: function () { abort('You are setting _emscripten_stack_init on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_stackSave')) {\r\n                Object.defineProperty(Module['ready'], '_stackSave', { configurable: true, get: function () { abort('You are getting _stackSave on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_stackSave', { configurable: true, set: function () { abort('You are setting _stackSave on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_stackRestore')) {\r\n                Object.defineProperty(Module['ready'], '_stackRestore', { configurable: true, get: function () { abort('You are getting _stackRestore on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_stackRestore', { configurable: true, set: function () { abort('You are setting _stackRestore on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_stackAlloc')) {\r\n                Object.defineProperty(Module['ready'], '_stackAlloc', { configurable: true, get: function () { abort('You are getting _stackAlloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_stackAlloc', { configurable: true, set: function () { abort('You are setting _stackAlloc on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '___wasm_call_ctors')) {\r\n                Object.defineProperty(Module['ready'], '___wasm_call_ctors', { configurable: true, get: function () { abort('You are getting ___wasm_call_ctors on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '___wasm_call_ctors', { configurable: true, set: function () { abort('You are setting ___wasm_call_ctors on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_fflush')) {\r\n                Object.defineProperty(Module['ready'], '_fflush', { configurable: true, get: function () { abort('You are getting _fflush on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_fflush', { configurable: true, set: function () { abort('You are setting _fflush on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '___errno_location')) {\r\n                Object.defineProperty(Module['ready'], '___errno_location', { configurable: true, get: function () { abort('You are getting ___errno_location on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '___errno_location', { configurable: true, set: function () { abort('You are setting ___errno_location on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_getNurbsCurve2D')) {\r\n                Object.defineProperty(Module['ready'], '_getNurbsCurve2D', { configurable: true, get: function () { abort('You are getting _getNurbsCurve2D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_getNurbsCurve2D', { configurable: true, set: function () { abort('You are setting _getNurbsCurve2D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_getNurbsCurve2DWithWeights')) {\r\n                Object.defineProperty(Module['ready'], '_getNurbsCurve2DWithWeights', { configurable: true, get: function () { abort('You are getting _getNurbsCurve2DWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_getNurbsCurve2DWithWeights', { configurable: true, set: function () { abort('You are setting _getNurbsCurve2DWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_evalNurbsCurve2D')) {\r\n                Object.defineProperty(Module['ready'], '_evalNurbsCurve2D', { configurable: true, get: function () { abort('You are getting _evalNurbsCurve2D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_evalNurbsCurve2D', { configurable: true, set: function () { abort('You are setting _evalNurbsCurve2D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_evalNurbsCurve2DWithWeights')) {\r\n                Object.defineProperty(Module['ready'], '_evalNurbsCurve2DWithWeights', { configurable: true, get: function () { abort('You are getting _evalNurbsCurve2DWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_evalNurbsCurve2DWithWeights', { configurable: true, set: function () { abort('You are setting _evalNurbsCurve2DWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_projectNurbsCurve2D')) {\r\n                Object.defineProperty(Module['ready'], '_projectNurbsCurve2D', { configurable: true, get: function () { abort('You are getting _projectNurbsCurve2D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_projectNurbsCurve2D', { configurable: true, set: function () { abort('You are setting _projectNurbsCurve2D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_disposeNurbsCurve2D')) {\r\n                Object.defineProperty(Module['ready'], '_disposeNurbsCurve2D', { configurable: true, get: function () { abort('You are getting _disposeNurbsCurve2D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_disposeNurbsCurve2D', { configurable: true, set: function () { abort('You are setting _disposeNurbsCurve2D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_disposeNurbsCurve2DWithWeights')) {\r\n                Object.defineProperty(Module['ready'], '_disposeNurbsCurve2DWithWeights', { configurable: true, get: function () { abort('You are getting _disposeNurbsCurve2DWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_disposeNurbsCurve2DWithWeights', { configurable: true, set: function () { abort('You are setting _disposeNurbsCurve2DWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_getNurbsCurve3D')) {\r\n                Object.defineProperty(Module['ready'], '_getNurbsCurve3D', { configurable: true, get: function () { abort('You are getting _getNurbsCurve3D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_getNurbsCurve3D', { configurable: true, set: function () { abort('You are setting _getNurbsCurve3D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_getNurbsCurve3DWithWeights')) {\r\n                Object.defineProperty(Module['ready'], '_getNurbsCurve3DWithWeights', { configurable: true, get: function () { abort('You are getting _getNurbsCurve3DWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_getNurbsCurve3DWithWeights', { configurable: true, set: function () { abort('You are setting _getNurbsCurve3DWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_evalNurbsCurve3D')) {\r\n                Object.defineProperty(Module['ready'], '_evalNurbsCurve3D', { configurable: true, get: function () { abort('You are getting _evalNurbsCurve3D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_evalNurbsCurve3D', { configurable: true, set: function () { abort('You are setting _evalNurbsCurve3D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_invertNurbsCurve3D')) {\r\n                Object.defineProperty(Module['ready'], '_invertNurbsCurve3D', { configurable: true, get: function () { abort('You are getting _invertNurbsCurve3D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_invertNurbsCurve3D', { configurable: true, set: function () { abort('You are setting _invertNurbsCurve3D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_evalNurbsCurve3DWithWeights')) {\r\n                Object.defineProperty(Module['ready'], '_evalNurbsCurve3DWithWeights', { configurable: true, get: function () { abort('You are getting _evalNurbsCurve3DWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_evalNurbsCurve3DWithWeights', { configurable: true, set: function () { abort('You are setting _evalNurbsCurve3DWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_evalNurbsCurve3dBulk')) {\r\n                Object.defineProperty(Module['ready'], '_evalNurbsCurve3dBulk', { configurable: true, get: function () { abort('You are getting _evalNurbsCurve3dBulk on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_evalNurbsCurve3dBulk', { configurable: true, set: function () { abort('You are setting _evalNurbsCurve3dBulk on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_disposeNurbsCurve3D')) {\r\n                Object.defineProperty(Module['ready'], '_disposeNurbsCurve3D', { configurable: true, get: function () { abort('You are getting _disposeNurbsCurve3D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_disposeNurbsCurve3D', { configurable: true, set: function () { abort('You are setting _disposeNurbsCurve3D on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_disposeNurbsCurve3DWithWeights')) {\r\n                Object.defineProperty(Module['ready'], '_disposeNurbsCurve3DWithWeights', { configurable: true, get: function () { abort('You are getting _disposeNurbsCurve3DWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_disposeNurbsCurve3DWithWeights', { configurable: true, set: function () { abort('You are setting _disposeNurbsCurve3DWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_getNurbsSurface')) {\r\n                Object.defineProperty(Module['ready'], '_getNurbsSurface', { configurable: true, get: function () { abort('You are getting _getNurbsSurface on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_getNurbsSurface', { configurable: true, set: function () { abort('You are setting _getNurbsSurface on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_getNurbsSurfaceWithWeights')) {\r\n                Object.defineProperty(Module['ready'], '_getNurbsSurfaceWithWeights', { configurable: true, get: function () { abort('You are getting _getNurbsSurfaceWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_getNurbsSurfaceWithWeights', { configurable: true, set: function () { abort('You are setting _getNurbsSurfaceWithWeights on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_evalNurbsSurface')) {\r\n                Object.defineProperty(Module['ready'], '_evalNurbsSurface', { configurable: true, get: function () { abort('You are getting _evalNurbsSurface on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_evalNurbsSurface', { configurable: true, set: function () { abort('You are setting _evalNurbsSurface on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_evalNurbsSurfaceBulk')) {\r\n                Object.defineProperty(Module['ready'], '_evalNurbsSurfaceBulk', { configurable: true, get: function () { abort('You are getting _evalNurbsSurfaceBulk on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_evalNurbsSurfaceBulk', { configurable: true, set: function () { abort('You are setting _evalNurbsSurfaceBulk on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '_invertSurface')) {\r\n                Object.defineProperty(Module['ready'], '_invertSurface', { configurable: true, get: function () { abort('You are getting _invertSurface on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '_invertSurface', { configurable: true, set: function () { abort('You are setting _invertSurface on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '__Z19disposeNurbsSurfacePN10novo_nurbs7SurfaceIdEE')) {\r\n                Object.defineProperty(Module['ready'], '__Z19disposeNurbsSurfacePN10novo_nurbs7SurfaceIdEE', { configurable: true, get: function () { abort('You are getting __Z19disposeNurbsSurfacePN10novo_nurbs7SurfaceIdEE on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '__Z19disposeNurbsSurfacePN10novo_nurbs7SurfaceIdEE', { configurable: true, set: function () { abort('You are setting __Z19disposeNurbsSurfacePN10novo_nurbs7SurfaceIdEE on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], '__Z30disposeNurbsSurfaceWithWeightsPN10novo_nurbs15RationalSurfaceIdEE')) {\r\n                Object.defineProperty(Module['ready'], '__Z30disposeNurbsSurfaceWithWeightsPN10novo_nurbs15RationalSurfaceIdEE', { configurable: true, get: function () { abort('You are getting __Z30disposeNurbsSurfaceWithWeightsPN10novo_nurbs15RationalSurfaceIdEE on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], '__Z30disposeNurbsSurfaceWithWeightsPN10novo_nurbs15RationalSurfaceIdEE', { configurable: true, set: function () { abort('You are setting __Z30disposeNurbsSurfaceWithWeightsPN10novo_nurbs15RationalSurfaceIdEE on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module['ready'], 'onRuntimeInitialized')) {\r\n                Object.defineProperty(Module['ready'], 'onRuntimeInitialized', { configurable: true, get: function () { abort('You are getting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n                Object.defineProperty(Module['ready'], 'onRuntimeInitialized', { configurable: true, set: function () { abort('You are setting onRuntimeInitialized on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js') } });\r\n            }\r\n\r\n\r\n            // --pre-jses are emitted after the Module integration code, so that they can\r\n            // refer to Module (if they choose; they can also define Module)\r\n            // {{PRE_JSES}}\r\n\r\n            // Sometimes an existing Module object exists with properties\r\n            // meant to overwrite the default module functionality. Here\r\n            // we collect those properties and reapply _after_ we configure\r\n            // the current environment's defaults to avoid having to be so\r\n            // defensive during initialization.\r\n            var moduleOverrides = {};\r\n            var key;\r\n            for (key in Module) {\r\n                if (Module.hasOwnProperty(key)) {\r\n                    moduleOverrides[key] = Module[key];\r\n                }\r\n            }\r\n\r\n            var arguments_ = [];\r\n            var thisProgram = './this.program';\r\n            var quit_ = function (status, toThrow) {\r\n                throw toThrow;\r\n            };\r\n\r\n            // Determine the runtime environment we are in. You can customize this by\r\n            // setting the ENVIRONMENT setting at compile time (see settings.js).\r\n\r\n            var ENVIRONMENT_IS_WEB = false;\r\n            var ENVIRONMENT_IS_WORKER = true;\r\n            var ENVIRONMENT_IS_NODE = false;\r\n            var ENVIRONMENT_IS_SHELL = false;\r\n\r\n            if (Module['ENVIRONMENT']) {\r\n                throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)');\r\n            }\r\n\r\n            // `/` should be present at the end if `scriptDirectory` is not empty\r\n            var scriptDirectory = '';\r\n            function locateFile(path) {\r\n                if (Module['locateFile']) {\r\n                    return Module['locateFile'](path, scriptDirectory);\r\n                }\r\n                return scriptDirectory + path;\r\n            }\r\n\r\n            // Hooks that are implemented differently in different runtime environments.\r\n            var read_,\r\n                readAsync,\r\n                readBinary,\r\n                setWindowTitle;\r\n\r\n            // Note that this includes Node.js workers when relevant (pthreads is enabled).\r\n            // Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\r\n            // ENVIRONMENT_IS_NODE.\r\n            if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n                if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\r\n                    scriptDirectory = self.location.href;\r\n                } else if (typeof document !== 'undefined' && document.currentScript) { // web\r\n                    scriptDirectory = document.currentScript.src;\r\n                }\r\n                // When MODULARIZE, this JS may be executed later, after document.currentScript\r\n                // is gone, so we saved it, and we use it here instead of any other info.\r\n                if (_scriptDir) {\r\n                    scriptDirectory = _scriptDir;\r\n                }\r\n                // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\r\n                // otherwise, slice off the final part of the url to find the script directory.\r\n                // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\r\n                // and scriptDirectory will correctly be replaced with an empty string.\r\n                if (scriptDirectory.indexOf('blob:') !== 0) {\r\n                    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/') + 1);\r\n                } else {\r\n                    scriptDirectory = '';\r\n                }\r\n\r\n                if (!(typeof window === 'object' || typeof importScripts === 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\r\n\r\n                // Differentiate the Web Worker from the Node Worker case, as reading must\r\n                // be done differently.\r\n                {\r\n\r\n                    // include: web_or_worker_shell_read.js\r\n\r\n\r\n                    read_ = function (url) {\r\n                        var xhr = new XMLHttpRequest();\r\n                        xhr.open('GET', url, false);\r\n                        xhr.send(null);\r\n                        return xhr.responseText;\r\n                    };\r\n\r\n                    if (ENVIRONMENT_IS_WORKER) {\r\n                        readBinary = function (url) {\r\n                            var xhr = new XMLHttpRequest();\r\n                            xhr.open('GET', url, false);\r\n                            xhr.responseType = 'arraybuffer';\r\n                            xhr.send(null);\r\n                            return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\r\n                        };\r\n                    }\r\n\r\n                    readAsync = function (url, onload, onerror) {\r\n                        var xhr = new XMLHttpRequest();\r\n                        xhr.open('GET', url, true);\r\n                        xhr.responseType = 'arraybuffer';\r\n                        xhr.onload = function () {\r\n                            if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n                                onload(xhr.response);\r\n                                return;\r\n                            }\r\n                            onerror();\r\n                        };\r\n                        xhr.onerror = onerror;\r\n                        xhr.send(null);\r\n                    };\r\n\r\n                    // end include: web_or_worker_shell_read.js\r\n                }\r\n\r\n                setWindowTitle = function (title) { document.title = title };\r\n            } else {\r\n                throw new Error('environment detection error');\r\n            }\r\n\r\n            // Set up the out() and err() hooks, which are how we can print to stdout or\r\n            // stderr, respectively.\r\n            var out = Module['print'] || console.log.bind(console);\r\n            var err = Module['printErr'] || console.warn.bind(console);\r\n\r\n            // Merge back in the overrides\r\n            for (key in moduleOverrides) {\r\n                if (moduleOverrides.hasOwnProperty(key)) {\r\n                    Module[key] = moduleOverrides[key];\r\n                }\r\n            }\r\n            // Free the object hierarchy contained in the overrides, this lets the GC\r\n            // reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\r\n            moduleOverrides = null;\r\n\r\n            // Emit code to handle expected values on the Module object. This applies Module.x\r\n            // to the proper local x. This has two benefits: first, we only emit it if it is\r\n            // expected to arrive, and second, by using a local everywhere else that can be\r\n            // minified.\r\n\r\n            if (Module['arguments']) arguments_ = Module['arguments'];\r\n            if (!Object.getOwnPropertyDescriptor(Module, 'arguments')) {\r\n                Object.defineProperty(Module, 'arguments', {\r\n                    configurable: true,\r\n                    get: function () {\r\n                        abort('Module.arguments has been replaced with plain arguments_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (Module['thisProgram']) thisProgram = Module['thisProgram'];\r\n            if (!Object.getOwnPropertyDescriptor(Module, 'thisProgram')) {\r\n                Object.defineProperty(Module, 'thisProgram', {\r\n                    configurable: true,\r\n                    get: function () {\r\n                        abort('Module.thisProgram has been replaced with plain thisProgram (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (Module['quit']) quit_ = Module['quit'];\r\n            if (!Object.getOwnPropertyDescriptor(Module, 'quit')) {\r\n                Object.defineProperty(Module, 'quit', {\r\n                    configurable: true,\r\n                    get: function () {\r\n                        abort('Module.quit has been replaced with plain quit_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')\r\n                    }\r\n                });\r\n            }\r\n\r\n            // perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\r\n            // Assertions on removed incoming Module JS APIs.\r\n            assert(typeof Module['memoryInitializerPrefixURL'] === 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\r\n            assert(typeof Module['pthreadMainPrefixURL'] === 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\r\n            assert(typeof Module['cdInitializerPrefixURL'] === 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\r\n            assert(typeof Module['filePackagePrefixURL'] === 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\r\n            assert(typeof Module['read'] === 'undefined', 'Module.read option was removed (modify read_ in JS)');\r\n            assert(typeof Module['readAsync'] === 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\r\n            assert(typeof Module['readBinary'] === 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\r\n            assert(typeof Module['setWindowTitle'] === 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');\r\n            assert(typeof Module['TOTAL_MEMORY'] === 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module, 'read')) {\r\n                Object.defineProperty(Module, 'read', {\r\n                    configurable: true,\r\n                    get: function () {\r\n                        abort('Module.read has been replaced with plain read_ (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module, 'readAsync')) {\r\n                Object.defineProperty(Module, 'readAsync', {\r\n                    configurable: true,\r\n                    get: function () {\r\n                        abort('Module.readAsync has been replaced with plain readAsync (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module, 'readBinary')) {\r\n                Object.defineProperty(Module, 'readBinary', {\r\n                    configurable: true,\r\n                    get: function () {\r\n                        abort('Module.readBinary has been replaced with plain readBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module, 'setWindowTitle')) {\r\n                Object.defineProperty(Module, 'setWindowTitle', {\r\n                    configurable: true,\r\n                    get: function () {\r\n                        abort('Module.setWindowTitle has been replaced with plain setWindowTitle (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')\r\n                    }\r\n                });\r\n            }\r\n            var IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\r\n            var PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\r\n            var WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\r\n            var NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\r\n\r\n\r\n\r\n\r\n            var STACK_ALIGN = 16;\r\n\r\n            function alignMemory(size, factor) {\r\n                if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default\r\n                return Math.ceil(size / factor) * factor;\r\n            }\r\n\r\n            function getNativeTypeSize(type) {\r\n                switch (type) {\r\n                    case 'i1': case 'i8': return 1;\r\n                    case 'i16': return 2;\r\n                    case 'i32': return 4;\r\n                    case 'i64': return 8;\r\n                    case 'float': return 4;\r\n                    case 'double': return 8;\r\n                    default: {\r\n                        if (type[type.length - 1] === '*') {\r\n                            return 4; // A pointer\r\n                        } else if (type[0] === 'i') {\r\n                            var bits = Number(type.substr(1));\r\n                            assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);\r\n                            return bits / 8;\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            function warnOnce(text) {\r\n                if (!warnOnce.shown) warnOnce.shown = {};\r\n                if (!warnOnce.shown[text]) {\r\n                    warnOnce.shown[text] = 1;\r\n                    err(text);\r\n                }\r\n            }\r\n\r\n            // include: runtime_functions.js\r\n\r\n\r\n            // Wraps a JS function as a wasm function with a given signature.\r\n            function convertJsFunctionToWasm(func, sig) {\r\n\r\n                // If the type reflection proposal is available, use the new\r\n                // \"WebAssembly.Function\" constructor.\r\n                // Otherwise, construct a minimal wasm module importing the JS function and\r\n                // re-exporting it.\r\n                if (typeof WebAssembly.Function === \"function\") {\r\n                    var typeNames = {\r\n                        'i': 'i32',\r\n                        'j': 'i64',\r\n                        'f': 'f32',\r\n                        'd': 'f64'\r\n                    };\r\n                    var type = {\r\n                        parameters: [],\r\n                        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\r\n                    };\r\n                    for (var i = 1; i < sig.length; ++i) {\r\n                        type.parameters.push(typeNames[sig[i]]);\r\n                    }\r\n                    return new WebAssembly.Function(type, func);\r\n                }\r\n\r\n                // The module is static, with the exception of the type section, which is\r\n                // generated based on the signature passed in.\r\n                var typeSection = [\r\n                    0x01, // id: section,\r\n                    0x00, // length: 0 (placeholder)\r\n                    0x01, // count: 1\r\n                    0x60, // form: func\r\n                ];\r\n                var sigRet = sig.slice(0, 1);\r\n                var sigParam = sig.slice(1);\r\n                var typeCodes = {\r\n                    'i': 0x7f, // i32\r\n                    'j': 0x7e, // i64\r\n                    'f': 0x7d, // f32\r\n                    'd': 0x7c, // f64\r\n                };\r\n\r\n                // Parameters, length + signatures\r\n                typeSection.push(sigParam.length);\r\n                for (var i = 0; i < sigParam.length; ++i) {\r\n                    typeSection.push(typeCodes[sigParam[i]]);\r\n                }\r\n\r\n                // Return values, length + signatures\r\n                // With no multi-return in MVP, either 0 (void) or 1 (anything else)\r\n                if (sigRet == 'v') {\r\n                    typeSection.push(0x00);\r\n                } else {\r\n                    typeSection = typeSection.concat([0x01, typeCodes[sigRet]]);\r\n                }\r\n\r\n                // Write the overall length of the type section back into the section header\r\n                // (excepting the 2 bytes for the section id and length)\r\n                typeSection[1] = typeSection.length - 2;\r\n\r\n                // Rest of the module is static\r\n                var bytes = new Uint8Array([\r\n                    0x00, 0x61, 0x73, 0x6d, // magic (\"\\0asm\")\r\n                    0x01, 0x00, 0x00, 0x00, // version: 1\r\n                ].concat(typeSection, [\r\n                    0x02, 0x07, // import section\r\n                    // (import \"e\" \"f\" (func 0 (type 0)))\r\n                    0x01, 0x01, 0x65, 0x01, 0x66, 0x00, 0x00,\r\n                    0x07, 0x05, // export section\r\n                    // (export \"f\" (func 0 (type 0)))\r\n                    0x01, 0x01, 0x66, 0x00, 0x00,\r\n                ]));\r\n\r\n                // We can compile this wasm module synchronously because it is very small.\r\n                // This accepts an import (at \"e.f\"), that it reroutes to an export (at \"f\")\r\n                var module = new WebAssembly.Module(bytes);\r\n                var instance = new WebAssembly.Instance(module, {\r\n                    'e': {\r\n                        'f': func\r\n                    }\r\n                });\r\n                var wrappedFunc = instance.exports['f'];\r\n                return wrappedFunc;\r\n            }\r\n\r\n            var freeTableIndexes = [];\r\n\r\n            // Weak map of functions in the table to their indexes, created on first use.\r\n            var functionsInTableMap;\r\n\r\n            function getEmptyTableSlot() {\r\n                // Reuse a free index if there is one, otherwise grow.\r\n                if (freeTableIndexes.length) {\r\n                    return freeTableIndexes.pop();\r\n                }\r\n                // Grow the table\r\n                try {\r\n                    wasmTable.grow(1);\r\n                } catch (err) {\r\n                    if (!(err instanceof RangeError)) {\r\n                        throw err;\r\n                    }\r\n                    throw 'Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.';\r\n                }\r\n                return wasmTable.length - 1;\r\n            }\r\n\r\n            // Add a wasm function to the table.\r\n            function addFunctionWasm(func, sig) {\r\n                // Check if the function is already in the table, to ensure each function\r\n                // gets a unique index. First, create the map if this is the first use.\r\n                if (!functionsInTableMap) {\r\n                    functionsInTableMap = new WeakMap();\r\n                    for (var i = 0; i < wasmTable.length; i++) {\r\n                        var item = wasmTable.get(i);\r\n                        // Ignore null values.\r\n                        if (item) {\r\n                            functionsInTableMap.set(item, i);\r\n                        }\r\n                    }\r\n                }\r\n                if (functionsInTableMap.has(func)) {\r\n                    return functionsInTableMap.get(func);\r\n                }\r\n\r\n                // It's not in the table, add it now.\r\n\r\n                var ret = getEmptyTableSlot();\r\n\r\n                // Set the new value.\r\n                try {\r\n                    // Attempting to call this with JS function will cause of table.set() to fail\r\n                    wasmTable.set(ret, func);\r\n                } catch (err) {\r\n                    if (!(err instanceof TypeError)) {\r\n                        throw err;\r\n                    }\r\n                    assert(typeof sig !== 'undefined', 'Missing signature argument to addFunction: ' + func);\r\n                    var wrapped = convertJsFunctionToWasm(func, sig);\r\n                    wasmTable.set(ret, wrapped);\r\n                }\r\n\r\n                functionsInTableMap.set(func, ret);\r\n\r\n                return ret;\r\n            }\r\n\r\n            function removeFunction(index) {\r\n                functionsInTableMap.delete(wasmTable.get(index));\r\n                freeTableIndexes.push(index);\r\n            }\r\n\r\n            // 'sig' parameter is required for the llvm backend but only when func is not\r\n            // already a WebAssembly function.\r\n            function addFunction(func, sig) {\r\n                assert(typeof func !== 'undefined');\r\n\r\n                return addFunctionWasm(func, sig);\r\n            }\r\n\r\n            // end include: runtime_functions.js\r\n            // include: runtime_debug.js\r\n\r\n\r\n            // end include: runtime_debug.js\r\n            var tempRet0 = 0;\r\n\r\n            var setTempRet0 = function (value) {\r\n                tempRet0 = value;\r\n            };\r\n\r\n            var getTempRet0 = function () {\r\n                return tempRet0;\r\n            };\r\n\r\n\r\n\r\n            // === Preamble library stuff ===\r\n\r\n            // Documentation for the public APIs defined in this file must be updated in:\r\n            //    site/source/docs/api_reference/preamble.js.rst\r\n            // A prebuilt local version of the documentation is available at:\r\n            //    site/build/text/docs/api_reference/preamble.js.txt\r\n            // You can also build docs locally as HTML or other formats in site/\r\n            // An online HTML version (which may be of a different version of Emscripten)\r\n            //    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\n\r\n            var wasmBinary;\r\n            if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\r\n            if (!Object.getOwnPropertyDescriptor(Module, 'wasmBinary')) {\r\n                Object.defineProperty(Module, 'wasmBinary', {\r\n                    configurable: true,\r\n                    get: function () {\r\n                        abort('Module.wasmBinary has been replaced with plain wasmBinary (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')\r\n                    }\r\n                });\r\n            }\r\n            var noExitRuntime = Module['noExitRuntime'] || true;\r\n            if (!Object.getOwnPropertyDescriptor(Module, 'noExitRuntime')) {\r\n                Object.defineProperty(Module, 'noExitRuntime', {\r\n                    configurable: true,\r\n                    get: function () {\r\n                        abort('Module.noExitRuntime has been replaced with plain noExitRuntime (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (typeof WebAssembly !== 'object') {\r\n                abort('no native wasm support detected');\r\n            }\r\n\r\n            // include: runtime_safe_heap.js\r\n\r\n\r\n            // In MINIMAL_RUNTIME, setValue() and getValue() are only available when building with safe heap enabled, for heap safety checking.\r\n            // In traditional runtime, setValue() and getValue() are always available (although their use is highly discouraged due to perf penalties)\r\n\r\n            /** @param {number} ptr\r\n                @param {number} value\r\n                @param {string} type\r\n                @param {number|boolean=} noSafe */\r\n            function setValue(ptr, value, type, noSafe) {\r\n                type = type || 'i8';\r\n                if (type.charAt(type.length - 1) === '*') type = 'i32'; // pointers are 32-bit\r\n                switch (type) {\r\n                    case 'i1': HEAP8[((ptr) >> 0)] = value; break;\r\n                    case 'i8': HEAP8[((ptr) >> 0)] = value; break;\r\n                    case 'i16': HEAP16[((ptr) >> 1)] = value; break;\r\n                    case 'i32': HEAP32[((ptr) >> 2)] = value; break;\r\n                    case 'i64': (tempI64 = [value >>> 0, (tempDouble = value, (+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble) / 4294967296.0))), 4294967295.0)) | 0) >>> 0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble))) >>> 0)) / 4294967296.0))))) >>> 0) : 0)], HEAP32[((ptr) >> 2)] = tempI64[0], HEAP32[(((ptr) + (4)) >> 2)] = tempI64[1]); break;\r\n                    case 'float': HEAPF32[((ptr) >> 2)] = value; break;\r\n                    case 'double': HEAPF64[((ptr) >> 3)] = value; break;\r\n                    default: abort('invalid type for setValue: ' + type);\r\n                }\r\n            }\r\n\r\n            /** @param {number} ptr\r\n                @param {string} type\r\n                @param {number|boolean=} noSafe */\r\n            function getValue(ptr, type, noSafe) {\r\n                type = type || 'i8';\r\n                if (type.charAt(type.length - 1) === '*') type = 'i32'; // pointers are 32-bit\r\n                switch (type) {\r\n                    case 'i1': return HEAP8[((ptr) >> 0)];\r\n                    case 'i8': return HEAP8[((ptr) >> 0)];\r\n                    case 'i16': return HEAP16[((ptr) >> 1)];\r\n                    case 'i32': return HEAP32[((ptr) >> 2)];\r\n                    case 'i64': return HEAP32[((ptr) >> 2)];\r\n                    case 'float': return HEAPF32[((ptr) >> 2)];\r\n                    case 'double': return HEAPF64[((ptr) >> 3)];\r\n                    default: abort('invalid type for getValue: ' + type);\r\n                }\r\n                return null;\r\n            }\r\n\r\n            // end include: runtime_safe_heap.js\r\n            // Wasm globals\r\n\r\n            var wasmMemory;\r\n\r\n            //========================================\r\n            // Runtime essentials\r\n            //========================================\r\n\r\n            // whether we are quitting the application. no code should run after this.\r\n            // set in exit() and abort()\r\n            var ABORT = false;\r\n\r\n            // set by exit() and abort().  Passed to 'onExit' handler.\r\n            // NOTE: This is also used as the process return code code in shell environments\r\n            // but only when noExitRuntime is false.\r\n            var EXITSTATUS;\r\n\r\n            /** @type {function(*, string=)} */\r\n            function assert(condition, text) {\r\n                if (!condition) {\r\n                    abort('Assertion failed: ' + text);\r\n                }\r\n            }\r\n\r\n            // Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\r\n            function getCFunc(ident) {\r\n                var func = Module['_' + ident]; // closure exported function\r\n                assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\r\n                return func;\r\n            }\r\n\r\n            // C calling interface.\r\n            /** @param {string|null=} returnType\r\n                @param {Array=} argTypes\r\n                @param {Arguments|Array=} args\r\n                @param {Object=} opts */\r\n            function ccall(ident, returnType, argTypes, args, opts) {\r\n                // For fast lookup of conversion functions\r\n                var toC = {\r\n                    'string': function (str) {\r\n                        var ret = 0;\r\n                        if (str !== null && str !== undefined && str !== 0) { // null string\r\n                            // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\r\n                            var len = (str.length << 2) + 1;\r\n                            ret = stackAlloc(len);\r\n                            stringToUTF8(str, ret, len);\r\n                        }\r\n                        return ret;\r\n                    },\r\n                    'array': function (arr) {\r\n                        var ret = stackAlloc(arr.length);\r\n                        writeArrayToMemory(arr, ret);\r\n                        return ret;\r\n                    }\r\n                };\r\n\r\n                function convertReturnValue(ret) {\r\n                    if (returnType === 'string') return UTF8ToString(ret);\r\n                    if (returnType === 'boolean') return Boolean(ret);\r\n                    return ret;\r\n                }\r\n\r\n                var func = getCFunc(ident);\r\n                var cArgs = [];\r\n                var stack = 0;\r\n                assert(returnType !== 'array', 'Return type should not be \"array\".');\r\n                if (args) {\r\n                    for (var i = 0; i < args.length; i++) {\r\n                        var converter = toC[argTypes[i]];\r\n                        if (converter) {\r\n                            if (stack === 0) stack = stackSave();\r\n                            cArgs[i] = converter(args[i]);\r\n                        } else {\r\n                            cArgs[i] = args[i];\r\n                        }\r\n                    }\r\n                }\r\n                var ret = func.apply(null, cArgs);\r\n\r\n                ret = convertReturnValue(ret);\r\n                if (stack !== 0) stackRestore(stack);\r\n                return ret;\r\n            }\r\n\r\n            /** @param {string=} returnType\r\n                @param {Array=} argTypes\r\n                @param {Object=} opts */\r\n            function cwrap(ident, returnType, argTypes, opts) {\r\n                return function () {\r\n                    return ccall(ident, returnType, argTypes, arguments, opts);\r\n                }\r\n            }\r\n\r\n            // We used to include malloc/free by default in the past. Show a helpful error in\r\n            // builds with assertions.\r\n\r\n            var ALLOC_NORMAL = 0; // Tries to use _malloc()\r\n            var ALLOC_STACK = 1; // Lives for the duration of the current function call\r\n\r\n            // allocate(): This is for internal use. You can use it yourself as well, but the interface\r\n            //             is a little tricky (see docs right below). The reason is that it is optimized\r\n            //             for multiple syntaxes to save space in generated code. So you should\r\n            //             normally not use allocate(), and instead allocate memory using _malloc(),\r\n            //             initialize it with setValue(), and so forth.\r\n            // @slab: An array of data.\r\n            // @allocator: How to allocate memory, see ALLOC_*\r\n            /** @type {function((Uint8Array|Array<number>), number)} */\r\n            function allocate(slab, allocator) {\r\n                var ret;\r\n                assert(typeof allocator === 'number', 'allocate no longer takes a type argument')\r\n                assert(typeof slab !== 'number', 'allocate no longer takes a number as arg0')\r\n\r\n                if (allocator == ALLOC_STACK) {\r\n                    ret = stackAlloc(slab.length);\r\n                } else {\r\n                    ret = _malloc(slab.length);\r\n                }\r\n\r\n                if (slab.subarray || slab.slice) {\r\n                    HEAPU8.set(/** @type {!Uint8Array} */(slab), ret);\r\n                } else {\r\n                    HEAPU8.set(new Uint8Array(slab), ret);\r\n                }\r\n                return ret;\r\n            }\r\n\r\n            // include: runtime_strings.js\r\n\r\n\r\n            // runtime_strings.js: Strings related runtime functions that are part of both MINIMAL_RUNTIME and regular runtime.\r\n\r\n            // Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\r\n            // a copy of that string as a Javascript String object.\r\n\r\n            var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\r\n\r\n            /**\r\n             * @param {number} idx\r\n             * @param {number=} maxBytesToRead\r\n             * @return {string}\r\n             */\r\n            function UTF8ArrayToString(heap, idx, maxBytesToRead) {\r\n                var endIdx = idx + maxBytesToRead;\r\n                var endPtr = idx;\r\n                // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\r\n                // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\r\n                // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)\r\n                while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n\r\n                if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\r\n                    return UTF8Decoder.decode(heap.subarray(idx, endPtr));\r\n                } else {\r\n                    var str = '';\r\n                    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that\r\n                    while (idx < endPtr) {\r\n                        // For UTF8 byte structure, see:\r\n                        // http://en.wikipedia.org/wiki/UTF-8#Description\r\n                        // https://www.ietf.org/rfc/rfc2279.txt\r\n                        // https://tools.ietf.org/html/rfc3629\r\n                        var u0 = heap[idx++];\r\n                        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\r\n                        var u1 = heap[idx++] & 63;\r\n                        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\r\n                        var u2 = heap[idx++] & 63;\r\n                        if ((u0 & 0xF0) == 0xE0) {\r\n                            u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n                        } else {\r\n                            if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte 0x' + u0.toString(16) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\r\n                            u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heap[idx++] & 63);\r\n                        }\r\n\r\n                        if (u0 < 0x10000) {\r\n                            str += String.fromCharCode(u0);\r\n                        } else {\r\n                            var ch = u0 - 0x10000;\r\n                            str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n                        }\r\n                    }\r\n                }\r\n                return str;\r\n            }\r\n\r\n            // Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a\r\n            // copy of that string as a Javascript String object.\r\n            // maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit\r\n            //                 this parameter to scan the string until the first \\0 byte. If maxBytesToRead is\r\n            //                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the\r\n            //                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will\r\n            //                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)\r\n            //                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may\r\n            //                 throw JS JIT optimizations off, so it is worth to consider consistently using one\r\n            //                 style or the other.\r\n            /**\r\n             * @param {number} ptr\r\n             * @param {number=} maxBytesToRead\r\n             * @return {string}\r\n             */\r\n            function UTF8ToString(ptr, maxBytesToRead) {\r\n                return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\r\n            }\r\n\r\n            // Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\r\n            // encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\r\n            // Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\r\n            // Parameters:\r\n            //   str: the Javascript string to copy.\r\n            //   heap: the array to copy to. Each index in this array is assumed to be one 8-byte element.\r\n            //   outIdx: The starting offset in the array to begin the copying.\r\n            //   maxBytesToWrite: The maximum number of bytes this function can write to the array.\r\n            //                    This count should include the null terminator,\r\n            //                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\r\n            //                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\r\n            // Returns the number of bytes written, EXCLUDING the null terminator.\r\n\r\n            function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\r\n                if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\r\n                    return 0;\r\n\r\n                var startIdx = outIdx;\r\n                var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\r\n                for (var i = 0; i < str.length; ++i) {\r\n                    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\r\n                    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n                    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\r\n                    var u = str.charCodeAt(i); // possibly a lead surrogate\r\n                    if (u >= 0xD800 && u <= 0xDFFF) {\r\n                        var u1 = str.charCodeAt(++i);\r\n                        u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\r\n                    }\r\n                    if (u <= 0x7F) {\r\n                        if (outIdx >= endIdx) break;\r\n                        heap[outIdx++] = u;\r\n                    } else if (u <= 0x7FF) {\r\n                        if (outIdx + 1 >= endIdx) break;\r\n                        heap[outIdx++] = 0xC0 | (u >> 6);\r\n                        heap[outIdx++] = 0x80 | (u & 63);\r\n                    } else if (u <= 0xFFFF) {\r\n                        if (outIdx + 2 >= endIdx) break;\r\n                        heap[outIdx++] = 0xE0 | (u >> 12);\r\n                        heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n                        heap[outIdx++] = 0x80 | (u & 63);\r\n                    } else {\r\n                        if (outIdx + 3 >= endIdx) break;\r\n                        if (u >= 0x200000) warnOnce('Invalid Unicode code point 0x' + u.toString(16) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x1FFFFF).');\r\n                        heap[outIdx++] = 0xF0 | (u >> 18);\r\n                        heap[outIdx++] = 0x80 | ((u >> 12) & 63);\r\n                        heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n                        heap[outIdx++] = 0x80 | (u & 63);\r\n                    }\r\n                }\r\n                // Null-terminate the pointer to the buffer.\r\n                heap[outIdx] = 0;\r\n                return outIdx - startIdx;\r\n            }\r\n\r\n            // Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\r\n            // null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\r\n            // Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\r\n            // Returns the number of bytes written, EXCLUDING the null terminator.\r\n\r\n            function stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n                assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\r\n                return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\r\n            }\r\n\r\n            // Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\r\n            function lengthBytesUTF8(str) {\r\n                var len = 0;\r\n                for (var i = 0; i < str.length; ++i) {\r\n                    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\r\n                    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n                    var u = str.charCodeAt(i); // possibly a lead surrogate\r\n                    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\r\n                    if (u <= 0x7F) ++len;\r\n                    else if (u <= 0x7FF) len += 2;\r\n                    else if (u <= 0xFFFF) len += 3;\r\n                    else len += 4;\r\n                }\r\n                return len;\r\n            }\r\n\r\n            // end include: runtime_strings.js\r\n            // include: runtime_strings_extra.js\r\n\r\n\r\n            // runtime_strings_extra.js: Strings related runtime functions that are available only in regular runtime.\r\n\r\n            // Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\r\n            // a copy of that string as a Javascript String object.\r\n\r\n            function AsciiToString(ptr) {\r\n                var str = '';\r\n                while (1) {\r\n                    var ch = HEAPU8[((ptr++) >> 0)];\r\n                    if (!ch) return str;\r\n                    str += String.fromCharCode(ch);\r\n                }\r\n            }\r\n\r\n            // Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\r\n            // null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\r\n\r\n            function stringToAscii(str, outPtr) {\r\n                return writeAsciiToMemory(str, outPtr, false);\r\n            }\r\n\r\n            // Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\r\n            // a copy of that string as a Javascript String object.\r\n\r\n            var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\r\n\r\n            function UTF16ToString(ptr, maxBytesToRead) {\r\n                assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\r\n                var endPtr = ptr;\r\n                // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\r\n                // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\r\n                var idx = endPtr >> 1;\r\n                var maxIdx = idx + maxBytesToRead / 2;\r\n                // If maxBytesToRead is not passed explicitly, it will be undefined, and this\r\n                // will always evaluate to true. This saves on code size.\r\n                while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\r\n                endPtr = idx << 1;\r\n\r\n                if (endPtr - ptr > 32 && UTF16Decoder) {\r\n                    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\r\n                } else {\r\n                    var str = '';\r\n\r\n                    // If maxBytesToRead is not passed explicitly, it will be undefined, and the for-loop's condition\r\n                    // will always evaluate to true. The loop is then terminated on the first null char.\r\n                    for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\r\n                        var codeUnit = HEAP16[(((ptr) + (i * 2)) >> 1)];\r\n                        if (codeUnit == 0) break;\r\n                        // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\r\n                        str += String.fromCharCode(codeUnit);\r\n                    }\r\n\r\n                    return str;\r\n                }\r\n            }\r\n\r\n            // Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\r\n            // null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\r\n            // Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\r\n            // Parameters:\r\n            //   str: the Javascript string to copy.\r\n            //   outPtr: Byte address in Emscripten HEAP where to write the string to.\r\n            //   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\r\n            //                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\r\n            //                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\r\n            // Returns the number of bytes written, EXCLUDING the null terminator.\r\n\r\n            function stringToUTF16(str, outPtr, maxBytesToWrite) {\r\n                assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\r\n                assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\r\n                // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\r\n                if (maxBytesToWrite === undefined) {\r\n                    maxBytesToWrite = 0x7FFFFFFF;\r\n                }\r\n                if (maxBytesToWrite < 2) return 0;\r\n                maxBytesToWrite -= 2; // Null terminator.\r\n                var startPtr = outPtr;\r\n                var numCharsToWrite = (maxBytesToWrite < str.length * 2) ? (maxBytesToWrite / 2) : str.length;\r\n                for (var i = 0; i < numCharsToWrite; ++i) {\r\n                    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\r\n                    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\r\n                    HEAP16[((outPtr) >> 1)] = codeUnit;\r\n                    outPtr += 2;\r\n                }\r\n                // Null-terminate the pointer to the HEAP.\r\n                HEAP16[((outPtr) >> 1)] = 0;\r\n                return outPtr - startPtr;\r\n            }\r\n\r\n            // Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\r\n\r\n            function lengthBytesUTF16(str) {\r\n                return str.length * 2;\r\n            }\r\n\r\n            function UTF32ToString(ptr, maxBytesToRead) {\r\n                assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\r\n                var i = 0;\r\n\r\n                var str = '';\r\n                // If maxBytesToRead is not passed explicitly, it will be undefined, and this\r\n                // will always evaluate to true. This saves on code size.\r\n                while (!(i >= maxBytesToRead / 4)) {\r\n                    var utf32 = HEAP32[(((ptr) + (i * 4)) >> 2)];\r\n                    if (utf32 == 0) break;\r\n                    ++i;\r\n                    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\r\n                    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n                    if (utf32 >= 0x10000) {\r\n                        var ch = utf32 - 0x10000;\r\n                        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n                    } else {\r\n                        str += String.fromCharCode(utf32);\r\n                    }\r\n                }\r\n                return str;\r\n            }\r\n\r\n            // Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\r\n            // null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\r\n            // Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\r\n            // Parameters:\r\n            //   str: the Javascript string to copy.\r\n            //   outPtr: Byte address in Emscripten HEAP where to write the string to.\r\n            //   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\r\n            //                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\r\n            //                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\r\n            // Returns the number of bytes written, EXCLUDING the null terminator.\r\n\r\n            function stringToUTF32(str, outPtr, maxBytesToWrite) {\r\n                assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\r\n                assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\r\n                // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\r\n                if (maxBytesToWrite === undefined) {\r\n                    maxBytesToWrite = 0x7FFFFFFF;\r\n                }\r\n                if (maxBytesToWrite < 4) return 0;\r\n                var startPtr = outPtr;\r\n                var endPtr = startPtr + maxBytesToWrite - 4;\r\n                for (var i = 0; i < str.length; ++i) {\r\n                    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\r\n                    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n                    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\r\n                    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\r\n                        var trailSurrogate = str.charCodeAt(++i);\r\n                        codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\r\n                    }\r\n                    HEAP32[((outPtr) >> 2)] = codeUnit;\r\n                    outPtr += 4;\r\n                    if (outPtr + 4 > endPtr) break;\r\n                }\r\n                // Null-terminate the pointer to the HEAP.\r\n                HEAP32[((outPtr) >> 2)] = 0;\r\n                return outPtr - startPtr;\r\n            }\r\n\r\n            // Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\r\n\r\n            function lengthBytesUTF32(str) {\r\n                var len = 0;\r\n                for (var i = 0; i < str.length; ++i) {\r\n                    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\r\n                    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n                    var codeUnit = str.charCodeAt(i);\r\n                    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\r\n                    len += 4;\r\n                }\r\n\r\n                return len;\r\n            }\r\n\r\n            // Allocate heap space for a JS string, and write it there.\r\n            // It is the responsibility of the caller to free() that memory.\r\n            function allocateUTF8(str) {\r\n                var size = lengthBytesUTF8(str) + 1;\r\n                var ret = _malloc(size);\r\n                if (ret) stringToUTF8Array(str, HEAP8, ret, size);\r\n                return ret;\r\n            }\r\n\r\n            // Allocate stack space for a JS string, and write it there.\r\n            function allocateUTF8OnStack(str) {\r\n                var size = lengthBytesUTF8(str) + 1;\r\n                var ret = stackAlloc(size);\r\n                stringToUTF8Array(str, HEAP8, ret, size);\r\n                return ret;\r\n            }\r\n\r\n            // Deprecated: This function should not be called because it is unsafe and does not provide\r\n            // a maximum length limit of how many bytes it is allowed to write. Prefer calling the\r\n            // function stringToUTF8Array() instead, which takes in a maximum length that can be used\r\n            // to be secure from out of bounds writes.\r\n            /** @deprecated\r\n                @param {boolean=} dontAddNull */\r\n            function writeStringToMemory(string, buffer, dontAddNull) {\r\n                warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\r\n\r\n                var /** @type {number} */ lastChar, /** @type {number} */ end;\r\n                if (dontAddNull) {\r\n                    // stringToUTF8Array always appends null. If we don't want to do that, remember the\r\n                    // character that existed at the location where the null will be placed, and restore\r\n                    // that after the write (below).\r\n                    end = buffer + lengthBytesUTF8(string);\r\n                    lastChar = HEAP8[end];\r\n                }\r\n                stringToUTF8(string, buffer, Infinity);\r\n                if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\r\n            }\r\n\r\n            function writeArrayToMemory(array, buffer) {\r\n                assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')\r\n                HEAP8.set(array, buffer);\r\n            }\r\n\r\n            /** @param {boolean=} dontAddNull */\r\n            function writeAsciiToMemory(str, buffer, dontAddNull) {\r\n                for (var i = 0; i < str.length; ++i) {\r\n                    assert(str.charCodeAt(i) === str.charCodeAt(i) & 0xff);\r\n                    HEAP8[((buffer++) >> 0)] = str.charCodeAt(i);\r\n                }\r\n                // Null-terminate the pointer to the HEAP.\r\n                if (!dontAddNull) HEAP8[((buffer) >> 0)] = 0;\r\n            }\r\n\r\n            // end include: runtime_strings_extra.js\r\n            // Memory management\r\n\r\n            function alignUp(x, multiple) {\r\n                if (x % multiple > 0) {\r\n                    x += multiple - (x % multiple);\r\n                }\r\n                return x;\r\n            }\r\n\r\n            var HEAP,\r\n                /** @type {ArrayBuffer} */\r\n                buffer,\r\n                /** @type {Int8Array} */\r\n                HEAP8,\r\n                /** @type {Uint8Array} */\r\n                HEAPU8,\r\n                /** @type {Int16Array} */\r\n                HEAP16,\r\n                /** @type {Uint16Array} */\r\n                HEAPU16,\r\n                /** @type {Int32Array} */\r\n                HEAP32,\r\n                /** @type {Uint32Array} */\r\n                HEAPU32,\r\n                /** @type {Float32Array} */\r\n                HEAPF32,\r\n                /** @type {Float64Array} */\r\n                HEAPF64;\r\n\r\n            function updateGlobalBufferAndViews(buf) {\r\n                buffer = buf;\r\n                Module['HEAP8'] = HEAP8 = new Int8Array(buf);\r\n                Module['HEAP16'] = HEAP16 = new Int16Array(buf);\r\n                Module['HEAP32'] = HEAP32 = new Int32Array(buf);\r\n                Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);\r\n                Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);\r\n                Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);\r\n                Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);\r\n                Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);\r\n            }\r\n\r\n            var TOTAL_STACK = 5242880;\r\n            if (Module['TOTAL_STACK']) assert(TOTAL_STACK === Module['TOTAL_STACK'], 'the stack size can no longer be determined at runtime')\r\n\r\n            var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\r\n            if (!Object.getOwnPropertyDescriptor(Module, 'INITIAL_MEMORY')) {\r\n                Object.defineProperty(Module, 'INITIAL_MEMORY', {\r\n                    configurable: true,\r\n                    get: function () {\r\n                        abort('Module.INITIAL_MEMORY has been replaced with plain INITIAL_MEMORY (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)')\r\n                    }\r\n                });\r\n            }\r\n\r\n            assert(INITIAL_MEMORY >= TOTAL_STACK, 'INITIAL_MEMORY should be larger than TOTAL_STACK, was ' + INITIAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');\r\n\r\n            // check for full engine support (use string 'subarray' to avoid closure compiler confusion)\r\n            assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,\r\n                'JS engine does not provide full typed array support');\r\n\r\n            // If memory is defined in wasm, the user can't provide it.\r\n            assert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -s IMPORTED_MEMORY to define wasmMemory externally');\r\n            assert(INITIAL_MEMORY == 16777216, 'Detected runtime INITIAL_MEMORY setting.  Use -s IMPORTED_MEMORY to define wasmMemory dynamically');\r\n\r\n            // include: runtime_init_table.js\r\n            // In regular non-RELOCATABLE mode the table is exported\r\n            // from the wasm module and this will be assigned once\r\n            // the exports are available.\r\n            var wasmTable;\r\n\r\n            // end include: runtime_init_table.js\r\n            // include: runtime_stack_check.js\r\n\r\n\r\n            // Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\r\n            function writeStackCookie() {\r\n                var max = _emscripten_stack_get_end();\r\n                assert((max & 3) == 0);\r\n                // The stack grows downwards\r\n                HEAPU32[(max >> 2) + 1] = 0x2135467;\r\n                HEAPU32[(max >> 2) + 2] = 0x89BACDFE;\r\n                // Also test the global address 0 for integrity.\r\n                HEAP32[0] = 0x63736d65; /* 'emsc' */\r\n            }\r\n\r\n            function checkStackCookie() {\r\n                if (ABORT) return;\r\n                var max = _emscripten_stack_get_end();\r\n                var cookie1 = HEAPU32[(max >> 2) + 1];\r\n                var cookie2 = HEAPU32[(max >> 2) + 2];\r\n                if (cookie1 != 0x2135467 || cookie2 != 0x89BACDFE) {\r\n                    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x2135467, but received 0x' + cookie2.toString(16) + ' ' + cookie1.toString(16));\r\n                }\r\n                // Also test the global address 0 for integrity.\r\n                if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\r\n            }\r\n\r\n            // end include: runtime_stack_check.js\r\n            // include: runtime_assertions.js\r\n\r\n\r\n            // Endianness check\r\n            (function () {\r\n                var h16 = new Int16Array(1);\r\n                var h8 = new Int8Array(h16.buffer);\r\n                h16[0] = 0x6373;\r\n                if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -s SUPPORT_BIG_ENDIAN=1 to bypass)';\r\n            })();\r\n\r\n            // end include: runtime_assertions.js\r\n            var __ATPRERUN__ = []; // functions called before the runtime is initialized\r\n            var __ATINIT__ = []; // functions called during startup\r\n            var __ATMAIN__ = []; // functions called when main() is to be run\r\n            var __ATEXIT__ = []; // functions called during shutdown\r\n            var __ATPOSTRUN__ = []; // functions called after the main() is called\r\n\r\n            var runtimeInitialized = false;\r\n            var runtimeExited = false;\r\n\r\n            function preRun() {\r\n\r\n                if (Module['preRun']) {\r\n                    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\r\n                    while (Module['preRun'].length) {\r\n                        addOnPreRun(Module['preRun'].shift());\r\n                    }\r\n                }\r\n\r\n                callRuntimeCallbacks(__ATPRERUN__);\r\n            }\r\n\r\n            function initRuntime() {\r\n                checkStackCookie();\r\n                assert(!runtimeInitialized);\r\n                runtimeInitialized = true;\r\n\r\n\r\n                callRuntimeCallbacks(__ATINIT__);\r\n            }\r\n\r\n            function exitRuntime() {\r\n                checkStackCookie();\r\n                runtimeExited = true;\r\n            }\r\n\r\n            function postRun() {\r\n                checkStackCookie();\r\n\r\n                if (Module['postRun']) {\r\n                    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\r\n                    while (Module['postRun'].length) {\r\n                        addOnPostRun(Module['postRun'].shift());\r\n                    }\r\n                }\r\n\r\n                callRuntimeCallbacks(__ATPOSTRUN__);\r\n            }\r\n\r\n            function addOnPreRun(cb) {\r\n                __ATPRERUN__.unshift(cb);\r\n            }\r\n\r\n            function addOnInit(cb) {\r\n                __ATINIT__.unshift(cb);\r\n            }\r\n\r\n            function addOnPreMain(cb) {\r\n                __ATMAIN__.unshift(cb);\r\n            }\r\n\r\n            function addOnExit(cb) {\r\n            }\r\n\r\n            function addOnPostRun(cb) {\r\n                __ATPOSTRUN__.unshift(cb);\r\n            }\r\n\r\n            // include: runtime_math.js\r\n\r\n\r\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\r\n\r\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\r\n\r\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\n\r\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\r\n\r\n            assert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\r\n            assert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\r\n            assert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\r\n            assert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\r\n\r\n            // end include: runtime_math.js\r\n            // A counter of dependencies for calling run(). If we need to\r\n            // do asynchronous work before running, increment this and\r\n            // decrement it. Incrementing must happen in a place like\r\n            // Module.preRun (used by emcc to add file preloading).\r\n            // Note that you can add dependencies in preRun, even though\r\n            // it happens right before run - run will be postponed until\r\n            // the dependencies are met.\r\n            var runDependencies = 0;\r\n            var runDependencyWatcher = null;\r\n            var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\r\n            var runDependencyTracking = {};\r\n\r\n            function getUniqueRunDependency(id) {\r\n                var orig = id;\r\n                while (1) {\r\n                    if (!runDependencyTracking[id]) return id;\r\n                    id = orig + Math.random();\r\n                }\r\n            }\r\n\r\n            function addRunDependency(id) {\r\n                runDependencies++;\r\n\r\n                if (Module['monitorRunDependencies']) {\r\n                    Module['monitorRunDependencies'](runDependencies);\r\n                }\r\n\r\n                if (id) {\r\n                    assert(!runDependencyTracking[id]);\r\n                    runDependencyTracking[id] = 1;\r\n                    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {\r\n                        // Check for missing dependencies every few seconds\r\n                        runDependencyWatcher = setInterval(function () {\r\n                            if (ABORT) {\r\n                                clearInterval(runDependencyWatcher);\r\n                                runDependencyWatcher = null;\r\n                                return;\r\n                            }\r\n                            var shown = false;\r\n                            for (var dep in runDependencyTracking) {\r\n                                if (!shown) {\r\n                                    shown = true;\r\n                                    err('still waiting on run dependencies:');\r\n                                }\r\n                                err('dependency: ' + dep);\r\n                            }\r\n                            if (shown) {\r\n                                err('(end of list)');\r\n                            }\r\n                        }, 10000);\r\n                    }\r\n                } else {\r\n                    err('warning: run dependency added without ID');\r\n                }\r\n            }\r\n\r\n            function removeRunDependency(id) {\r\n                runDependencies--;\r\n\r\n                if (Module['monitorRunDependencies']) {\r\n                    Module['monitorRunDependencies'](runDependencies);\r\n                }\r\n\r\n                if (id) {\r\n                    assert(runDependencyTracking[id]);\r\n                    delete runDependencyTracking[id];\r\n                } else {\r\n                    err('warning: run dependency removed without ID');\r\n                }\r\n                if (runDependencies == 0) {\r\n                    if (runDependencyWatcher !== null) {\r\n                        clearInterval(runDependencyWatcher);\r\n                        runDependencyWatcher = null;\r\n                    }\r\n                    if (dependenciesFulfilled) {\r\n                        var callback = dependenciesFulfilled;\r\n                        dependenciesFulfilled = null;\r\n                        callback(); // can add another dependenciesFulfilled\r\n                    }\r\n                }\r\n            }\r\n\r\n            Module[\"preloadedImages\"] = {}; // maps url to image data\r\n            Module[\"preloadedAudios\"] = {}; // maps url to audio data\r\n\r\n            /** @param {string|number=} what */\r\n            function abort(what) {\r\n                if (Module['onAbort']) {\r\n                    Module['onAbort'](what);\r\n                }\r\n\r\n                what += '';\r\n                err(what);\r\n\r\n                ABORT = true;\r\n                EXITSTATUS = 1;\r\n\r\n                var output = 'abort(' + what + ') at ' + stackTrace();\r\n                what = output;\r\n\r\n                // Use a wasm runtime error, because a JS error might be seen as a foreign\r\n                // exception, which means we'd run destructors on it. We need the error to\r\n                // simply make the program stop.\r\n                var e = new WebAssembly.RuntimeError(what);\r\n\r\n                readyPromiseReject(e);\r\n                // Throw the error whether or not MODULARIZE is set because abort is used\r\n                // in code paths apart from instantiation where an exception is expected\r\n                // to be thrown when abort is called.\r\n                throw e;\r\n            }\r\n\r\n            // {{MEM_INITIALIZER}}\r\n\r\n            // include: memoryprofiler.js\r\n\r\n\r\n            // end include: memoryprofiler.js\r\n            // show errors on likely calls to FS when it was not included\r\n            var FS = {\r\n                error: function () {\r\n                    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');\r\n                },\r\n                init: function () { FS.error() },\r\n                createDataFile: function () { FS.error() },\r\n                createPreloadedFile: function () { FS.error() },\r\n                createLazyFile: function () { FS.error() },\r\n                open: function () { FS.error() },\r\n                mkdev: function () { FS.error() },\r\n                registerDevice: function () { FS.error() },\r\n                analyzePath: function () { FS.error() },\r\n                loadFilesFromDB: function () { FS.error() },\r\n\r\n                ErrnoError: function ErrnoError() { FS.error() },\r\n            };\r\n            Module['FS_createDataFile'] = FS.createDataFile;\r\n            Module['FS_createPreloadedFile'] = FS.createPreloadedFile;\r\n\r\n            // include: URIUtils.js\r\n\r\n\r\n            // Prefix of data URIs emitted by SINGLE_FILE and related options.\r\n            var dataURIPrefix = 'data:application/octet-stream;base64,';\r\n\r\n            // Indicates whether filename is a base64 data URI.\r\n            function isDataURI(filename) {\r\n                // Prefix of data URIs emitted by SINGLE_FILE and related options.\r\n                return filename.startsWith(dataURIPrefix);\r\n            }\r\n\r\n            // Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\n            function isFileURI(filename) {\r\n                return filename.startsWith('file://');\r\n            }\r\n\r\n            // end include: URIUtils.js\r\n            function createExportWrapper(name, fixedasm) {\r\n                return function () {\r\n                    var displayName = name;\r\n                    var asm = fixedasm;\r\n                    if (!fixedasm) {\r\n                        asm = Module['asm'];\r\n                    }\r\n                    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');\r\n                    assert(!runtimeExited, 'native function `' + displayName + '` called after runtime exit (use NO_EXIT_RUNTIME to keep it alive after main() exits)');\r\n                    if (!asm[name]) {\r\n                        assert(asm[name], 'exported native function `' + displayName + '` not found');\r\n                    }\r\n                    return asm[name].apply(null, arguments);\r\n                };\r\n            }\r\n\r\n            var wasmBinaryFile;\r\n            wasmBinaryFile = 'nurbs.wasm';\r\n            if (!isDataURI(wasmBinaryFile)) {\r\n                wasmBinaryFile = locateFile(wasmBinaryFile);\r\n            }\r\n\r\n            function getBinary(file) {\r\n                try {\r\n                    if (file == wasmBinaryFile && wasmBinary) {\r\n                        return new Uint8Array(wasmBinary);\r\n                    }\r\n                    if (readBinary) {\r\n                        return readBinary(file);\r\n                    } else {\r\n                        throw \"both async and sync fetching of the wasm failed\";\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    abort(err);\r\n                }\r\n            }\r\n\r\n            function getBinaryPromise() {\r\n                // If we don't have the binary yet, try to to load it asynchronously.\r\n                // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\r\n                // See https://github.com/github/fetch/pull/92#issuecomment-140665932\r\n                // Cordova or Electron apps are typically loaded from a file:// url.\r\n                // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\r\n                if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n                    if (typeof fetch === 'function'\r\n                    ) {\r\n                        return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (response) {\r\n                            if (!response['ok']) {\r\n                                throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\r\n                            }\r\n                            return response['arrayBuffer']();\r\n                        }).catch(function () {\r\n                            return getBinary(wasmBinaryFile);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Otherwise, getBinary should be able to get it synchronously\r\n                return Promise.resolve().then(function () { return getBinary(wasmBinaryFile); });\r\n            }\r\n\r\n            // Create the wasm instance.\r\n            // Receives the wasm imports, returns the exports.\r\n            function createWasm() {\r\n                // prepare imports\r\n                var info = {\r\n                    'env': asmLibraryArg,\r\n                    'wasi_snapshot_preview1': asmLibraryArg,\r\n                };\r\n                // Load the wasm module and create an instance of using native support in the JS engine.\r\n                // handle a generated wasm instance, receiving its exports and\r\n                // performing other necessary setup\r\n                /** @param {WebAssembly.Module=} module*/\r\n                function receiveInstance(instance, module) {\r\n                    var exports = instance.exports;\r\n\r\n                    Module['asm'] = exports;\r\n\r\n                    wasmMemory = Module['asm']['memory'];\r\n                    assert(wasmMemory, \"memory not found in wasm exports\");\r\n                    // This assertion doesn't hold when emscripten is run in --post-link\r\n                    // mode.\r\n                    // TODO(sbc): Read INITIAL_MEMORY out of the wasm file in post-link mode.\r\n                    //assert(wasmMemory.buffer.byteLength === 16777216);\r\n                    updateGlobalBufferAndViews(wasmMemory.buffer);\r\n\r\n                    wasmTable = Module['asm']['__indirect_function_table'];\r\n                    assert(wasmTable, \"table not found in wasm exports\");\r\n\r\n                    addOnInit(Module['asm']['__wasm_call_ctors']);\r\n\r\n                    removeRunDependency('wasm-instantiate');\r\n                }\r\n                // we can't run yet (except in a pthread, where we have a custom sync instantiator)\r\n                addRunDependency('wasm-instantiate');\r\n\r\n                // Prefer streaming instantiation if available.\r\n                // Async compilation can be confusing when an error on the page overwrites Module\r\n                // (for example, if the order of elements is wrong, and the one defining Module is\r\n                // later), so we save Module and check it later.\r\n                var trueModule = Module;\r\n                function receiveInstantiationResult(result) {\r\n                    // 'result' is a ResultObject object which has both the module and instance.\r\n                    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n                    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\r\n                    trueModule = null;\r\n                    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\r\n                    // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.\r\n                    receiveInstance(result['instance']);\r\n                }\r\n\r\n                function instantiateArrayBuffer(receiver) {\r\n                    return getBinaryPromise().then(function (binary) {\r\n                        var result = WebAssembly.instantiate(binary, info);\r\n                        return result;\r\n                    }).then(receiver, function (reason) {\r\n                        err('failed to asynchronously prepare wasm: ' + reason);\r\n\r\n                        // Warn on some common problems.\r\n                        if (isFileURI(wasmBinaryFile)) {\r\n                            err('warning: Loading from a file URI (' + wasmBinaryFile + ') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');\r\n                        }\r\n                        abort(reason);\r\n                    });\r\n                }\r\n\r\n                function instantiateAsync() {\r\n                    if (!wasmBinary &&\r\n                        typeof WebAssembly.instantiateStreaming === 'function' &&\r\n                        !isDataURI(wasmBinaryFile) &&\r\n                        typeof fetch === 'function') {\r\n                        return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (response) {\r\n                            var result = WebAssembly.instantiateStreaming(response, info);\r\n                            return result.then(receiveInstantiationResult, function (reason) {\r\n                                // We expect the most common failure cause to be a bad MIME type for the binary,\r\n                                // in which case falling back to ArrayBuffer instantiation should work.\r\n                                err('wasm streaming compile failed: ' + reason);\r\n                                err('falling back to ArrayBuffer instantiation');\r\n                                return instantiateArrayBuffer(receiveInstantiationResult);\r\n                            });\r\n                        });\r\n                    } else {\r\n                        return instantiateArrayBuffer(receiveInstantiationResult);\r\n                    }\r\n                }\r\n\r\n                // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\r\n                // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\r\n                // to any other async startup actions they are performing.\r\n                if (Module['instantiateWasm']) {\r\n                    try {\r\n                        var exports = Module['instantiateWasm'](info, receiveInstance);\r\n                        return exports;\r\n                    } catch (e) {\r\n                        err('Module.instantiateWasm callback failed with error: ' + e);\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // If instantiation fails, reject the module ready promise.\r\n                instantiateAsync().catch(readyPromiseReject);\r\n                return {}; // no exports yet; we'll fill them in later\r\n            }\r\n\r\n            // Globals used by JS i64 conversions (see makeSetValue)\r\n            var tempDouble;\r\n            var tempI64;\r\n\r\n            // === Body ===\r\n\r\n            var ASM_CONSTS = {\r\n\r\n            };\r\n\r\n\r\n\r\n\r\n\r\n\r\n            function callRuntimeCallbacks(callbacks) {\r\n                while (callbacks.length > 0) {\r\n                    var callback = callbacks.shift();\r\n                    if (typeof callback == 'function') {\r\n                        callback(Module); // Pass the module as the first argument.\r\n                        continue;\r\n                    }\r\n                    var func = callback.func;\r\n                    if (typeof func === 'number') {\r\n                        if (callback.arg === undefined) {\r\n                            wasmTable.get(func)();\r\n                        } else {\r\n                            wasmTable.get(func)(callback.arg);\r\n                        }\r\n                    } else {\r\n                        func(callback.arg === undefined ? null : callback.arg);\r\n                    }\r\n                }\r\n            }\r\n\r\n            function demangle(func) {\r\n                warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');\r\n                return func;\r\n            }\r\n\r\n            function demangleAll(text) {\r\n                var regex =\r\n                    /\\b_Z[\\w\\d_]+/g;\r\n                return text.replace(regex,\r\n                    function (x) {\r\n                        var y = demangle(x);\r\n                        return x === y ? x : (y + ' [' + x + ']');\r\n                    });\r\n            }\r\n\r\n            function jsStackTrace() {\r\n                var error = new Error();\r\n                if (!error.stack) {\r\n                    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\r\n                    // so try that as a special-case.\r\n                    try {\r\n                        throw new Error();\r\n                    } catch (e) {\r\n                        error = e;\r\n                    }\r\n                    if (!error.stack) {\r\n                        return '(no stack trace available)';\r\n                    }\r\n                }\r\n                return error.stack.toString();\r\n            }\r\n\r\n            var runtimeKeepaliveCounter = 0;\r\n            function keepRuntimeAlive() {\r\n                return noExitRuntime || runtimeKeepaliveCounter > 0;\r\n            }\r\n\r\n            function stackTrace() {\r\n                var js = jsStackTrace();\r\n                if (Module['extraStackTrace']) js += '\\n' + Module['extraStackTrace']();\r\n                return demangleAll(js);\r\n            }\r\n\r\n            function ___assert_fail(condition, filename, line, func) {\r\n                abort('Assertion failed: ' + UTF8ToString(condition) + ', at: ' + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\r\n            }\r\n\r\n            var ExceptionInfoAttrs = { DESTRUCTOR_OFFSET: 0, REFCOUNT_OFFSET: 4, TYPE_OFFSET: 8, CAUGHT_OFFSET: 12, RETHROWN_OFFSET: 13, SIZE: 16 };\r\n            function ___cxa_allocate_exception(size) {\r\n                // Thrown object is prepended by exception metadata block\r\n                return _malloc(size + ExceptionInfoAttrs.SIZE) + ExceptionInfoAttrs.SIZE;\r\n            }\r\n\r\n            function ExceptionInfo(excPtr) {\r\n                this.excPtr = excPtr;\r\n                this.ptr = excPtr - ExceptionInfoAttrs.SIZE;\r\n\r\n                this.set_type = function (type) {\r\n                    HEAP32[(((this.ptr) + (ExceptionInfoAttrs.TYPE_OFFSET)) >> 2)] = type;\r\n                };\r\n\r\n                this.get_type = function () {\r\n                    return HEAP32[(((this.ptr) + (ExceptionInfoAttrs.TYPE_OFFSET)) >> 2)];\r\n                };\r\n\r\n                this.set_destructor = function (destructor) {\r\n                    HEAP32[(((this.ptr) + (ExceptionInfoAttrs.DESTRUCTOR_OFFSET)) >> 2)] = destructor;\r\n                };\r\n\r\n                this.get_destructor = function () {\r\n                    return HEAP32[(((this.ptr) + (ExceptionInfoAttrs.DESTRUCTOR_OFFSET)) >> 2)];\r\n                };\r\n\r\n                this.set_refcount = function (refcount) {\r\n                    HEAP32[(((this.ptr) + (ExceptionInfoAttrs.REFCOUNT_OFFSET)) >> 2)] = refcount;\r\n                };\r\n\r\n                this.set_caught = function (caught) {\r\n                    caught = caught ? 1 : 0;\r\n                    HEAP8[(((this.ptr) + (ExceptionInfoAttrs.CAUGHT_OFFSET)) >> 0)] = caught;\r\n                };\r\n\r\n                this.get_caught = function () {\r\n                    return HEAP8[(((this.ptr) + (ExceptionInfoAttrs.CAUGHT_OFFSET)) >> 0)] != 0;\r\n                };\r\n\r\n                this.set_rethrown = function (rethrown) {\r\n                    rethrown = rethrown ? 1 : 0;\r\n                    HEAP8[(((this.ptr) + (ExceptionInfoAttrs.RETHROWN_OFFSET)) >> 0)] = rethrown;\r\n                };\r\n\r\n                this.get_rethrown = function () {\r\n                    return HEAP8[(((this.ptr) + (ExceptionInfoAttrs.RETHROWN_OFFSET)) >> 0)] != 0;\r\n                };\r\n\r\n                // Initialize native structure fields. Should be called once after allocated.\r\n                this.init = function (type, destructor) {\r\n                    this.set_type(type);\r\n                    this.set_destructor(destructor);\r\n                    this.set_refcount(0);\r\n                    this.set_caught(false);\r\n                    this.set_rethrown(false);\r\n                }\r\n\r\n                this.add_ref = function () {\r\n                    var value = HEAP32[(((this.ptr) + (ExceptionInfoAttrs.REFCOUNT_OFFSET)) >> 2)];\r\n                    HEAP32[(((this.ptr) + (ExceptionInfoAttrs.REFCOUNT_OFFSET)) >> 2)] = value + 1;\r\n                };\r\n\r\n                // Returns true if last reference released.\r\n                this.release_ref = function () {\r\n                    var prev = HEAP32[(((this.ptr) + (ExceptionInfoAttrs.REFCOUNT_OFFSET)) >> 2)];\r\n                    HEAP32[(((this.ptr) + (ExceptionInfoAttrs.REFCOUNT_OFFSET)) >> 2)] = prev - 1;\r\n                    assert(prev > 0);\r\n                    return prev === 1;\r\n                };\r\n            }\r\n\r\n            var exceptionLast = 0;\r\n\r\n            var uncaughtExceptionCount = 0;\r\n            function ___cxa_throw(ptr, type, destructor) {\r\n                var info = new ExceptionInfo(ptr);\r\n                // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\r\n                info.init(type, destructor);\r\n                exceptionLast = ptr;\r\n                uncaughtExceptionCount++;\r\n                throw ptr + \" - Exception catching is disabled, this exception cannot be caught. Compile with -s NO_DISABLE_EXCEPTION_CATCHING or -s EXCEPTION_CATCHING_ALLOWED=[..] to catch.\";\r\n            }\r\n\r\n            function _abort() {\r\n                abort();\r\n            }\r\n\r\n            function _emscripten_memcpy_big(dest, src, num) {\r\n                HEAPU8.copyWithin(dest, src, src + num);\r\n            }\r\n\r\n            function abortOnCannotGrowMemory(requestedSize) {\r\n                abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with  -s INITIAL_MEMORY=X  with X higher than the current value ' + HEAP8.length + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');\r\n            }\r\n            function _emscripten_resize_heap(requestedSize) {\r\n                var oldSize = HEAPU8.length;\r\n                requestedSize = requestedSize >>> 0;\r\n                abortOnCannotGrowMemory(requestedSize);\r\n            }\r\n            var ASSERTIONS = true;\r\n\r\n\r\n\r\n            /** @type {function(string, boolean=, number=)} */\r\n            function intArrayFromString(stringy, dontAddNull, length) {\r\n                var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\r\n                var u8array = new Array(len);\r\n                var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n                if (dontAddNull) u8array.length = numBytesWritten;\r\n                return u8array;\r\n            }\r\n\r\n            function intArrayToString(array) {\r\n                var ret = [];\r\n                for (var i = 0; i < array.length; i++) {\r\n                    var chr = array[i];\r\n                    if (chr > 0xFF) {\r\n                        if (ASSERTIONS) {\r\n                            assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\r\n                        }\r\n                        chr &= 0xFF;\r\n                    }\r\n                    ret.push(String.fromCharCode(chr));\r\n                }\r\n                return ret.join('');\r\n            }\r\n\r\n\r\n            var asmLibraryArg = {\r\n                \"__assert_fail\": ___assert_fail,\r\n                \"__cxa_allocate_exception\": ___cxa_allocate_exception,\r\n                \"__cxa_throw\": ___cxa_throw,\r\n                \"abort\": _abort,\r\n                \"emscripten_memcpy_big\": _emscripten_memcpy_big,\r\n                \"emscripten_resize_heap\": _emscripten_resize_heap\r\n            };\r\n            var asm = createWasm();\r\n            /** @type {function(...*):?} */\r\n            var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = createExportWrapper(\"__wasm_call_ctors\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _getNurbsCurve2D = Module[\"_getNurbsCurve2D\"] = createExportWrapper(\"getNurbsCurve2D\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _getNurbsCurve2DWithWeights = Module[\"_getNurbsCurve2DWithWeights\"] = createExportWrapper(\"getNurbsCurve2DWithWeights\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _evalNurbsCurve2D = Module[\"_evalNurbsCurve2D\"] = createExportWrapper(\"evalNurbsCurve2D\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _evalNurbsCurve2DWithWeights = Module[\"_evalNurbsCurve2DWithWeights\"] = createExportWrapper(\"evalNurbsCurve2DWithWeights\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _projectNurbsCurve2D = Module[\"_projectNurbsCurve2D\"] = createExportWrapper(\"projectNurbsCurve2D\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _disposeNurbsCurve2D = Module[\"_disposeNurbsCurve2D\"] = createExportWrapper(\"disposeNurbsCurve2D\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _disposeNurbsCurve2DWithWeights = Module[\"_disposeNurbsCurve2DWithWeights\"] = createExportWrapper(\"disposeNurbsCurve2DWithWeights\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _getNurbsCurve3D = Module[\"_getNurbsCurve3D\"] = createExportWrapper(\"getNurbsCurve3D\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _getNurbsCurve3DWithWeights = Module[\"_getNurbsCurve3DWithWeights\"] = createExportWrapper(\"getNurbsCurve3DWithWeights\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _evalNurbsCurve3D = Module[\"_evalNurbsCurve3D\"] = createExportWrapper(\"evalNurbsCurve3D\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _invertNurbsCurve3D = Module[\"_invertNurbsCurve3D\"] = createExportWrapper(\"invertNurbsCurve3D\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _evalNurbsCurve3DWithWeights = Module[\"_evalNurbsCurve3DWithWeights\"] = createExportWrapper(\"evalNurbsCurve3DWithWeights\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _evalNurbsCurve3dBulk = Module[\"_evalNurbsCurve3dBulk\"] = createExportWrapper(\"evalNurbsCurve3dBulk\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _disposeNurbsCurve3D = Module[\"_disposeNurbsCurve3D\"] = createExportWrapper(\"disposeNurbsCurve3D\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _disposeNurbsCurve3DWithWeights = Module[\"_disposeNurbsCurve3DWithWeights\"] = createExportWrapper(\"disposeNurbsCurve3DWithWeights\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _getNurbsSurface = Module[\"_getNurbsSurface\"] = createExportWrapper(\"getNurbsSurface\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _getNurbsSurfaceWithWeights = Module[\"_getNurbsSurfaceWithWeights\"] = createExportWrapper(\"getNurbsSurfaceWithWeights\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _evalNurbsSurface = Module[\"_evalNurbsSurface\"] = createExportWrapper(\"evalNurbsSurface\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _evalNurbsSurfaceBulk = Module[\"_evalNurbsSurfaceBulk\"] = createExportWrapper(\"evalNurbsSurfaceBulk\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _invertSurface = Module[\"_invertSurface\"] = createExportWrapper(\"invertSurface\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var __Z19disposeNurbsSurfacePN10novo_nurbs7SurfaceIdEE = Module[\"__Z19disposeNurbsSurfacePN10novo_nurbs7SurfaceIdEE\"] = createExportWrapper(\"_Z19disposeNurbsSurfacePN10novo_nurbs7SurfaceIdEE\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var __Z30disposeNurbsSurfaceWithWeightsPN10novo_nurbs15RationalSurfaceIdEE = Module[\"__Z30disposeNurbsSurfaceWithWeightsPN10novo_nurbs15RationalSurfaceIdEE\"] = createExportWrapper(\"_Z30disposeNurbsSurfaceWithWeightsPN10novo_nurbs15RationalSurfaceIdEE\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var ___errno_location = Module[\"___errno_location\"] = createExportWrapper(\"__errno_location\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var stackSave = Module[\"stackSave\"] = createExportWrapper(\"stackSave\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var stackRestore = Module[\"stackRestore\"] = createExportWrapper(\"stackRestore\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var stackAlloc = Module[\"stackAlloc\"] = createExportWrapper(\"stackAlloc\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _emscripten_stack_init = Module[\"_emscripten_stack_init\"] = function () {\r\n                return (_emscripten_stack_init = Module[\"_emscripten_stack_init\"] = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\r\n            };\r\n\r\n            /** @type {function(...*):?} */\r\n            var _emscripten_stack_get_free = Module[\"_emscripten_stack_get_free\"] = function () {\r\n                return (_emscripten_stack_get_free = Module[\"_emscripten_stack_get_free\"] = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\r\n            };\r\n\r\n            /** @type {function(...*):?} */\r\n            var _emscripten_stack_get_end = Module[\"_emscripten_stack_get_end\"] = function () {\r\n                return (_emscripten_stack_get_end = Module[\"_emscripten_stack_get_end\"] = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\r\n            };\r\n\r\n            /** @type {function(...*):?} */\r\n            var _malloc = Module[\"_malloc\"] = createExportWrapper(\"malloc\");\r\n\r\n            /** @type {function(...*):?} */\r\n            var _free = Module[\"_free\"] = createExportWrapper(\"free\");\r\n\r\n\r\n\r\n\r\n\r\n            // === Auto-generated postamble setup entry stuff ===\r\n\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"intArrayFromString\")) Module[\"intArrayFromString\"] = function () { abort(\"'intArrayFromString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"intArrayToString\")) Module[\"intArrayToString\"] = function () { abort(\"'intArrayToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"ccall\")) Module[\"ccall\"] = function () { abort(\"'ccall' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"cwrap\")) Module[\"cwrap\"] = function () { abort(\"'cwrap' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"setValue\")) Module[\"setValue\"] = function () { abort(\"'setValue' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getValue\")) Module[\"getValue\"] = function () { abort(\"'getValue' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"allocate\")) Module[\"allocate\"] = function () { abort(\"'allocate' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"UTF8ArrayToString\")) Module[\"UTF8ArrayToString\"] = function () { abort(\"'UTF8ArrayToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"UTF8ToString\")) Module[\"UTF8ToString\"] = function () { abort(\"'UTF8ToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF8Array\")) Module[\"stringToUTF8Array\"] = function () { abort(\"'stringToUTF8Array' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF8\")) Module[\"stringToUTF8\"] = function () { abort(\"'stringToUTF8' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"lengthBytesUTF8\")) Module[\"lengthBytesUTF8\"] = function () { abort(\"'lengthBytesUTF8' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"stackTrace\")) Module[\"stackTrace\"] = function () { abort(\"'stackTrace' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"addOnPreRun\")) Module[\"addOnPreRun\"] = function () { abort(\"'addOnPreRun' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"addOnInit\")) Module[\"addOnInit\"] = function () { abort(\"'addOnInit' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"addOnPreMain\")) Module[\"addOnPreMain\"] = function () { abort(\"'addOnPreMain' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"addOnExit\")) Module[\"addOnExit\"] = function () { abort(\"'addOnExit' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"addOnPostRun\")) Module[\"addOnPostRun\"] = function () { abort(\"'addOnPostRun' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"writeStringToMemory\")) Module[\"writeStringToMemory\"] = function () { abort(\"'writeStringToMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"writeArrayToMemory\")) Module[\"writeArrayToMemory\"] = function () { abort(\"'writeArrayToMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"writeAsciiToMemory\")) Module[\"writeAsciiToMemory\"] = function () { abort(\"'writeAsciiToMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"addRunDependency\")) Module[\"addRunDependency\"] = function () { abort(\"'addRunDependency' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"removeRunDependency\")) Module[\"removeRunDependency\"] = function () { abort(\"'removeRunDependency' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"FS_createFolder\")) Module[\"FS_createFolder\"] = function () { abort(\"'FS_createFolder' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"FS_createPath\")) Module[\"FS_createPath\"] = function () { abort(\"'FS_createPath' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"FS_createDataFile\")) Module[\"FS_createDataFile\"] = function () { abort(\"'FS_createDataFile' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"FS_createPreloadedFile\")) Module[\"FS_createPreloadedFile\"] = function () { abort(\"'FS_createPreloadedFile' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"FS_createLazyFile\")) Module[\"FS_createLazyFile\"] = function () { abort(\"'FS_createLazyFile' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"FS_createLink\")) Module[\"FS_createLink\"] = function () { abort(\"'FS_createLink' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"FS_createDevice\")) Module[\"FS_createDevice\"] = function () { abort(\"'FS_createDevice' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"FS_unlink\")) Module[\"FS_unlink\"] = function () { abort(\"'FS_unlink' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getLEB\")) Module[\"getLEB\"] = function () { abort(\"'getLEB' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getFunctionTables\")) Module[\"getFunctionTables\"] = function () { abort(\"'getFunctionTables' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"alignFunctionTables\")) Module[\"alignFunctionTables\"] = function () { abort(\"'alignFunctionTables' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerFunctions\")) Module[\"registerFunctions\"] = function () { abort(\"'registerFunctions' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"addFunction\")) Module[\"addFunction\"] = function () { abort(\"'addFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"removeFunction\")) Module[\"removeFunction\"] = function () { abort(\"'removeFunction' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getFuncWrapper\")) Module[\"getFuncWrapper\"] = function () { abort(\"'getFuncWrapper' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"prettyPrint\")) Module[\"prettyPrint\"] = function () { abort(\"'prettyPrint' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"dynCall\")) Module[\"dynCall\"] = function () { abort(\"'dynCall' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getCompilerSetting\")) Module[\"getCompilerSetting\"] = function () { abort(\"'getCompilerSetting' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"print\")) Module[\"print\"] = function () { abort(\"'print' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"printErr\")) Module[\"printErr\"] = function () { abort(\"'printErr' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getTempRet0\")) Module[\"getTempRet0\"] = function () { abort(\"'getTempRet0' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"setTempRet0\")) Module[\"setTempRet0\"] = function () { abort(\"'setTempRet0' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"callMain\")) Module[\"callMain\"] = function () { abort(\"'callMain' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"abort\")) Module[\"abort\"] = function () { abort(\"'abort' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"stringToNewUTF8\")) Module[\"stringToNewUTF8\"] = function () { abort(\"'stringToNewUTF8' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"setFileTime\")) Module[\"setFileTime\"] = function () { abort(\"'setFileTime' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"abortOnCannotGrowMemory\")) Module[\"abortOnCannotGrowMemory\"] = function () { abort(\"'abortOnCannotGrowMemory' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"emscripten_realloc_buffer\")) Module[\"emscripten_realloc_buffer\"] = function () { abort(\"'emscripten_realloc_buffer' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"ENV\")) Module[\"ENV\"] = function () { abort(\"'ENV' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"ERRNO_CODES\")) Module[\"ERRNO_CODES\"] = function () { abort(\"'ERRNO_CODES' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"ERRNO_MESSAGES\")) Module[\"ERRNO_MESSAGES\"] = function () { abort(\"'ERRNO_MESSAGES' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"setErrNo\")) Module[\"setErrNo\"] = function () { abort(\"'setErrNo' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"inetPton4\")) Module[\"inetPton4\"] = function () { abort(\"'inetPton4' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"inetNtop4\")) Module[\"inetNtop4\"] = function () { abort(\"'inetNtop4' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"inetPton6\")) Module[\"inetPton6\"] = function () { abort(\"'inetPton6' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"inetNtop6\")) Module[\"inetNtop6\"] = function () { abort(\"'inetNtop6' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"readSockaddr\")) Module[\"readSockaddr\"] = function () { abort(\"'readSockaddr' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"writeSockaddr\")) Module[\"writeSockaddr\"] = function () { abort(\"'writeSockaddr' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"DNS\")) Module[\"DNS\"] = function () { abort(\"'DNS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getHostByName\")) Module[\"getHostByName\"] = function () { abort(\"'getHostByName' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"GAI_ERRNO_MESSAGES\")) Module[\"GAI_ERRNO_MESSAGES\"] = function () { abort(\"'GAI_ERRNO_MESSAGES' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"Protocols\")) Module[\"Protocols\"] = function () { abort(\"'Protocols' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"Sockets\")) Module[\"Sockets\"] = function () { abort(\"'Sockets' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getRandomDevice\")) Module[\"getRandomDevice\"] = function () { abort(\"'getRandomDevice' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"traverseStack\")) Module[\"traverseStack\"] = function () { abort(\"'traverseStack' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"UNWIND_CACHE\")) Module[\"UNWIND_CACHE\"] = function () { abort(\"'UNWIND_CACHE' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"withBuiltinMalloc\")) Module[\"withBuiltinMalloc\"] = function () { abort(\"'withBuiltinMalloc' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"readAsmConstArgsArray\")) Module[\"readAsmConstArgsArray\"] = function () { abort(\"'readAsmConstArgsArray' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"readAsmConstArgs\")) Module[\"readAsmConstArgs\"] = function () { abort(\"'readAsmConstArgs' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"mainThreadEM_ASM\")) Module[\"mainThreadEM_ASM\"] = function () { abort(\"'mainThreadEM_ASM' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"jstoi_q\")) Module[\"jstoi_q\"] = function () { abort(\"'jstoi_q' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"jstoi_s\")) Module[\"jstoi_s\"] = function () { abort(\"'jstoi_s' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getExecutableName\")) Module[\"getExecutableName\"] = function () { abort(\"'getExecutableName' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"listenOnce\")) Module[\"listenOnce\"] = function () { abort(\"'listenOnce' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"autoResumeAudioContext\")) Module[\"autoResumeAudioContext\"] = function () { abort(\"'autoResumeAudioContext' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"dynCallLegacy\")) Module[\"dynCallLegacy\"] = function () { abort(\"'dynCallLegacy' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getDynCaller\")) Module[\"getDynCaller\"] = function () { abort(\"'getDynCaller' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"dynCall\")) Module[\"dynCall\"] = function () { abort(\"'dynCall' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"callRuntimeCallbacks\")) Module[\"callRuntimeCallbacks\"] = function () { abort(\"'callRuntimeCallbacks' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"runtimeKeepaliveCounter\")) Module[\"runtimeKeepaliveCounter\"] = function () { abort(\"'runtimeKeepaliveCounter' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"keepRuntimeAlive\")) Module[\"keepRuntimeAlive\"] = function () { abort(\"'keepRuntimeAlive' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"runtimeKeepalivePush\")) Module[\"runtimeKeepalivePush\"] = function () { abort(\"'runtimeKeepalivePush' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"runtimeKeepalivePop\")) Module[\"runtimeKeepalivePop\"] = function () { abort(\"'runtimeKeepalivePop' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"callUserCallback\")) Module[\"callUserCallback\"] = function () { abort(\"'callUserCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"maybeExit\")) Module[\"maybeExit\"] = function () { abort(\"'maybeExit' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"asmjsMangle\")) Module[\"asmjsMangle\"] = function () { abort(\"'asmjsMangle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"reallyNegative\")) Module[\"reallyNegative\"] = function () { abort(\"'reallyNegative' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"unSign\")) Module[\"unSign\"] = function () { abort(\"'unSign' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"reSign\")) Module[\"reSign\"] = function () { abort(\"'reSign' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"formatString\")) Module[\"formatString\"] = function () { abort(\"'formatString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"PATH\")) Module[\"PATH\"] = function () { abort(\"'PATH' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"PATH_FS\")) Module[\"PATH_FS\"] = function () { abort(\"'PATH_FS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"SYSCALLS\")) Module[\"SYSCALLS\"] = function () { abort(\"'SYSCALLS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"syscallMmap2\")) Module[\"syscallMmap2\"] = function () { abort(\"'syscallMmap2' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"syscallMunmap\")) Module[\"syscallMunmap\"] = function () { abort(\"'syscallMunmap' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getSocketFromFD\")) Module[\"getSocketFromFD\"] = function () { abort(\"'getSocketFromFD' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getSocketAddress\")) Module[\"getSocketAddress\"] = function () { abort(\"'getSocketAddress' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"JSEvents\")) Module[\"JSEvents\"] = function () { abort(\"'JSEvents' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerKeyEventCallback\")) Module[\"registerKeyEventCallback\"] = function () { abort(\"'registerKeyEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"specialHTMLTargets\")) Module[\"specialHTMLTargets\"] = function () { abort(\"'specialHTMLTargets' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"maybeCStringToJsString\")) Module[\"maybeCStringToJsString\"] = function () { abort(\"'maybeCStringToJsString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"findEventTarget\")) Module[\"findEventTarget\"] = function () { abort(\"'findEventTarget' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"findCanvasEventTarget\")) Module[\"findCanvasEventTarget\"] = function () { abort(\"'findCanvasEventTarget' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getBoundingClientRect\")) Module[\"getBoundingClientRect\"] = function () { abort(\"'getBoundingClientRect' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"fillMouseEventData\")) Module[\"fillMouseEventData\"] = function () { abort(\"'fillMouseEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerMouseEventCallback\")) Module[\"registerMouseEventCallback\"] = function () { abort(\"'registerMouseEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerWheelEventCallback\")) Module[\"registerWheelEventCallback\"] = function () { abort(\"'registerWheelEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerUiEventCallback\")) Module[\"registerUiEventCallback\"] = function () { abort(\"'registerUiEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerFocusEventCallback\")) Module[\"registerFocusEventCallback\"] = function () { abort(\"'registerFocusEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"fillDeviceOrientationEventData\")) Module[\"fillDeviceOrientationEventData\"] = function () { abort(\"'fillDeviceOrientationEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerDeviceOrientationEventCallback\")) Module[\"registerDeviceOrientationEventCallback\"] = function () { abort(\"'registerDeviceOrientationEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"fillDeviceMotionEventData\")) Module[\"fillDeviceMotionEventData\"] = function () { abort(\"'fillDeviceMotionEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerDeviceMotionEventCallback\")) Module[\"registerDeviceMotionEventCallback\"] = function () { abort(\"'registerDeviceMotionEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"screenOrientation\")) Module[\"screenOrientation\"] = function () { abort(\"'screenOrientation' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"fillOrientationChangeEventData\")) Module[\"fillOrientationChangeEventData\"] = function () { abort(\"'fillOrientationChangeEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerOrientationChangeEventCallback\")) Module[\"registerOrientationChangeEventCallback\"] = function () { abort(\"'registerOrientationChangeEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"fillFullscreenChangeEventData\")) Module[\"fillFullscreenChangeEventData\"] = function () { abort(\"'fillFullscreenChangeEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerFullscreenChangeEventCallback\")) Module[\"registerFullscreenChangeEventCallback\"] = function () { abort(\"'registerFullscreenChangeEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerRestoreOldStyle\")) Module[\"registerRestoreOldStyle\"] = function () { abort(\"'registerRestoreOldStyle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"hideEverythingExceptGivenElement\")) Module[\"hideEverythingExceptGivenElement\"] = function () { abort(\"'hideEverythingExceptGivenElement' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"restoreHiddenElements\")) Module[\"restoreHiddenElements\"] = function () { abort(\"'restoreHiddenElements' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"setLetterbox\")) Module[\"setLetterbox\"] = function () { abort(\"'setLetterbox' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"currentFullscreenStrategy\")) Module[\"currentFullscreenStrategy\"] = function () { abort(\"'currentFullscreenStrategy' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"restoreOldWindowedStyle\")) Module[\"restoreOldWindowedStyle\"] = function () { abort(\"'restoreOldWindowedStyle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"softFullscreenResizeWebGLRenderTarget\")) Module[\"softFullscreenResizeWebGLRenderTarget\"] = function () { abort(\"'softFullscreenResizeWebGLRenderTarget' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"doRequestFullscreen\")) Module[\"doRequestFullscreen\"] = function () { abort(\"'doRequestFullscreen' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"fillPointerlockChangeEventData\")) Module[\"fillPointerlockChangeEventData\"] = function () { abort(\"'fillPointerlockChangeEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerPointerlockChangeEventCallback\")) Module[\"registerPointerlockChangeEventCallback\"] = function () { abort(\"'registerPointerlockChangeEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerPointerlockErrorEventCallback\")) Module[\"registerPointerlockErrorEventCallback\"] = function () { abort(\"'registerPointerlockErrorEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"requestPointerLock\")) Module[\"requestPointerLock\"] = function () { abort(\"'requestPointerLock' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"fillVisibilityChangeEventData\")) Module[\"fillVisibilityChangeEventData\"] = function () { abort(\"'fillVisibilityChangeEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerVisibilityChangeEventCallback\")) Module[\"registerVisibilityChangeEventCallback\"] = function () { abort(\"'registerVisibilityChangeEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerTouchEventCallback\")) Module[\"registerTouchEventCallback\"] = function () { abort(\"'registerTouchEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"fillGamepadEventData\")) Module[\"fillGamepadEventData\"] = function () { abort(\"'fillGamepadEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerGamepadEventCallback\")) Module[\"registerGamepadEventCallback\"] = function () { abort(\"'registerGamepadEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerBeforeUnloadEventCallback\")) Module[\"registerBeforeUnloadEventCallback\"] = function () { abort(\"'registerBeforeUnloadEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"fillBatteryEventData\")) Module[\"fillBatteryEventData\"] = function () { abort(\"'fillBatteryEventData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"battery\")) Module[\"battery\"] = function () { abort(\"'battery' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"registerBatteryEventCallback\")) Module[\"registerBatteryEventCallback\"] = function () { abort(\"'registerBatteryEventCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"setCanvasElementSize\")) Module[\"setCanvasElementSize\"] = function () { abort(\"'setCanvasElementSize' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getCanvasElementSize\")) Module[\"getCanvasElementSize\"] = function () { abort(\"'getCanvasElementSize' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"polyfillSetImmediate\")) Module[\"polyfillSetImmediate\"] = function () { abort(\"'polyfillSetImmediate' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"demangle\")) Module[\"demangle\"] = function () { abort(\"'demangle' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"demangleAll\")) Module[\"demangleAll\"] = function () { abort(\"'demangleAll' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"jsStackTrace\")) Module[\"jsStackTrace\"] = function () { abort(\"'jsStackTrace' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"stackTrace\")) Module[\"stackTrace\"] = function () { abort(\"'stackTrace' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getEnvStrings\")) Module[\"getEnvStrings\"] = function () { abort(\"'getEnvStrings' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"checkWasiClock\")) Module[\"checkWasiClock\"] = function () { abort(\"'checkWasiClock' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"flush_NO_FILESYSTEM\")) Module[\"flush_NO_FILESYSTEM\"] = function () { abort(\"'flush_NO_FILESYSTEM' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToI64\")) Module[\"writeI53ToI64\"] = function () { abort(\"'writeI53ToI64' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToI64Clamped\")) Module[\"writeI53ToI64Clamped\"] = function () { abort(\"'writeI53ToI64Clamped' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToI64Signaling\")) Module[\"writeI53ToI64Signaling\"] = function () { abort(\"'writeI53ToI64Signaling' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToU64Clamped\")) Module[\"writeI53ToU64Clamped\"] = function () { abort(\"'writeI53ToU64Clamped' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"writeI53ToU64Signaling\")) Module[\"writeI53ToU64Signaling\"] = function () { abort(\"'writeI53ToU64Signaling' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"readI53FromI64\")) Module[\"readI53FromI64\"] = function () { abort(\"'readI53FromI64' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"readI53FromU64\")) Module[\"readI53FromU64\"] = function () { abort(\"'readI53FromU64' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"convertI32PairToI53\")) Module[\"convertI32PairToI53\"] = function () { abort(\"'convertI32PairToI53' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"convertU32PairToI53\")) Module[\"convertU32PairToI53\"] = function () { abort(\"'convertU32PairToI53' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"uncaughtExceptionCount\")) Module[\"uncaughtExceptionCount\"] = function () { abort(\"'uncaughtExceptionCount' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"exceptionLast\")) Module[\"exceptionLast\"] = function () { abort(\"'exceptionLast' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"exceptionCaught\")) Module[\"exceptionCaught\"] = function () { abort(\"'exceptionCaught' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"ExceptionInfoAttrs\")) Module[\"ExceptionInfoAttrs\"] = function () { abort(\"'ExceptionInfoAttrs' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"ExceptionInfo\")) Module[\"ExceptionInfo\"] = function () { abort(\"'ExceptionInfo' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"CatchInfo\")) Module[\"CatchInfo\"] = function () { abort(\"'CatchInfo' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"exception_addRef\")) Module[\"exception_addRef\"] = function () { abort(\"'exception_addRef' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"exception_decRef\")) Module[\"exception_decRef\"] = function () { abort(\"'exception_decRef' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"Browser\")) Module[\"Browser\"] = function () { abort(\"'Browser' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"funcWrappers\")) Module[\"funcWrappers\"] = function () { abort(\"'funcWrappers' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"getFuncWrapper\")) Module[\"getFuncWrapper\"] = function () { abort(\"'getFuncWrapper' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"setMainLoop\")) Module[\"setMainLoop\"] = function () { abort(\"'setMainLoop' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"FS\")) Module[\"FS\"] = function () { abort(\"'FS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"mmapAlloc\")) Module[\"mmapAlloc\"] = function () { abort(\"'mmapAlloc' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"MEMFS\")) Module[\"MEMFS\"] = function () { abort(\"'MEMFS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"TTY\")) Module[\"TTY\"] = function () { abort(\"'TTY' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"PIPEFS\")) Module[\"PIPEFS\"] = function () { abort(\"'PIPEFS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"SOCKFS\")) Module[\"SOCKFS\"] = function () { abort(\"'SOCKFS' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"_setNetworkCallback\")) Module[\"_setNetworkCallback\"] = function () { abort(\"'_setNetworkCallback' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"tempFixedLengthArray\")) Module[\"tempFixedLengthArray\"] = function () { abort(\"'tempFixedLengthArray' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"miniTempWebGLFloatBuffers\")) Module[\"miniTempWebGLFloatBuffers\"] = function () { abort(\"'miniTempWebGLFloatBuffers' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"heapObjectForWebGLType\")) Module[\"heapObjectForWebGLType\"] = function () { abort(\"'heapObjectForWebGLType' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"heapAccessShiftForWebGLHeap\")) Module[\"heapAccessShiftForWebGLHeap\"] = function () { abort(\"'heapAccessShiftForWebGLHeap' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"GL\")) Module[\"GL\"] = function () { abort(\"'GL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"emscriptenWebGLGet\")) Module[\"emscriptenWebGLGet\"] = function () { abort(\"'emscriptenWebGLGet' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"computeUnpackAlignedImageSize\")) Module[\"computeUnpackAlignedImageSize\"] = function () { abort(\"'computeUnpackAlignedImageSize' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"emscriptenWebGLGetTexPixelData\")) Module[\"emscriptenWebGLGetTexPixelData\"] = function () { abort(\"'emscriptenWebGLGetTexPixelData' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"emscriptenWebGLGetUniform\")) Module[\"emscriptenWebGLGetUniform\"] = function () { abort(\"'emscriptenWebGLGetUniform' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"webglGetUniformLocation\")) Module[\"webglGetUniformLocation\"] = function () { abort(\"'webglGetUniformLocation' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"webglPrepareUniformLocationsBeforeFirstUse\")) Module[\"webglPrepareUniformLocationsBeforeFirstUse\"] = function () { abort(\"'webglPrepareUniformLocationsBeforeFirstUse' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"webglGetLeftBracePos\")) Module[\"webglGetLeftBracePos\"] = function () { abort(\"'webglGetLeftBracePos' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"emscriptenWebGLGetVertexAttrib\")) Module[\"emscriptenWebGLGetVertexAttrib\"] = function () { abort(\"'emscriptenWebGLGetVertexAttrib' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"writeGLArray\")) Module[\"writeGLArray\"] = function () { abort(\"'writeGLArray' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"AL\")) Module[\"AL\"] = function () { abort(\"'AL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"SDL_unicode\")) Module[\"SDL_unicode\"] = function () { abort(\"'SDL_unicode' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"SDL_ttfContext\")) Module[\"SDL_ttfContext\"] = function () { abort(\"'SDL_ttfContext' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"SDL_audio\")) Module[\"SDL_audio\"] = function () { abort(\"'SDL_audio' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"SDL\")) Module[\"SDL\"] = function () { abort(\"'SDL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"SDL_gfx\")) Module[\"SDL_gfx\"] = function () { abort(\"'SDL_gfx' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"GLUT\")) Module[\"GLUT\"] = function () { abort(\"'GLUT' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"EGL\")) Module[\"EGL\"] = function () { abort(\"'EGL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"GLFW_Window\")) Module[\"GLFW_Window\"] = function () { abort(\"'GLFW_Window' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"GLFW\")) Module[\"GLFW\"] = function () { abort(\"'GLFW' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"GLEW\")) Module[\"GLEW\"] = function () { abort(\"'GLEW' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"IDBStore\")) Module[\"IDBStore\"] = function () { abort(\"'IDBStore' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"runAndAbortIfError\")) Module[\"runAndAbortIfError\"] = function () { abort(\"'runAndAbortIfError' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"warnOnce\")) Module[\"warnOnce\"] = function () { abort(\"'warnOnce' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"stackSave\")) Module[\"stackSave\"] = function () { abort(\"'stackSave' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"stackRestore\")) Module[\"stackRestore\"] = function () { abort(\"'stackRestore' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"stackAlloc\")) Module[\"stackAlloc\"] = function () { abort(\"'stackAlloc' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"AsciiToString\")) Module[\"AsciiToString\"] = function () { abort(\"'AsciiToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"stringToAscii\")) Module[\"stringToAscii\"] = function () { abort(\"'stringToAscii' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"UTF16ToString\")) Module[\"UTF16ToString\"] = function () { abort(\"'UTF16ToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF16\")) Module[\"stringToUTF16\"] = function () { abort(\"'stringToUTF16' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"lengthBytesUTF16\")) Module[\"lengthBytesUTF16\"] = function () { abort(\"'lengthBytesUTF16' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"UTF32ToString\")) Module[\"UTF32ToString\"] = function () { abort(\"'UTF32ToString' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"stringToUTF32\")) Module[\"stringToUTF32\"] = function () { abort(\"'stringToUTF32' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"lengthBytesUTF32\")) Module[\"lengthBytesUTF32\"] = function () { abort(\"'lengthBytesUTF32' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"allocateUTF8\")) Module[\"allocateUTF8\"] = function () { abort(\"'allocateUTF8' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"allocateUTF8OnStack\")) Module[\"allocateUTF8OnStack\"] = function () { abort(\"'allocateUTF8OnStack' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") };\r\n            Module[\"writeStackCookie\"] = writeStackCookie;\r\n            Module[\"checkStackCookie\"] = checkStackCookie;\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"ALLOC_NORMAL\")) Object.defineProperty(Module, \"ALLOC_NORMAL\", { configurable: true, get: function () { abort(\"'ALLOC_NORMAL' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\r\n            if (!Object.getOwnPropertyDescriptor(Module, \"ALLOC_STACK\")) Object.defineProperty(Module, \"ALLOC_STACK\", { configurable: true, get: function () { abort(\"'ALLOC_STACK' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\") } });\r\n\r\n            var calledRun;\r\n\r\n            /**\r\n             * @constructor\r\n             * @this {ExitStatus}\r\n             */\r\n            function ExitStatus(status) {\r\n                this.name = \"ExitStatus\";\r\n                this.message = \"Program terminated with exit(\" + status + \")\";\r\n                this.status = status;\r\n            }\r\n\r\n            var calledMain = false;\r\n\r\n            dependenciesFulfilled = function runCaller() {\r\n                // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\r\n                if (!calledRun) run();\r\n                if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\r\n            };\r\n\r\n            function stackCheckInit() {\r\n                // This is normally called automatically during __wasm_call_ctors but need to\r\n                // get these values before even running any of the ctors so we call it redundantly\r\n                // here.\r\n                // TODO(sbc): Move writeStackCookie to native to to avoid this.\r\n                _emscripten_stack_init();\r\n                writeStackCookie();\r\n            }\r\n\r\n            /** @type {function(Array=)} */\r\n            function run(args) {\r\n                args = args || arguments_;\r\n\r\n                if (runDependencies > 0) {\r\n                    return;\r\n                }\r\n\r\n                stackCheckInit();\r\n\r\n                preRun();\r\n\r\n                // a preRun added a dependency, run will be called later\r\n                if (runDependencies > 0) {\r\n                    return;\r\n                }\r\n\r\n                function doRun() {\r\n                    // run may have just been called through dependencies being fulfilled just in this very frame,\r\n                    // or while the async setStatus time below was happening\r\n                    if (calledRun) return;\r\n                    calledRun = true;\r\n                    Module['calledRun'] = true;\r\n\r\n                    if (ABORT) return;\r\n\r\n                    initRuntime();\r\n\r\n                    readyPromiseResolve(Module);\r\n                    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\r\n\r\n                    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\r\n\r\n                    postRun();\r\n                }\r\n\r\n                if (Module['setStatus']) {\r\n                    Module['setStatus']('Running...');\r\n                    setTimeout(function () {\r\n                        setTimeout(function () {\r\n                            Module['setStatus']('');\r\n                        }, 1);\r\n                        doRun();\r\n                    }, 1);\r\n                } else {\r\n                    doRun();\r\n                }\r\n                checkStackCookie();\r\n            }\r\n            Module['run'] = run;\r\n\r\n            function checkUnflushedContent() {\r\n                // Compiler settings do not allow exiting the runtime, so flushing\r\n                // the streams is not possible. but in ASSERTIONS mode we check\r\n                // if there was something to flush, and if so tell the user they\r\n                // should request that the runtime be exitable.\r\n                // Normally we would not even include flush() at all, but in ASSERTIONS\r\n                // builds we do so just for this check, and here we see if there is any\r\n                // content to flush, that is, we check if there would have been\r\n                // something a non-ASSERTIONS build would have not seen.\r\n                // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\r\n                // mode (which has its own special function for this; otherwise, all\r\n                // the code is inside libc)\r\n                var oldOut = out;\r\n                var oldErr = err;\r\n                var has = false;\r\n                out = err = function (x) {\r\n                    has = true;\r\n                }\r\n                try { // it doesn't matter if it fails\r\n                    var flush = null;\r\n                    if (flush) flush();\r\n                } catch (e) { }\r\n                out = oldOut;\r\n                err = oldErr;\r\n                if (has) {\r\n                    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\r\n                    warnOnce('(this may also be due to not including full filesystem support - try building with -s FORCE_FILESYSTEM=1)');\r\n                }\r\n            }\r\n\r\n            /** @param {boolean|number=} implicit */\r\n            function exit(status, implicit) {\r\n                EXITSTATUS = status;\r\n\r\n                checkUnflushedContent();\r\n\r\n                // if this is just main exit-ing implicitly, and the status is 0, then we\r\n                // don't need to do anything here and can just leave. if the status is\r\n                // non-zero, though, then we need to report it.\r\n                // (we may have warned about this earlier, if a situation justifies doing so)\r\n                if (implicit && keepRuntimeAlive() && status === 0) {\r\n                    return;\r\n                }\r\n\r\n                if (keepRuntimeAlive()) {\r\n                    // if exit() was called, we may warn the user if the runtime isn't actually being shut down\r\n                    if (!implicit) {\r\n                        var msg = 'program exited (with status: ' + status + '), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)';\r\n                        readyPromiseReject(msg);\r\n                        err(msg);\r\n                    }\r\n                } else {\r\n\r\n                    exitRuntime();\r\n\r\n                    if (Module['onExit']) Module['onExit'](status);\r\n\r\n                    ABORT = true;\r\n                }\r\n\r\n                quit_(status, new ExitStatus(status));\r\n            }\r\n\r\n            if (Module['preInit']) {\r\n                if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\r\n                while (Module['preInit'].length > 0) {\r\n                    Module['preInit'].pop()();\r\n                }\r\n            }\r\n\r\n            run();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            return Module.ready\r\n        }\r\n    );\r\n})();\r\n\r\nexport default Module;", "import { mat4, glMatrix, vec2, vec3 } from \"gl-matrix\";\r\n// import cubeJson from \"../public/cube.json\";\r\n// import cylinderJson from \"../public/cylinder.json\";\r\n// import coneJson from \"../public/cone.json\";\r\n// import tubeJson from \"../public/tube.json\";\r\nimport { Arc2D, Line2D, Line3D, LineStrip3D, NurbsCurve2D, NurbsCurve3D } from \"./curves\";\r\nimport { Arc3D, type Curve2D, type Curve3D } from \"./curves\";\r\nimport { Face, type Seam } from \"./face\";\r\nimport type {\r\n    ProductData,\r\n    IndexPair,\r\n    SurfaceData,\r\n    FaceData,\r\n    InstanceData,\r\n    AABB2,\r\n    CurveSegmentData,\r\n    EdgeData,\r\n} from \"./brep\";\r\nimport { Cone, Cylinder, Nurbs, Plane, type Surface, Torus } from \"./surfaces\";\r\nimport { Edge } from \"./edge\";\r\n// @ts-ignore\r\nimport factory from \"../wasm/nurbs_wrapper.js\";\r\n\r\nglMatrix.setMatrixArrayType(Array);\r\n\r\nexport function matFromInstance(instance: InstanceData): mat4 {\r\n    if (instance.transformation !== undefined) {\r\n        return mat4.fromValues(\r\n            ...(instance.transformation as Parameters<typeof mat4.fromValues>)\r\n        );\r\n    }\r\n    return mat4.identity(mat4.create());\r\n}\r\n\r\nexport function unitToScale(unit: string) {\r\n    switch (unit) {\r\n        case \"mm\":\r\n            return 1 / 1000;\r\n        case \"cm\":\r\n            return 1 / 100;\r\n        case \"in\":\r\n            return 0.0254;\r\n        default:\r\n            return 1;\r\n    }\r\n}\r\n\r\nexport async function createGeometryFactory(wasmUrl: string | ArrayBuffer) {\r\n    const factoryArg = typeof wasmUrl == \"string\" ?\r\n        { locateFile: (path: string) => wasmUrl } :\r\n        { wasmBinary: wasmUrl };\r\n    // { getPreloadedPackage: (remotePackageName: string, remotePackageSize: number) => wasmUrl};\r\n    const wasmInstance = await factory(factoryArg);\r\n    var dataPtr = wasmInstance._malloc(48);\r\n    var dataHeap = new Float64Array(wasmInstance.HEAPF64.buffer, dataPtr, 6);\r\n    return new GeometryFactory(wasmInstance, dataHeap);\r\n}\r\n\r\nexport function crawlInstance(\r\n    product: ProductData,\r\n    instanceData: InstanceData,\r\n    faceFunc: (faceIdx: number) => void\r\n) {\r\n    const geometryData = product.geometries[instanceData.geometry as number];\r\n    if (geometryData.shells) {\r\n        for (const shellIdx of geometryData.shells) {\r\n            const shell = product.shells[shellIdx];\r\n            for (const faceIdx of shell.faces) {\r\n                faceFunc(faceIdx);\r\n            }\r\n        }\r\n    }\r\n    if (geometryData.solids) {\r\n        for (const solidIdx of geometryData.solids) {\r\n            const solid = product.solids[solidIdx];\r\n            for (const faceIdx of product.shells[solid.outerShell].faces) {\r\n                faceFunc(faceIdx);\r\n            }\r\n            if (solid.innerShells) {\r\n                for (const innerShellIdx of solid.innerShells) {\r\n                    const shell = product.shells[innerShellIdx];\r\n                    for (const faceIdx of shell.faces) {\r\n                        faceFunc(faceIdx);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class GeometryFactory {\r\n    constructor(\r\n        private readonly wasmInstance: any,\r\n        private readonly buffer: Float64Array\r\n    ) { }\r\n\r\n    getCurve2D(data: ProductData, halfEdgeIndex: number): Curve2D {\r\n        const halfEdgeData = data.halfEdges[halfEdgeIndex];\r\n        let [beginParam, endParam] = halfEdgeData.parameterBounds;\r\n        let sense: 1 | -1 = 1;\r\n        if (halfEdgeData.direction < 0) {\r\n            sense = -1; // this is only used for negating tangents.\r\n            [beginParam, endParam] = [endParam, beginParam]; // flip parameters\r\n        }\r\n        const curveData = data.curves2D[halfEdgeData.curve2D];\r\n        switch (curveData.kind) {\r\n            case \"line\": {\r\n                const origin = vec2.fromValues(\r\n                    ...(curveData.origin as Parameters<typeof vec2.fromValues>)\r\n                );\r\n                const direction = vec2.fromValues(\r\n                    ...(curveData.direction as Parameters<typeof vec2.fromValues>)\r\n                );\r\n                return new Line2D(origin, direction, beginParam, endParam, sense);\r\n            }\r\n            case \"circle\": {\r\n                const origin = vec2.fromValues(\r\n                    ...(curveData.origin as Parameters<typeof vec2.fromValues>)\r\n                );\r\n                const { radius } = curveData;\r\n                return new Arc2D(origin, radius, beginParam, endParam, sense);\r\n            }\r\n            case \"nurbs\": {\r\n                const { order, controlPoints, knots, weights } = curveData;\r\n                return new NurbsCurve2D(\r\n                    order,\r\n                    controlPoints,\r\n                    knots,\r\n                    weights,\r\n                    beginParam,\r\n                    endParam,\r\n                    sense,\r\n                    this.wasmInstance,\r\n                    this.buffer\r\n                );\r\n            }\r\n            default:\r\n                throw Error(`Unsupported curve type!`);\r\n        }\r\n    }\r\n\r\n    getCurve3D(data: ProductData, halfEdgeIndex: number): Curve3D | undefined {\r\n        const halfEdgeData = data.halfEdges[halfEdgeIndex];\r\n        return this.getCurve3DFromEdge(\r\n            data,\r\n            halfEdgeData.edge,\r\n            halfEdgeData.direction\r\n        );\r\n    }\r\n\r\n    getHalfEdgeAABB(data: ProductData, halfEdgeIndex: number): AABB2 | undefined {\r\n        const curve = this.getCurve2D(data, halfEdgeIndex);\r\n        const points: vec2[] = [];\r\n\r\n        switch (curve.kind) {\r\n            case \"line\":\r\n                points.push(vec2.create());\r\n                points.push(vec2.create());\r\n                curve.eval(curve.beginParam, points[0], undefined);\r\n                curve.eval(curve.endParam, points[1], undefined);\r\n                break;\r\n            case \"arc\":\r\n                points.push(vec2.create());\r\n                points.push(vec2.create());\r\n                curve.eval(curve.beginParam, points[0], undefined);\r\n                curve.eval(curve.endParam, points[1], undefined);\r\n                const paramOffset = curve.endParam > 2 * Math.PI ? -Math.PI * 2 : 0;\r\n                for (let i = 1; i < 4; ++i) {\r\n                    const param = (Math.PI / 2) * i + paramOffset;\r\n                    if (param >= curve.beginParam && param <= curve.endParam) {\r\n                        const point = vec2.create();\r\n                        curve.eval(param, point, undefined);\r\n                        points.push(point);\r\n                    }\r\n                }\r\n                break;\r\n            //TODO begin and end + max 4 tangents coords\r\n            default:\r\n                return undefined;\r\n        }\r\n        const min = vec2.copy(vec2.create(), points[0]);\r\n        const max = vec2.copy(vec2.create(), points[0]);\r\n        for (let i = 1; i < points.length; ++i) {\r\n            vec2.min(min, min, points[i]);\r\n            vec2.max(max, max, points[i]);\r\n        }\r\n        return { min, max };\r\n    }\r\n\r\n    private getCurve3DFromEdgeOrSegment(\r\n        data: ProductData,\r\n        segmentData: CurveSegmentData | EdgeData\r\n    ) {\r\n        if (segmentData.curve3D != undefined) {\r\n            let [beginParam, endParam] = segmentData.parameterBounds;\r\n            const curveData = data.curves3D[segmentData.curve3D];\r\n            switch (curveData.kind) {\r\n                case \"line\": {\r\n                    const origin = vec3.fromValues(\r\n                        ...(curveData.origin as Parameters<typeof vec3.fromValues>)\r\n                    );\r\n                    const direction = vec3.fromValues(\r\n                        ...(curveData.direction as Parameters<typeof vec3.fromValues>)\r\n                    );\r\n                    return new Line3D(\r\n                        origin,\r\n                        direction,\r\n                        beginParam,\r\n                        endParam,\r\n                        1,\r\n                        segmentData.tesselationParameters\r\n                    );\r\n                }\r\n                case \"circle\": {\r\n                    const origin = vec3.fromValues(\r\n                        ...(curveData.origin as Parameters<typeof vec3.fromValues>)\r\n                    );\r\n                    const { radius, axisX, axisY } = curveData;\r\n                    return new Arc3D(\r\n                        origin,\r\n                        axisX,\r\n                        axisY,\r\n                        radius,\r\n                        beginParam,\r\n                        endParam,\r\n                        1,\r\n                        segmentData.tesselationParameters\r\n                    );\r\n                }\r\n                case \"nurbs\": {\r\n                    const { order, controlPoints, knots, weights } = curveData;\r\n                    return new NurbsCurve3D(\r\n                        order,\r\n                        controlPoints,\r\n                        knots,\r\n                        weights,\r\n                        beginParam,\r\n                        endParam,\r\n                        1,\r\n                        segmentData.tesselationParameters,\r\n                        this.wasmInstance,\r\n                        this.buffer\r\n                    );\r\n                }\r\n                case \"lineStrip\": {\r\n                    return new LineStrip3D(\r\n                        curveData.vertices,\r\n                        beginParam,\r\n                        endParam,\r\n                        segmentData.tesselationParameters\r\n                    );\r\n                }\r\n                default:\r\n                    throw Error(`Unsupported curve type!`);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurve3DFromSegment(data: ProductData, segmentIndex: number) {\r\n        return this.getCurve3DFromEdgeOrSegment(\r\n            data,\r\n            data.curveSegments[segmentIndex]\r\n        );\r\n    }\r\n\r\n    getCurve3DFromEdge(\r\n        data: ProductData,\r\n        edgeIndex: number,\r\n        sense: 1 | -1 = 1\r\n    ): Curve3D | undefined {\r\n        return this.getCurve3DFromEdgeOrSegment(data, data.edges[edgeIndex]);\r\n    }\r\n\r\n    getSurface(data: SurfaceData, sense: -1 | 1, scale?: number): Surface {\r\n        switch (data.kind) {\r\n            case \"plane\": {\r\n                const transform = mat4.fromValues(\r\n                    ...(data.transform as Parameters<typeof mat4.fromValues>)\r\n                );\r\n                return new Plane(transform, sense, scale);\r\n            }\r\n            case \"cylinder\": {\r\n                const transform = mat4.fromValues(\r\n                    ...(data.transform as Parameters<typeof mat4.fromValues>)\r\n                );\r\n                return new Cylinder(data.radius, transform, sense, scale);\r\n            }\r\n            case \"cone\": {\r\n                const transform = mat4.fromValues(\r\n                    ...(data.transform as Parameters<typeof mat4.fromValues>)\r\n                );\r\n                return new Cone(\r\n                    data.radius,\r\n                    data.halfAngleTan,\r\n                    transform,\r\n                    sense,\r\n                    scale\r\n                );\r\n            }\r\n            case \"torus\": {\r\n                const transform = mat4.fromValues(\r\n                    ...(data.transform as Parameters<typeof mat4.fromValues>)\r\n                );\r\n                return new Torus(\r\n                    data.majorRadius,\r\n                    data.minorRadius,\r\n                    transform,\r\n                    sense,\r\n                    scale\r\n                );\r\n            }\r\n            case \"nurbs\": {\r\n                return new Nurbs(\r\n                    data.orders,\r\n                    data.dim,\r\n                    data.controlPoints,\r\n                    data.knots,\r\n                    data.weights,\r\n                    sense,\r\n                    this.wasmInstance,\r\n                    this.buffer,\r\n                    scale\r\n                );\r\n            }\r\n            default:\r\n                throw Error(`Unsupported surface type!`);\r\n        }\r\n    }\r\n\r\n    makeFace(\r\n        face: FaceData,\r\n        instance: InstanceData,\r\n        instanceIndex: number,\r\n        product: ProductData,\r\n        curves2D: Curve2D[]\r\n    ) {\r\n        const loops = [face.outerLoop, ...(face.innerLoops ?? [])];\r\n        const virtualEdges = new Set<number>();\r\n        const faceCurves2D = loops.map((l) => {\r\n            return product.loops[l].halfEdges.map((e) => {\r\n                const halfEdge = product.halfEdges[e];\r\n                const edgeIndex = halfEdge.edge;\r\n                const edge = product.edges[edgeIndex];\r\n                if (edge.virtual) {\r\n                    virtualEdges.add(edgeIndex);\r\n                }\r\n                return curves2D[e];\r\n            });\r\n        });\r\n        const seams: Seam[] = [];\r\n        for (const ei of virtualEdges) {\r\n            const edge = product.edges[ei];\r\n            const [a, b] = edge.halfEdges;\r\n            if (b != null) {\r\n                console.assert(product.halfEdges[a].face == product.halfEdges[b].face); // confirm that this is indeed a virtual edge.\r\n                const ia = product.halfEdges[a].faceVertexIndices;\r\n                const ib = product.halfEdges[b].faceVertexIndices;\r\n                console.assert(ia.length == ib.length);\r\n                // mark pairs of vertices on opposite side of virtual edge to be merged into one\r\n                const vertexIndexPairs: IndexPair[] = [];\r\n                for (let i = 0; i < ia.length; i++) {\r\n                    // vertexIndexPairs.push([ia[i], ib[ib.length - i - 1]]);\r\n                    vertexIndexPairs.push([ia[i], ib[i]]);\r\n                }\r\n                seams.push({ vertexIndexPairs });\r\n            }\r\n        }\r\n        const surface = this.getSurface(\r\n            product.surfaces[face.surface],\r\n            face.facing\r\n        );\r\n        return new Face(\r\n            surface,\r\n            face.facing,\r\n            faceCurves2D,\r\n            face.triangulation,\r\n            seams,\r\n            instanceIndex,\r\n            instance.transformation ? matFromInstance(instance) : undefined\r\n        );\r\n    }\r\n\r\n    getFaces(product: ProductData) {\r\n        const curves2D = product.halfEdges.map((_, i) => {\r\n            return this.getCurve2D(product, i);\r\n        }); // we map curve2D as 1:1 with halfedges\r\n        const faces: Face[] = [];\r\n\r\n        for (let i = 0; i < product.instances.length; ++i) {\r\n            const instance = product.instances[i];\r\n\r\n            const faceFunc = (faceIdx: number) => {\r\n                faces.push(\r\n                    this.makeFace(product.faces[faceIdx], instance, i, product, curves2D)\r\n                );\r\n            };\r\n\r\n            if (typeof instance.geometry == \"number\") {\r\n                //check geom is number\r\n                crawlInstance(product, instance, faceFunc);\r\n            }\r\n        }\r\n\r\n        return faces;\r\n    }\r\n\r\n    getCurvesFromEdges(product: ProductData, edgeInstances: number[]) {\r\n        const curves = new Array<Edge | undefined>();\r\n        for (let i = 0; i < product.edges.length; ++i) {\r\n            const curve = this.getCurve3DFromEdge(product, i);\r\n            const edgeData = product.edges[i];\r\n            if (curve && !edgeData.virtual) {\r\n                const instance = product.instances[edgeInstances[i]];\r\n                const transform = mat4.create();\r\n                if (instance.transformation) {\r\n                    mat4.mul(transform, transform, matFromInstance(instance));\r\n                }\r\n                curves.push(new Edge(curve, transform, edgeInstances[i]));\r\n            } else {\r\n                curves.push(undefined);\r\n            }\r\n        }\r\n        return curves;\r\n    }\r\n\r\n    getEdges(product: ProductData) {\r\n        const edgeInstances = new Array<number>(product.edges.length);\r\n\r\n        for (let i = 0; i < product.instances.length; ++i) {\r\n            const addFaceEdges = (faceIdx: number) => {\r\n                const face = product.faces[faceIdx];\r\n                const loops = [face.outerLoop, ...(face.innerLoops ?? [])];\r\n                for (const loopIdx of loops) {\r\n                    const loop = product.loops[loopIdx];\r\n                    for (const halfEdgeIdx of loop.halfEdges) {\r\n                        const halfEdge = product.halfEdges[halfEdgeIdx];\r\n                        edgeInstances[halfEdge.edge] = i;\r\n                    }\r\n                }\r\n            };\r\n\r\n            const instance = product.instances[i];\r\n            if (typeof instance.geometry == \"number\") {\r\n                //check geom is number\r\n                crawlInstance(product, instance, addFaceEdges);\r\n            }\r\n        }\r\n        return this.getCurvesFromEdges(product, edgeInstances);\r\n    }\r\n}\r\n", "import { vec3, glMatrix, mat4, vec2 } from \"gl-matrix\";\r\nimport type { ReadonlyVec3, ReadonlyVec2 } from \"gl-matrix\";\r\nimport type { CylinderData, ProductData } from \"./brep\";\r\nimport { cylinderCenterLine } from \"./calculations\";\r\nimport { matFromInstance } from \"./loader\";\r\nglMatrix.setMatrixArrayType(Array);\r\n\r\nexport async function swapCylinderImpl(product: ProductData, faceIdx: number, instanceIdx: number, to: \"inner\" | \"outer\"): Promise<number | undefined> {\r\n  const faceData = product.faces[faceIdx];\r\n  const surfaceData = product.surfaces[faceData.surface];\r\n\r\n  if (surfaceData.kind == \"cylinder\") {\r\n    const cylinderData = surfaceData as CylinderData;\r\n    const mat = matFromInstance(product.instances[instanceIdx]);\r\n    const [cylinderOrigo, cylinderEnd] = await cylinderCenterLine(\r\n      product,\r\n      faceData,\r\n      cylinderData,\r\n      mat,\r\n      \"center\"\r\n    );\r\n    let selectedIdx: number | undefined = undefined;\r\n    let currentRadius = surfaceData.radius;\r\n    const loopShell = async (shellIdx: number) => {\r\n      const shell = product.shells[shellIdx];\r\n      for (const currentFaceIdx of shell.faces) {\r\n        if (currentFaceIdx != faceIdx) {\r\n          const face = product.faces[currentFaceIdx];\r\n          const surface = product.surfaces[face.surface];\r\n          if (surface.kind == \"cylinder\") {\r\n            if (\r\n              (to == \"outer\" && surface.radius > currentRadius) ||\r\n              (to == \"inner\" && surface.radius < currentRadius)\r\n            ) {\r\n              const [currentCylinderOrigo, currentCylinderEnd] =\r\n                await cylinderCenterLine(\r\n                  product,\r\n                  face,\r\n                  surface,\r\n                  mat,\r\n                  \"center\"\r\n                );\r\n              if (\r\n                vec3.dist(currentCylinderOrigo, cylinderOrigo) < 0.01 &&\r\n                vec3.dist(currentCylinderEnd, cylinderEnd) < 0.01\r\n              ) {\r\n                selectedIdx = currentFaceIdx;\r\n                currentRadius = surface.radius;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const instance of product.instances) {\r\n      const geom = product.geometries[instance.geometry as number];\r\n      if (geom.shells) {\r\n        for (const shellIdx of geom.shells) {\r\n          await loopShell(shellIdx);\r\n        }\r\n      }\r\n      if (geom.solids) {\r\n        for (const solidIdx of geom.solids) {\r\n          const solid = product.solids[solidIdx];\r\n          await loopShell(solid.outerShell);\r\n        }\r\n      }\r\n    }\r\n    return selectedIdx;\r\n  }\r\n}\r\n\r\nexport function closestPointToLine(\r\n  point: ReadonlyVec3,\r\n  lineStart: ReadonlyVec3,\r\n  lineEnd: ReadonlyVec3,\r\n  projectedPoint?: vec3\r\n): { pos: vec3; parameter: number } {\r\n  const lineVec = vec3.sub(vec3.create(), lineEnd, lineStart);\r\n  const startToP = vec3.sub(vec3.create(), point, lineStart);\r\n  const t = vec3.dot(lineVec, startToP) / vec3.dot(lineVec, lineVec);\r\n  if (projectedPoint) {\r\n    vec3.lerp(projectedPoint, lineStart, lineEnd, t);\r\n  }\r\n  if (t < 0) {\r\n    return { pos: lineStart as vec3, parameter: 0 };\r\n  }\r\n  if (t > 1) {\r\n    return { pos: lineEnd as vec3, parameter: 1 };\r\n  }\r\n  return { pos: vec3.lerp(vec3.create(), lineStart, lineEnd, t), parameter: t };\r\n}\r\n\r\nexport function getProfile(\r\n  vertices: ReadonlyVec3[],\r\n  tesselationParameters: readonly number[] | undefined,\r\n  transform: mat4 | undefined\r\n): ReadonlyVec2[] {\r\n  const profile: ReadonlyVec2[] = [];\r\n  let prev = transform\r\n    ? vec3.transformMat4(vec3.create(), vertices[0], transform)\r\n    : vertices[0];\r\n  let len = 0;\r\n  profile.push(\r\n    tesselationParameters\r\n      ? vec2.fromValues(tesselationParameters[0], prev[2])\r\n      : vec2.fromValues(len, prev[2])\r\n  );\r\n  for (let i = 1; i < vertices.length; ++i) {\r\n    const p = transform\r\n      ? vec3.transformMat4(vec3.create(), vertices[i], transform)\r\n      : vertices[i];\r\n    if (tesselationParameters) {\r\n      profile.push(vec2.fromValues(tesselationParameters[i], p[2]));\r\n    } else {\r\n      len += vec2.distance(\r\n        vec2.fromValues(prev[0], prev[1]),\r\n        vec2.fromValues(p[0], p[1])\r\n      );\r\n      profile.push(vec2.fromValues(len, p[2]));\r\n    }\r\n    prev = p;\r\n  }\r\n  return profile;\r\n}\r\n\r\nexport function reduceLineStrip(lineStrip: ReadonlyVec3[]): ReadonlyVec3[] {\r\n  const reducedStrip: ReadonlyVec3[] = [];\r\n  if (lineStrip.length > 0) {\r\n    let prevPoint = lineStrip[0];\r\n    reducedStrip.push(prevPoint);\r\n    for (let i = 0; i < lineStrip.length; ++i) {\r\n      const currentPoint = lineStrip[i];\r\n      if (vec3.distance(prevPoint, currentPoint) > 0.005) {\r\n        reducedStrip.push(currentPoint);\r\n      }\r\n      prevPoint = currentPoint;\r\n    }\r\n  }\r\n  return reducedStrip;\r\n}\r\n\r\nexport class Downloader {\r\n  activeDownloads = 0;\r\n  private abortController = new AbortController();\r\n  public static downloadImageFallback?: (url: string) => Promise<ImageData>;\r\n\r\n  constructor(public baseUrl?: URL) { }\r\n\r\n  abort() {\r\n    this.abortController.abort();\r\n    this.abortController = new AbortController(); // we probably want to reuse this object, so create another abort controller.\r\n  }\r\n\r\n  async request(\r\n    filename: string,\r\n    abortController: AbortController | undefined\r\n  ) {\r\n    const url = new URL(filename, this.baseUrl);\r\n    if (!url.search) url.search = this.baseUrl?.search ?? \"\";\r\n    const signal = (abortController ?? this.abortController).signal;\r\n    const response = await fetch(url.toString(), { mode: \"cors\", signal });\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP Error: ${response.status}: ${response.statusText}`);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  async downloadJson(\r\n    filename: string,\r\n    abortController?: AbortController\r\n  ): Promise<any> {\r\n    try {\r\n      this.activeDownloads++;\r\n      const response = await this.request(filename, abortController);\r\n      return await response.json();\r\n    } finally {\r\n      this.activeDownloads--;\r\n    }\r\n  }\r\n\r\n  async downloadArrayBuffer(\r\n    filename: string,\r\n    abortController?: AbortController\r\n  ): Promise<ArrayBuffer> {\r\n    try {\r\n      this.activeDownloads++;\r\n      const response = await this.request(filename, abortController);\r\n      return await response.arrayBuffer();\r\n    } finally {\r\n      this.activeDownloads--;\r\n    }\r\n  }\r\n\r\n  async downloadBlob(\r\n    filename: string,\r\n    abortController?: AbortController\r\n  ): Promise<Blob> {\r\n    try {\r\n      this.activeDownloads++;\r\n      const response = await this.request(filename, abortController);\r\n      return await response.blob();\r\n    } finally {\r\n      this.activeDownloads--;\r\n    }\r\n  }\r\n\r\n  async downloadImage(\r\n    filename: string,\r\n    abortController?: AbortController\r\n  ): Promise<ImageBitmap | ImageData> {\r\n    try {\r\n      this.activeDownloads++;\r\n      if (Downloader.downloadImageFallback) {\r\n        const url =\r\n          typeof filename == \"string\"\r\n            ? new URL(filename, this.baseUrl)\r\n            : filename;\r\n        url.search = this.baseUrl?.search ?? \"\";\r\n        const image = await Downloader.downloadImageFallback(url.toString());\r\n        if (abortController?.signal.aborted) {\r\n          throw { name: \"AbortError\", message: \"\" };\r\n        }\r\n        return image;\r\n      } else {\r\n        const blob = await this.downloadBlob(filename, abortController);\r\n        // const image = await createImageBitmap(blob, { premultiplyAlpha: \"none\", colorSpaceConversion: \"none\" });\r\n        const image = await createImageBitmap(blob);\r\n        return image;\r\n      }\r\n    } finally {\r\n      this.activeDownloads--;\r\n    }\r\n  }\r\n\r\n  async downloadImageFromBlob(\r\n    blob: Blob,\r\n    abortController?: AbortController\r\n  ): Promise<ImageBitmap | ImageData> {\r\n    try {\r\n      this.activeDownloads++;\r\n      if (Downloader.downloadImageFallback) {\r\n        const url = URL.createObjectURL(blob);\r\n        const image = await Downloader.downloadImageFallback(url.toString());\r\n        URL.revokeObjectURL(url);\r\n        if (abortController?.signal.aborted) {\r\n          throw { name: \"AbortError\", message: \"\" };\r\n        }\r\n        return image;\r\n      } else {\r\n        // const image = await createImageBitmap(blob, { premultiplyAlpha: \"none\", colorSpaceConversion: \"none\" });\r\n        const image = await createImageBitmap(blob);\r\n        return image;\r\n      }\r\n    } finally {\r\n      this.activeDownloads--;\r\n    }\r\n  }\r\n}\r\n", "import { glMatrix, mat3, mat4, vec2, vec3 } from \"gl-matrix\";\r\nimport type { ReadonlyVec2, ReadonlyVec3 } from \"gl-matrix\";\r\nimport { makeNurbsCurve2D, makeNurbsCurve3D } from \"./nurbs\";\r\nimport { closestPointToLine, getProfile } from \"./util\";\r\nglMatrix.setMatrixArrayType(Array);\r\n\r\ntype CurveKind = \"line\" | \"arc\" | \"nurbs\" | \"lineStrip\";\r\n\r\n// TODO: Use 2D p-curves?\r\n// TODO: Triangulate (delauney) p-space?\r\n// or even tetrahedron tesselation of 3D face?\r\n\r\nexport interface LineSegment3D {\r\n    dir: vec3;\r\n    start: vec3;\r\n    end: vec3;\r\n}\r\n\r\nexport function lineToSegment(line: Line3D, mat: mat4): LineSegment3D {\r\n    const start = vec3.create();\r\n    const end = vec3.create();\r\n    const dir = vec3.create();\r\n    line.eval(line.beginParam, start, dir);\r\n    line.eval(line.endParam, end, undefined);\r\n    vec3.transformMat4(start, start, mat);\r\n    vec3.transformMat4(end, end, mat);\r\n\r\n    const normalMat = mat3.normalFromMat4(mat3.create(), mat);\r\n    vec3.transformMat3(dir, dir, normalMat);\r\n    vec3.normalize(dir, dir);\r\n    return { dir, start, end };\r\n}\r\n\r\nexport class DisposableCurve {\r\n    dispose(): void { }\r\n}\r\n\r\nexport interface Curve3D {\r\n    readonly kind: CurveKind;\r\n    tesselationParameters: readonly number[];\r\n    sense: number;\r\n    // eval(position: vec2, t: number): void;\r\n    eval(t: number, point: vec3 | undefined, tangent: vec3 | undefined): void;\r\n    // project(pos: ReadonlyVec3): number;\r\n    invert(pos: ReadonlyVec3): number;\r\n    // signedDistance(point: ReadonlyVec2): number; // signed distance from point to curve (along x/u axis?)\r\n    // intersectCount(point: ReadonlyVec2): number;\r\n}\r\n\r\nexport interface Curve2D {\r\n    readonly kind: CurveKind;\r\n    readonly beginParam: number;\r\n    readonly endParam: number;\r\n    // eval(position: vec2, t: number): void;\r\n    eval(t: number, point: vec2 | undefined, tangent: vec2 | undefined): void;\r\n    project(pos: ReadonlyVec2): number;\r\n    // invert(pos: ReadonlyVec2): number;\r\n    // signedDistance(point: ReadonlyVec2): number; // signed distance from point to curve (along x/u axis?)\r\n    // intersectCount(point: ReadonlyVec2): number;\r\n}\r\n\r\n/*\r\n\r\nforeach curve\r\n  if ray intersects curve\r\n    count++\r\n\r\nvisible = (count % 2) == 1\r\n\r\n*/\r\n\r\nexport class LineStrip3D implements Curve3D {\r\n    readonly kind = \"lineStrip\";\r\n    readonly sense = 1;\r\n    constructor(\r\n        readonly vertices: ReadonlyVec3[],\r\n        readonly beginParam: number,\r\n        readonly endParam: number,\r\n        readonly tesselationParameters: readonly number[]\r\n    ) { }\r\n    eval(t: number, point: vec3 | undefined, tangent: vec3 | undefined): void {\r\n        const { vertices, endParam, beginParam, tesselationParameters } = this;\r\n        let segIndex = 0;\r\n        if (t >= endParam) {\r\n            segIndex = tesselationParameters.length - 1;\r\n        } else if (t <= beginParam) {\r\n            segIndex = 0;\r\n        } else {\r\n            while (t < endParam && segIndex < tesselationParameters.length - 1) {\r\n                if (t < tesselationParameters[segIndex + 1]) {\r\n                    break;\r\n                }\r\n                ++segIndex;\r\n            }\r\n        }\r\n\r\n        const start = vertices[segIndex];\r\n        const dir =\r\n            segIndex < vertices.length - 1\r\n                ? vec3.subtract(vec3.create(), vertices[segIndex + 1], start)\r\n                : vec3.subtract(vec3.create(), vertices[segIndex - 1], start);\r\n        vec3.normalize(dir, dir);\r\n        if (point) {\r\n            const segStartParam = tesselationParameters[segIndex];\r\n            const localParam = t - segStartParam;\r\n            vec3.scale(point, dir, localParam);\r\n            vec3.add(point, point, start);\r\n        }\r\n        if (tangent) {\r\n            vec3.copy(tangent, dir);\r\n        }\r\n    }\r\n    invert(pos: ReadonlyVec3): number {\r\n        const { vertices, tesselationParameters } = this;\r\n        let smallestDist = Number.MAX_VALUE;\r\n        let closestParameter = 0;\r\n        for (let i = 0; i < vertices.length - 1; ++i) {\r\n            const p = closestPointToLine(pos, vertices[i], vertices[i + 1]);\r\n            const dist = vec3.dist(p.pos, pos);\r\n            if (dist < smallestDist) {\r\n                smallestDist = dist;\r\n                const segLength =\r\n                    tesselationParameters[i + 1] - tesselationParameters[i];\r\n                closestParameter = tesselationParameters[i] + segLength * p.parameter;\r\n            }\r\n        }\r\n        return closestParameter;\r\n    }\r\n\r\n    toSegments(transform: mat4): LineSegment3D[] {\r\n        const { vertices, tesselationParameters } = this;\r\n        const segments: LineSegment3D[] = [];\r\n        for (let i = 1; i < tesselationParameters.length; ++i) {\r\n            const start = vec3.transformMat4(\r\n                vec3.create(),\r\n                vertices[i - 1],\r\n                transform\r\n            );\r\n            const end = vec3.transformMat4(vec3.create(), vertices[i], transform);\r\n            const dir = vec3.sub(vec3.create(), end, start);\r\n            vec3.normalize(dir, dir);\r\n            segments.push({ start, end, dir });\r\n        }\r\n        return segments;\r\n    }\r\n    toProfile(transform: mat4): ReadonlyVec2[] {\r\n        const { vertices, tesselationParameters } = this;\r\n        return getProfile(vertices, tesselationParameters, transform);\r\n    }\r\n}\r\n\r\nexport class Line3D extends DisposableCurve implements Curve3D {\r\n    readonly kind = \"line\";\r\n\r\n    constructor(\r\n        readonly origin: ReadonlyVec3,\r\n        readonly direction: ReadonlyVec3,\r\n        readonly beginParam: number,\r\n        readonly endParam: number,\r\n        readonly sense: -1 | 1,\r\n        readonly tesselationParameters: readonly number[]\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    eval(t: number, point: vec3 | undefined, tangent: vec3 | undefined) {\r\n        const { origin, direction, sense, beginParam, endParam } = this;\r\n        if (point) {\r\n            vec3.scale(point, direction, t);\r\n            vec3.add(point, point, origin);\r\n        }\r\n        if (tangent) {\r\n            if (sense > 0) vec3.copy(tangent, direction);\r\n            else vec3.negate(tangent, direction);\r\n        }\r\n    }\r\n    invert(pos: ReadonlyVec3) {\r\n        const start = vec3.create();\r\n        this.eval(this.beginParam, start, undefined);\r\n        const end = vec3.create();\r\n        this.eval(this.endParam, end, undefined);\r\n\r\n        const len = vec3.dist(start, end);\r\n        const pointToStart = vec3.create();\r\n        vec3.subtract(pointToStart, pos, start);\r\n\r\n        const distAlongLine = vec3.dot(this.direction, pointToStart);\r\n        const fraction = distAlongLine / len;\r\n        return this.beginParam + (this.endParam - this.beginParam) * fraction;\r\n    }\r\n}\r\n\r\nexport class Arc3D extends DisposableCurve implements Curve3D {\r\n    readonly kind = \"arc\";\r\n    readonly tmp = vec3.create();\r\n\r\n    constructor(\r\n        readonly origin: ReadonlyVec3,\r\n        readonly axisX: ReadonlyVec3,\r\n        readonly axisY: ReadonlyVec3,\r\n        readonly radius: number,\r\n        readonly beginParam: number,\r\n        readonly endParam: number,\r\n        readonly sense: -1 | 1,\r\n        readonly tesselationParameters: readonly number[]\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    eval(t: number, point: vec3 | undefined, tangent: vec3 | undefined) {\r\n        const { sense } = this;\r\n        const x = Math.cos(t);\r\n        const y = Math.sin(t);\r\n        if (point) {\r\n            const { origin, radius, axisX, axisY, tmp } = this;\r\n            vec3.scale(tmp, axisX, x * radius);\r\n            vec3.add(point, origin, tmp);\r\n            vec3.scale(tmp, axisY, y * radius);\r\n            vec3.add(point, point, tmp);\r\n        }\r\n        if (tangent) {\r\n            const { axisX, axisY, tmp } = this;\r\n            vec3.scale(tangent, axisX, x * sense);\r\n            vec3.scale(tmp, axisY, -y * sense);\r\n            vec3.add(tangent, tmp, tangent);\r\n        }\r\n    }\r\n\r\n    invert(pos: ReadonlyVec3) {\r\n        const a = pointAtAngle(pos, this);\r\n        if (a > this.endParam || a < this.beginParam) {\r\n            let disEnd = a - this.endParam;\r\n            if (disEnd < 0) {\r\n                disEnd += 2 * Math.PI;\r\n            }\r\n            let disStart = this.beginParam - a;\r\n            if (disStart < 0) {\r\n                disStart += 2 * Math.PI;\r\n            }\r\n            if (disEnd < disStart) {\r\n                return this.endParam;\r\n            }\r\n            return this.beginParam;\r\n        }\r\n        return a;\r\n    }\r\n}\r\n\r\nexport function pointAtAngle(point: ReadonlyVec3, arc3d: Arc3D) {\r\n    const planeNormal = vec3.cross(vec3.create(), arc3d.axisX, arc3d.axisY);\r\n    const p = vec3.sub(vec3.create(), point, arc3d.origin);\r\n    const d = vec3.dot(p, planeNormal);\r\n    const projectedPoint = vec3.scaleAndAdd(\r\n        vec3.create(),\r\n        point,\r\n        planeNormal,\r\n        -d\r\n    );\r\n    const dir = vec3.sub(vec3.create(), projectedPoint, arc3d.origin);\r\n    vec3.normalize(dir, dir);\r\n    const pointOnArc = vec3.scaleAndAdd(\r\n        vec3.create(),\r\n        arc3d.origin,\r\n        dir,\r\n        arc3d.radius\r\n    );\r\n    vec3.sub(pointOnArc, pointOnArc, arc3d.origin);\r\n    const x = vec3.dot(pointOnArc, arc3d.axisX);\r\n    const y = vec3.dot(pointOnArc, arc3d.axisY);\r\n    let a = Math.atan2(y, x);\r\n    if (a < 0) {\r\n        a += 2 * Math.PI;\r\n    }\r\n    return a;\r\n}\r\n\r\ntype Pointer = number;\r\n\r\nexport class NurbsCurve3D extends DisposableCurve implements Curve3D {\r\n    readonly kind = \"nurbs\";\r\n    ptr: Pointer = 0;\r\n\r\n    constructor(\r\n        readonly order: number,\r\n        readonly controlPoints: ReadonlyVec3[],\r\n        readonly knots: number[],\r\n        readonly weights: number[] | undefined,\r\n        readonly beginParam: number,\r\n        readonly endParam: number,\r\n        readonly sense: -1 | 1,\r\n        readonly tesselationParameters: readonly number[],\r\n        private readonly wasmInstance: any,\r\n        private readonly buffer: Float64Array\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    dispose() {\r\n        if (this.weights) {\r\n            this.wasmInstance._disposeNurbsCurve3DWithWeights(this.ptr);\r\n        } else {\r\n            this.wasmInstance._disposeNurbsCurve3D(this.ptr);\r\n        }\r\n    }\r\n\r\n    eval(t: number, point: vec3 | undefined, tangent: vec3 | undefined) {\r\n        if (this.ptr === 0) {\r\n            this.ptr = makeNurbsCurve3D(\r\n                this.wasmInstance,\r\n                this.knots,\r\n                this.controlPoints,\r\n                this.weights,\r\n                this.order\r\n            );\r\n        }\r\n        if (this.weights) {\r\n            this.wasmInstance._evalNurbsCurve3DWithWeights(\r\n                this.ptr,\r\n                t,\r\n                point ? this.buffer.byteOffset : undefined,\r\n                tangent ? this.buffer.byteOffset + 24 : undefined\r\n            );\r\n        } else {\r\n            this.wasmInstance._evalNurbsCurve3D(\r\n                this.ptr,\r\n                t,\r\n                point ? this.buffer.byteOffset : undefined,\r\n                tangent ? this.buffer.byteOffset + 24 : undefined\r\n            );\r\n        }\r\n        if (point != undefined) {\r\n            const [x, y, z] = this.buffer.subarray(0, 3);\r\n            vec3.set(point, x, y, z);\r\n        }\r\n        if (tangent != undefined) {\r\n            const [x, y, z] = this.buffer.subarray(3, 6);\r\n            vec3.set(tangent, x, y, z);\r\n        }\r\n    }\r\n\r\n    invert(point: ReadonlyVec3) {\r\n        if (this.ptr === 0) {\r\n            const ctrlPt2d = this.controlPoints.map((p) =>\r\n                vec2.fromValues(p[0] / Math.PI, p[1] / 500)\r\n            );\r\n            this.ptr = makeNurbsCurve2D(\r\n                this.wasmInstance,\r\n                this.knots,\r\n                ctrlPt2d,\r\n                this.weights,\r\n                this.order\r\n            );\r\n        }\r\n        return this.wasmInstance._invertNurbsCurve3D(\r\n            this.ptr,\r\n            point[0],\r\n            point[1],\r\n            point[2]\r\n        );\r\n    }\r\n}\r\n\r\nexport class Line2D extends DisposableCurve implements Curve2D {\r\n    readonly kind = \"line\";\r\n\r\n    constructor(\r\n        readonly origin: ReadonlyVec2,\r\n        readonly direction: ReadonlyVec2,\r\n        readonly beginParam: number,\r\n        readonly endParam: number,\r\n        readonly sense: -1 | 1\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    eval(t: number, point: vec2 | undefined, tangent: vec2 | undefined) {\r\n        const { origin, direction } = this;\r\n        if (point) {\r\n            vec2.scale(point, direction, t);\r\n            vec2.add(point, point, origin);\r\n        }\r\n        if (tangent) {\r\n            if (this.sense > 0) {\r\n                vec2.copy(tangent, direction);\r\n            } else {\r\n                vec2.negate(tangent, direction);\r\n            }\r\n        }\r\n    }\r\n\r\n    project(point: ReadonlyVec2): number {\r\n        const [x, y] = point;\r\n        const { origin, direction, beginParam, endParam } = this;\r\n        const dx = x - origin[0];\r\n        const dy = y - origin[1];\r\n        let t = dx * direction[0] + dy * direction[1]; // dot product yields projection parameter\r\n        // clamp to range\r\n        const centerParam = (beginParam + endParam) / 2;\r\n        const extent = Math.abs(endParam - beginParam) / 2;\r\n        const minParam = centerParam - extent;\r\n        const maxParam = centerParam + extent;\r\n        t = Math.max(minParam, Math.min(maxParam, t));\r\n        return t;\r\n        // // find projected point\r\n        // const px = origin[0] + direction[0] * t;\r\n        // const py = origin[1] - direction[1] * t;\r\n        // const pdx = x - px;\r\n        // const pdy = y - py;\r\n        // return pdy * direction[0] - pdx * direction[1]; // cross product yields signed distance from line\r\n    }\r\n\r\n    // intersectCount(point: ReadonlyVec2) {\r\n    //     const [x, y] = point;\r\n    //     if (x > this.minX && y >= this.minY && y < this.maxY) {\r\n    //         const { begin, end } = this;\r\n    //         const t = (y - begin[1]) / (end[1] - begin[1]);\r\n    //         const lx = begin[0] + this.deltaX * t;\r\n    //         if (x > lx) {\r\n    //             return 1;\r\n    //         }\r\n    //     }\r\n    //     return 0;\r\n    // }\r\n}\r\n\r\nexport class NurbsCurve2D extends DisposableCurve implements Curve2D {\r\n    readonly kind = \"nurbs\";\r\n    ptr: Pointer = 0;\r\n\r\n    constructor(\r\n        readonly order: number,\r\n        readonly controlPoints: ReadonlyVec2[],\r\n        readonly knots: number[],\r\n        readonly weights: number[] | undefined,\r\n        readonly beginParam: number,\r\n        readonly endParam: number,\r\n        readonly sense: -1 | 1,\r\n        private readonly wasmInstance: any,\r\n        private readonly buffer: Float64Array\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    eval(t: number, point: vec2 | undefined, tangent: vec2 | undefined) {\r\n        if (this.ptr === 0) {\r\n            const ctrlPt2d = this.controlPoints.map((p) =>\r\n                vec2.fromValues(p[0] / Math.PI, p[1] / 500)\r\n            );\r\n            this.ptr = makeNurbsCurve2D(\r\n                this.wasmInstance,\r\n                this.knots,\r\n                ctrlPt2d,\r\n                this.weights,\r\n                this.order\r\n            );\r\n        }\r\n        if (this.weights) {\r\n            this.wasmInstance._evalNurbsCurve2DWithWeights(\r\n                this.ptr,\r\n                t,\r\n                point ? this.buffer.byteOffset : undefined,\r\n                tangent ? this.buffer.byteOffset + 24 : undefined\r\n            );\r\n        } else {\r\n            this.wasmInstance._evalNurbsCurve2D(\r\n                this.ptr,\r\n                t,\r\n                point ? this.buffer.byteOffset : undefined,\r\n                tangent ? this.buffer.byteOffset + 24 : undefined\r\n            );\r\n        }\r\n        if (point != undefined) {\r\n            const [x, y] = this.buffer.subarray(0, 2);\r\n            vec2.set(point, x, y);\r\n        }\r\n        if (tangent != undefined) {\r\n            const [x, y] = this.buffer.subarray(3, 5);\r\n            vec2.set(tangent, x, y);\r\n        }\r\n    }\r\n\r\n    project(point: ReadonlyVec2): number {\r\n        if (this.ptr === 0) {\r\n            const ctrlPt2d = this.controlPoints.map((p) =>\r\n                vec2.fromValues(p[0] / Math.PI, p[1] / 500)\r\n            );\r\n            this.ptr = makeNurbsCurve2D(\r\n                this.wasmInstance,\r\n                this.knots,\r\n                ctrlPt2d,\r\n                this.weights,\r\n                this.order\r\n            );\r\n        }\r\n        return this.wasmInstance._projectNurbsCurve2D(this.ptr, point[0], point[1]);\r\n    }\r\n\r\n    dispose() {\r\n        if (this.weights) {\r\n            this.wasmInstance._disposeNurbsCurve2DWithWeights(this.ptr);\r\n        } else {\r\n            this.wasmInstance._disposeNurbsCurve2D(this.ptr);\r\n        }\r\n    }\r\n}\r\n\r\nconst pi2 = Math.PI * 2;\r\n\r\nexport class Arc2D implements Curve2D {\r\n    readonly kind = \"arc\";\r\n\r\n    constructor(\r\n        readonly origin: ReadonlyVec2,\r\n        readonly radius: number,\r\n        readonly beginParam: number,\r\n        readonly endParam: number,\r\n        readonly sense: 1 | -1\r\n    ) { }\r\n\r\n    eval(t: number, point: vec2 | undefined, tangent: vec2 | undefined) {\r\n        const x = Math.cos(t);\r\n        const y = Math.sin(t);\r\n        if (point) {\r\n            const { origin, radius } = this;\r\n            point[0] = x * radius + origin[0];\r\n            point[1] = y * radius + origin[1];\r\n        }\r\n        if (tangent) {\r\n            const { sense } = this;\r\n            tangent[0] = -y * sense;\r\n            tangent[1] = x * sense;\r\n        }\r\n    }\r\n\r\n    project(point: ReadonlyVec2): number {\r\n        const [x, y] = point;\r\n        const { origin, beginParam, endParam } = this;\r\n        let t = Math.atan2(y - origin[1], x - origin[0]);\r\n        if (t < 0) t += pi2;\r\n        // clamp to range\r\n        const centerParam = (beginParam + endParam) / 2;\r\n        const extent = Math.abs(endParam - beginParam) / 2;\r\n        const minParam = centerParam - extent;\r\n        const maxParam = centerParam + extent;\r\n        while (t < centerParam - Math.PI) t += pi2;\r\n        while (t > centerParam + Math.PI) t -= pi2;\r\n        t = Math.max(minParam, Math.min(maxParam, t));\r\n\r\n        return t;\r\n    }\r\n\r\n    // isVectorInParamRange(x: number, y: number) {\r\n    //     return x * this.rangeVec[0] + y * this.rangeVec[1] >= this.rangeCos;\r\n    // }\r\n\r\n    // intersectCount(point: ReadonlyVec2) {\r\n    //     const [x, y] = point;\r\n    //     const { origin, radius } = this;\r\n    //     let cnt = 0;\r\n    //     if (y >= this.minY && y < this.maxY) {\r\n    //         const uy = Math.min(1, (y - origin[1]) / radius);\r\n    //         const ux = Math.sqrt(1 - uy * uy);\r\n    //         // is point right of origin?\r\n    //         if (x > origin[0]) {\r\n    //             if (this.isVectorInParamRange(ux, uy) && x > ux) {\r\n    //                 cnt++;\r\n    //             }\r\n    //         }\r\n    //         if (x > origin[0] - radius) {\r\n    //             if (this.isVectorInParamRange(-ux, uy) && x > -ux) {\r\n    //                 cnt++;\r\n    //             }\r\n    //         }\r\n\r\n    //     }\r\n    //     return cnt;\r\n    // }\r\n}\r\n", "import type { ReadonlyMat4, ReadonlyVec3 } from \"gl-matrix\";\r\nimport { glMatrix, mat3, mat4, vec2, vec3 } from \"gl-matrix\";\r\nimport type { AABB3, CylinderData, EdgeData, FaceData, ProductData } from \"./brep\";\r\nimport type { Curve3D, LineSegment3D } from \"./curves\";\r\nimport { Arc3D, Line3D, LineStrip3D, lineToSegment, pointAtAngle } from \"./curves\";\r\nimport { matFromInstance } from \"./loader\";\r\nimport type { Plane } from \"./surfaces\";\r\nimport { closestPointToLine } from \"./util\";\r\nimport { unitToScale } from \"./loader\";\r\nimport type { CylinerMeasureType, DuoMeasurementValues, MeasureSettings } from \"measure\";\r\nimport { MeasureTool } from \"./scene\";\r\n\r\n\r\nglMatrix.setMatrixArrayType(Array);\r\n\r\nconst epsilon = 0.0001;\r\n\r\nexport function isInsideAABB(point: vec3, aabb: AABB3, epsilon = 0): boolean {\r\n  for (let i = 0; i < 3; ++i) {\r\n    if (\r\n      point[i] - aabb.min[i] + epsilon < 0 ||\r\n      aabb.max[i] - point[i] + epsilon < 0\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function cylinderLength(\r\n  product: ProductData,\r\n  cylinderFace: FaceData,\r\n  origo: vec3,\r\n  dir: vec3\r\n): number {\r\n  const loopData = product.loops[cylinderFace.outerLoop];\r\n  //const halfEdges = loopData.halfEdges.map((i) => product.halfEdges[i]);\r\n  // //First try with seam\r\n  // for (const halfEdge of halfEdges) {\r\n  //     const edge = product.edges[halfEdge.edge];\r\n  //     if (edge.virtual) {\r\n  //         return (edge.parameterBounds[1] - edge.parameterBounds[0]) * halfEdge.direction;\r\n  //     }\r\n  // }\r\n  const circleOrigins: ReadonlyVec3[] = [];\r\n  for (const halfEdge of loopData.halfEdges) {\r\n    const halfEdgeData = product.halfEdges[halfEdge];\r\n    const edgeData = product.edges[halfEdgeData.edge];\r\n    if (edgeData.curve3D !== undefined) {\r\n      const curveData = product.curves3D[edgeData.curve3D];\r\n      if (curveData.kind == \"circle\") {\r\n        circleOrigins.push(curveData.origin);\r\n      }\r\n    }\r\n  }\r\n  if (circleOrigins.length == 2) {\r\n    let sense = 1;\r\n    const other = vec3.equals(circleOrigins[0], origo)\r\n      ? circleOrigins[1]\r\n      : circleOrigins[0];\r\n    if (vec3.dot(dir, vec3.sub(vec3.create(), other, origo)) < 0) {\r\n      sense = -1;\r\n    }\r\n    return sense * vec3.dist(circleOrigins[0], circleOrigins[1]);\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction fullCircle(edge: EdgeData): boolean {\r\n  const paramLength = Math.abs(\r\n    edge.parameterBounds[1] - edge.parameterBounds[0]\r\n  );\r\n  return Math.abs(paramLength - 2 * Math.PI) < epsilon;\r\n}\r\n\r\nexport function fullCircleCylinder(\r\n  product: ProductData,\r\n  cylinderFace: FaceData\r\n): boolean {\r\n  const loopData = product.loops[cylinderFace.outerLoop];\r\n  const halfEdges = loopData.halfEdges.map((i) => product.halfEdges[i]);\r\n  let noArcs = 0;\r\n  for (const halfEdge of halfEdges) {\r\n    const edge = product.edges[halfEdge.edge];\r\n    if (edge.curve3D !== undefined) {\r\n      const curve = product.curves3D[edge.curve3D];\r\n      if (curve.kind == \"circle\") {\r\n        noArcs++;\r\n        if (!fullCircle(edge)) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return noArcs == 2;\r\n}\r\n\r\nexport async function cylinderCenterLine(\r\n  product: ProductData,\r\n  cylinderFace: FaceData,\r\n  cylinderData: CylinderData,\r\n  instanceMat: ReadonlyMat4,\r\n  measureType?: CylinerMeasureType\r\n): Promise<[vec3, vec3]> {\r\n  const scale = unitToScale(product.units);\r\n  const cylinderMtx = mat4.fromValues(\r\n    ...(cylinderData.transform as Parameters<typeof mat4.fromValues>)\r\n  );\r\n  const cylinderOrigo = mat4.getTranslation(vec3.create(), cylinderMtx);\r\n  const cylinderDir = vec3.fromValues(\r\n    cylinderMtx[8],\r\n    cylinderMtx[9],\r\n    cylinderMtx[10]\r\n  );\r\n  const cyliderLen = cylinderLength(\r\n    product,\r\n    cylinderFace,\r\n    cylinderOrigo,\r\n    cylinderDir\r\n  );\r\n  const cylinderEnd = vec3.add(\r\n    vec3.create(),\r\n    cylinderOrigo,\r\n    vec3.scale(vec3.create(), cylinderDir, cyliderLen)\r\n  );\r\n  vec3.transformMat4(cylinderOrigo, cylinderOrigo, instanceMat);\r\n  vec3.transformMat4(cylinderEnd, cylinderEnd, instanceMat);\r\n\r\n  if (measureType == \"bottom\" || measureType == \"top\") {\r\n    //top or bottom\r\n    const dir = vec3.sub(vec3.create(), cylinderEnd, cylinderOrigo);\r\n    vec3.normalize(dir, dir);\r\n    const up = glMatrix.equals(\r\n      Math.abs(vec3.dot(vec3.fromValues(0, 0, 1), dir)),\r\n      1\r\n    )\r\n      ? vec3.fromValues(0, 1, 0)\r\n      : vec3.fromValues(0, 0, 1);\r\n\r\n    const right = vec3.cross(vec3.create(), up, dir);\r\n    vec3.cross(up, dir, right);\r\n    vec3.normalize(up, up);\r\n    if (measureType == \"top\") {\r\n      vec3.scaleAndAdd(cylinderOrigo, cylinderOrigo, up, cylinderData.radius * scale);\r\n      vec3.scaleAndAdd(cylinderEnd, cylinderEnd, up, cylinderData.radius * scale);\r\n    } else {\r\n      vec3.scaleAndAdd(cylinderOrigo, cylinderOrigo, up, -cylinderData.radius * scale);\r\n      vec3.scaleAndAdd(cylinderEnd, cylinderEnd, up, -cylinderData.radius * scale);\r\n    }\r\n  }\r\n\r\n  return [cylinderOrigo, cylinderEnd];\r\n}\r\n\r\nexport function closestPointsToIntersection(\r\n  startA: ReadonlyVec3,\r\n  endA: ReadonlyVec3,\r\n  startB: ReadonlyVec3,\r\n  endB: ReadonlyVec3\r\n): vec3 {\r\n  const dirA = vec3.sub(vec3.create(), endA, startA);\r\n  const lenA = vec3.len(dirA);\r\n  vec3.normalize(dirA, dirA);\r\n  const dirB = vec3.sub(vec3.create(), endB, startB);\r\n  vec3.normalize(dirB, dirB);\r\n  const dp = vec3.dot(dirA, dirB);\r\n  const cp = vec3.len(vec3.cross(vec3.create(), dirA, dirB));\r\n\r\n  function intersectionPoint(\r\n    a: ReadonlyVec3,\r\n    da: ReadonlyVec3,\r\n    p: ReadonlyVec3,\r\n    l: number\r\n  ): vec3 {\r\n    const ab = vec3.sub(vec3.create(), p, a);\r\n    const ta = vec3.dot(ab, da);\r\n    const pa = vec3.scaleAndAdd(vec3.create(), a, da, ta);\r\n    const d = vec3.dist(pa, p);\r\n    const tb = (d * dp) / cp;\r\n    const t = Math.min(l, Math.max(ta + tb, 0));\r\n    return vec3.scaleAndAdd(vec3.create(), a, da, t);\r\n  }\r\n\r\n  return intersectionPoint(startA, dirA, startB, lenA);\r\n}\r\n\r\nexport function closestProjectedPoints(\r\n  startA: ReadonlyVec3,\r\n  endA: ReadonlyVec3,\r\n  startB: ReadonlyVec3,\r\n  endB: ReadonlyVec3\r\n): [number, vec3, vec3] {\r\n  let pointA = vec3.create();\r\n  let pointB = vec3.create();\r\n\r\n  const { pos: p1 } = closestPointToLine(startB, startA, endA);\r\n  const { pos: p2 } = closestPointToLine(endB, startA, endA);\r\n  const { pos: p3 } = closestPointToLine(startA, startB, endB);\r\n  const { pos: p4 } = closestPointToLine(endA, startB, endB);\r\n\r\n  const d1 = vec3.length(vec3.sub(vec3.create(), startB, p1));\r\n  const d2 = vec3.length(vec3.sub(vec3.create(), p2, endB));\r\n  const d3 = vec3.length(vec3.sub(vec3.create(), startA, p3));\r\n  const d4 = vec3.length(vec3.sub(vec3.create(), p4, endA));\r\n\r\n  let pointChosen: \"a\" | \"b\" = \"a\";\r\n  let distance = 0;\r\n  if (d1 < d2 && d1 < d3 && d1 < d4) {\r\n    distance = d1;\r\n    pointA = p1;\r\n    pointB = startB as vec3;\r\n  } else if (d2 < d3 && d2 < d4) {\r\n    distance = d2;\r\n    pointA = p2;\r\n    pointB = endB as vec3;\r\n  } else if (d3 < d4) {\r\n    distance = d3;\r\n    pointA = startA as vec3;\r\n    pointB = p3;\r\n    pointChosen = \"b\"\r\n  } else {\r\n    distance = d3;\r\n    pointA = endA as vec3;\r\n    pointB = p4;\r\n    pointChosen = \"b\"\r\n  }\r\n  if (pointChosen == \"a\") {\r\n    const { pos: p5 } = closestPointToLine(pointA, startB, endB);\r\n    const testDist = vec3.dist(p5, pointA);\r\n    if (testDist < distance) {\r\n      pointB = p5;\r\n      distance = testDist;\r\n    }\r\n  } else {\r\n    const { pos: p5 } = closestPointToLine(pointB, startA, endA);\r\n    const testDist = vec3.dist(p5, pointB);\r\n    if (testDist < distance) {\r\n      pointA = p5;\r\n      distance = testDist;\r\n    }\r\n  }\r\n\r\n  return [distance, pointA, pointB];\r\n}\r\n\r\nexport function decomposePlane(\r\n  product: ProductData,\r\n  faceData: FaceData,\r\n  instanceIdx: number,\r\n  plane: Plane,\r\n  centerPoint = false\r\n): [vec3, vec3] {\r\n  const mat = matFromInstance(product.instances[instanceIdx]);\r\n  const normalMat = mat3.normalFromMat4(mat3.create(), mat);\r\n\r\n  const uv = vec2.fromValues(0, 0);\r\n  const planePoint = vec3.create();\r\n  const planeNorm = vec3.create();\r\n  if (centerPoint) {\r\n    vec3.add(planePoint, faceData.aabb.max, faceData.aabb.min);\r\n    vec3.scale(planePoint, planePoint, 0.5);\r\n  } else {\r\n    plane.evalPosition(planePoint, uv);\r\n  }\r\n  plane.evalNormal(planeNorm, uv);\r\n  vec3.transformMat4(planePoint, planePoint, mat);\r\n  vec3.transformMat3(planeNorm, planeNorm, normalMat);\r\n  vec3.normalize(planeNorm, planeNorm);\r\n  return [planePoint, planeNorm];\r\n}\r\n\r\nfunction lineToLineMeasure(segA: LineSegment3D, segB: LineSegment3D): DuoMeasurementValues {\r\n  const parallel =\r\n    vec3.equals(segA.dir, segB.dir) ||\r\n    vec3.equals(segA.dir, vec3.negate(segB.dir, segB.dir));\r\n\r\n  let [distance, pointA, pointB] = closestProjectedPoints(\r\n    segA.start,\r\n    segA.end,\r\n    segB.start,\r\n    segB.end\r\n  );\r\n  const diff = vec3.sub(vec3.create(), pointA, pointB);\r\n  if (!parallel) {\r\n    const crossPoint = closestPointsToIntersection(\r\n      segA.start,\r\n      segA.end,\r\n      segB.start,\r\n      segB.end\r\n    );\r\n    const { pos: crossPointA } = closestPointToLine(\r\n      crossPoint,\r\n      segA.start,\r\n      segA.end\r\n    );\r\n    const { pos: crossPointB } = closestPointToLine(\r\n      crossPoint,\r\n      segB.start,\r\n      segB.end\r\n    );\r\n    if (distance > vec3.dist(crossPointA, crossPointB)) {\r\n      pointA = crossPointA;\r\n      pointB = crossPointB;\r\n      vec3.sub(diff, crossPointB, crossPointA);\r\n    }\r\n  }\r\n\r\n  return {\r\n    drawKind: \"measureResult\",\r\n    distance: vec3.len(diff),\r\n    distanceX: Math.abs(diff[0]),\r\n    distanceY: Math.abs(diff[1]),\r\n    distanceZ: Math.abs(diff[2]),\r\n    measureInfoA: { point: pointA },\r\n    measureInfoB: { point: pointB }\r\n  };\r\n}\r\n\r\nfunction toMeasureValues(pointA: vec3, pointB: vec3, parameterA?: number, parameterB?: number): DuoMeasurementValues {\r\n  const diff = vec3.subtract(vec3.create(), pointA, pointB);\r\n  return {\r\n    drawKind: \"measureResult\",\r\n    distance: vec3.len(diff),\r\n    distanceX: Math.abs(diff[0]),\r\n    distanceY: Math.abs(diff[1]),\r\n    distanceZ: Math.abs(diff[2]),\r\n    measureInfoA: { point: pointA, parameter: parameterA },\r\n    measureInfoB: { point: pointB, parameter: parameterB }\r\n  };\r\n}\r\n\r\nfunction segmentToArcMeasure(\r\n  arc: Arc3D,\r\n  arcMat: ReadonlyMat4,\r\n  seg: LineSegment3D\r\n): DuoMeasurementValues {\r\n  const wsOrigin = vec3.transformMat4(vec3.create(), arc.origin, arcMat);\r\n  const { pos: point } = closestPointToLine(wsOrigin, seg.start, seg.end);\r\n  const arcInvMat = mat4.invert(mat4.create(), arcMat);\r\n  const pointInArcSpace = vec3.transformMat4(vec3.create(), point, arcInvMat);\r\n\r\n  const t = pointAtAngle(pointInArcSpace, arc);\r\n  const pointA = vec3.create();\r\n  const pointB = vec3.create();\r\n  if (t <= arc.endParam && t >= arc.beginParam) {\r\n    arc.eval(t, pointA, undefined);\r\n    vec3.transformMat4(pointA, pointA, arcMat);\r\n    vec3.copy(pointB, point);\r\n  } else {\r\n    const arcPointA = vec3.create();\r\n    arc.eval(arc.beginParam, arcPointA, undefined);\r\n    vec3.transformMat4(arcPointA, arcPointA, arcMat);\r\n    const arcPointB = vec3.create();\r\n    arc.eval(arc.endParam, arcPointB, undefined);\r\n    vec3.transformMat4(arcPointB, arcPointB, arcMat);\r\n    const { pos: linePointA } = closestPointToLine(\r\n      arcPointA,\r\n      seg.start,\r\n      seg.end\r\n    );\r\n    const { pos: linePointB } = closestPointToLine(\r\n      arcPointB,\r\n      seg.start,\r\n      seg.end\r\n    );\r\n\r\n    const da = vec3.dist(linePointA, arcPointA);\r\n    const db = vec3.dist(linePointB, arcPointB);\r\n    if (da < db) {\r\n      vec3.copy(pointA, arcPointA);\r\n      vec3.copy(pointB, linePointA);\r\n    } else {\r\n      vec3.copy(pointA, arcPointB);\r\n      vec3.copy(pointB, linePointB);\r\n    }\r\n  }\r\n  return toMeasureValues(pointA, pointB);\r\n}\r\n\r\nfunction closestPointToArc(point: ReadonlyVec3, arc: Arc3D, mat: ReadonlyMat4) {\r\n  const invMat = mat4.invert(mat4.create(), mat);\r\n  const localSpaceP = vec3.transformMat4(vec3.create(), point, invMat);\r\n  const t = arc.invert(localSpaceP);\r\n  const pointOnCircle = vec3.create();\r\n  arc.eval(t, pointOnCircle, undefined);\r\n  vec3.transformMat4(pointOnCircle, pointOnCircle, mat);\r\n  return pointOnCircle;\r\n}\r\n\r\nfunction getCurveToCurveMeasureValues(\r\n  productA: ProductData,\r\n  curveA: Curve3D,\r\n  instanceIdxA: number,\r\n  productB: ProductData,\r\n  curveB: Curve3D,\r\n  instanceIdxB: number\r\n): DuoMeasurementValues | undefined {\r\n  let curveDataA = { prouct: productA, curve: curveA, instance: instanceIdxA };\r\n  let curveDataB = { prouct: productB, curve: curveB, instance: instanceIdxB };\r\n  const entities = [curveDataA, curveDataB];\r\n  entities.sort((a, b) => a.curve!.kind.localeCompare(b.curve!.kind));\r\n  [curveDataA, curveDataB] = entities;\r\n  const kindCombo = `${curveDataA.curve!.kind}_${curveDataB.curve!.kind}`;\r\n  const matA = matFromInstance(\r\n    curveDataA.prouct.instances[curveDataA.instance]\r\n  );\r\n  const matB = matFromInstance(\r\n    curveDataB.prouct.instances[curveDataB.instance]\r\n  );\r\n  switch (kindCombo) {\r\n    case \"line_line\": {\r\n      const values = lineToLineMeasure(\r\n        lineToSegment(curveDataA.curve as Line3D, matA),\r\n        lineToSegment(curveDataB.curve as Line3D, matB)\r\n      );\r\n      return values;\r\n    }\r\n    case \"arc_arc\": {\r\n      const arcA = curveDataA.curve as Arc3D;\r\n      const arcB = curveDataB.curve as Arc3D;\r\n      const wsOriginA = vec3.transformMat4(vec3.create(), arcA.origin, matA);\r\n      const wsOriginB = vec3.transformMat4(vec3.create(), arcB.origin, matB);\r\n      const closestPointA = closestPointToArc(wsOriginA, arcB, matB);\r\n      const closestPointB = closestPointToArc(wsOriginB, arcA, matA);\r\n      return toMeasureValues(closestPointA, closestPointB);\r\n    }\r\n    case \"arc_line\": {\r\n      const arc = curveDataA.curve as Arc3D;\r\n      const line = curveDataB.curve as Line3D;\r\n      return segmentToArcMeasure(arc, matA, lineToSegment(line, matA));\r\n    }\r\n    case \"arc_lineStrip\": {\r\n      const arc = curveDataA.curve as Arc3D;\r\n      const strip = curveDataB.curve as LineStrip3D;\r\n      const segments = strip.toSegments(matB);\r\n      let minDist = 1000000;\r\n      let bestMeasureValues: undefined | DuoMeasurementValues = undefined;\r\n      for (const seg of segments) {\r\n        const measureValue = segmentToArcMeasure(arc, matA, seg);\r\n        if (measureValue.distance && measureValue.distance < minDist) {\r\n          bestMeasureValues = measureValue;\r\n          minDist = measureValue.distance;\r\n        }\r\n      }\r\n      return bestMeasureValues;\r\n    }\r\n    case \"line_lineStrip\": {\r\n      const segmentA = lineToSegment(curveDataA.curve as Line3D, matA);\r\n      const strip = curveDataB.curve as LineStrip3D;\r\n      const segments = strip.toSegments(matB);\r\n      let minDist = 1000000;\r\n      let bestMeasureValues: undefined | DuoMeasurementValues = undefined;\r\n      for (const seg of segments) {\r\n        const measureValue = lineToLineMeasure(segmentA, seg);\r\n        if (measureValue.distance && measureValue.distance < minDist) {\r\n          bestMeasureValues = measureValue;\r\n          minDist = measureValue.distance;\r\n        }\r\n      }\r\n      if (\r\n        bestMeasureValues &&\r\n        bestMeasureValues.measureInfoA?.point &&\r\n        bestMeasureValues.measureInfoB?.point\r\n      ) {\r\n        const tb = strip.invert(bestMeasureValues.measureInfoB.point);\r\n        return { ...bestMeasureValues, measureInfoB: { point: bestMeasureValues.measureInfoB.point, parameter: tb } };\r\n      }\r\n    }\r\n    case \"lineStrip_lineStrip\": {\r\n      const stripA = curveDataA.curve as LineStrip3D;\r\n      const segmentsA = stripA.toSegments(matA);\r\n\r\n      const stripB = curveDataB.curve as LineStrip3D;\r\n      const segmentsB = stripB.toSegments(matB);\r\n      let minDist = 1000000;\r\n      let bestMeasureValues: undefined | DuoMeasurementValues = undefined;\r\n      for (const segA of segmentsA) {\r\n        for (const segB of segmentsB) {\r\n          const measureValue = lineToLineMeasure(segA, segB);\r\n          if (measureValue.distance && measureValue.distance < minDist) {\r\n            bestMeasureValues = measureValue;\r\n            minDist = measureValue.distance;\r\n          }\r\n        }\r\n      }\r\n      if (\r\n        bestMeasureValues &&\r\n        bestMeasureValues.measureInfoA?.point &&\r\n        bestMeasureValues.measureInfoB?.point\r\n      ) {\r\n        const ta = stripA.invert(bestMeasureValues.measureInfoA.point);\r\n        const tb = stripB.invert(bestMeasureValues.measureInfoB.point);\r\n        return { ...bestMeasureValues, measureInfoA: { point: bestMeasureValues.measureInfoA.point, parameter: ta }, measureInfoB: { point: bestMeasureValues.measureInfoB.point, parameter: tb } };\r\n      }\r\n      return bestMeasureValues;\r\n    }\r\n  }\r\n}\r\n\r\nexport async function getEdgeToEdgeMeasureValues(\r\n  productA: ProductData,\r\n  edgeIdxA: number,\r\n  instanceIdxA: number,\r\n  productB: ProductData,\r\n  edgeIdxB: number,\r\n  instanceIdxB: number\r\n): Promise<DuoMeasurementValues | undefined> {\r\n  let edgeCurveA = MeasureTool.geometryFactory.getCurve3DFromEdge(\r\n    productA,\r\n    edgeIdxA\r\n  );\r\n  let edgeCurveB = MeasureTool.geometryFactory.getCurve3DFromEdge(\r\n    productB,\r\n    edgeIdxB\r\n  );\r\n  if (edgeCurveA && edgeCurveB) {\r\n    return getCurveToCurveMeasureValues(\r\n      productA,\r\n      edgeCurveA,\r\n      instanceIdxA,\r\n      productB,\r\n      edgeCurveB,\r\n      instanceIdxB\r\n    );\r\n  }\r\n}\r\n\r\nexport async function faceToPointMeasureValues(\r\n  product: ProductData,\r\n  faceIdx: number,\r\n  instanceIdx: number,\r\n  point: vec3,\r\n  scale: number,\r\n  setting?: MeasureSettings\r\n): Promise<DuoMeasurementValues | undefined> {\r\n  const faceData = product.faces[faceIdx];\r\n  const surfaceData = product.surfaces[faceData.surface];\r\n  const surface = MeasureTool.geometryFactory.getSurface(surfaceData, 1);\r\n  if (surface) {\r\n    const mat = matFromInstance(product.instances[instanceIdx]);\r\n\r\n    switch (surface.kind) {\r\n      case \"plane\": {\r\n        const [pointPlane, norm] = decomposePlane(\r\n          product,\r\n          faceData,\r\n          instanceIdx,\r\n          surface as Plane,\r\n          false\r\n        );\r\n\r\n        const d = vec3.dot(\r\n          norm,\r\n          vec3.subtract(vec3.create(), point, pointPlane)\r\n        );\r\n        const normalPoint = vec3.add(\r\n          vec3.create(),\r\n          point,\r\n          vec3.scale(vec3.create(), vec3.negate(vec3.create(), norm), d)\r\n        );\r\n\r\n        return {\r\n          drawKind: \"measureResult\",\r\n          normalDistance: Math.abs(d),\r\n          distanceX: 0,\r\n          distanceY: 0,\r\n          distanceZ: 0,\r\n          normalPoints: [point, normalPoint],\r\n        };\r\n      }\r\n      case \"cylinder\": {\r\n        const cylinderMeasure = setting ? setting.cylinderMeasure : \"center\";\r\n        const cylinder = surfaceData as CylinderData;\r\n        const [cylinderOrigo, cylinderEnd] = await cylinderCenterLine(\r\n          product,\r\n          faceData,\r\n          cylinder,\r\n          mat,\r\n          cylinderMeasure\r\n        );\r\n\r\n        const projectedPoint = vec3.create();\r\n        const { pos: p1 } = closestPointToLine(\r\n          point,\r\n          cylinderOrigo,\r\n          cylinderEnd,\r\n          projectedPoint\r\n        );\r\n        const diff = vec3.sub(vec3.create(), point, p1);\r\n        const canUseCylinderSettings =\r\n          vec3.equals(projectedPoint, p1) &&\r\n          fullCircleCylinder(product, faceData);\r\n\r\n        if (\r\n          (cylinderMeasure == \"closest\" || cylinderMeasure == \"furthest\") &&\r\n          canUseCylinderSettings\r\n        ) {\r\n          vec3.normalize(diff, diff);\r\n          vec3.scale(diff, diff, cylinder.radius * scale);\r\n          if (cylinderMeasure == \"closest\") {\r\n            vec3.add(p1, p1, diff);\r\n          } else {\r\n            vec3.sub(p1, p1, diff);\r\n          }\r\n          vec3.sub(diff, point, p1);\r\n        }\r\n\r\n        return {\r\n          drawKind: \"measureResult\",\r\n          distance: vec3.length(diff),\r\n          distanceX: Math.abs(diff[0]),\r\n          distanceY: Math.abs(diff[1]),\r\n          distanceZ: Math.abs(diff[2]),\r\n          measureInfoA: { point, validMeasureSettings: canUseCylinderSettings },\r\n          measureInfoB: { point: p1, validMeasureSettings: canUseCylinderSettings }\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction curveToPointMeasureValues(\r\n  product: ProductData,\r\n  curve: Curve3D,\r\n  instanceIdx: number,\r\n  point: vec3\r\n): DuoMeasurementValues | undefined {\r\n  const mat = matFromInstance(product.instances[instanceIdx]);\r\n  if (curve.kind == \"line\") {\r\n    const line = curve as Line3D;\r\n    const start = vec3.create();\r\n    const end = vec3.create();\r\n    const dir = vec3.create();\r\n    curve.eval(line.beginParam, start, dir);\r\n    curve.eval(line.endParam, end, undefined);\r\n    vec3.transformMat4(start, start, mat);\r\n    vec3.transformMat4(end, end, mat);\r\n    const projectedPoint = vec3.create();\r\n    const { pos: closestPointOnLine } = closestPointToLine(\r\n      point,\r\n      start,\r\n      end,\r\n      projectedPoint\r\n    );\r\n    return toMeasureValues(point, closestPointOnLine);\r\n  } else if (curve.kind == \"arc\") {\r\n    const closestPoint = closestPointToArc(point, curve as Arc3D, mat);\r\n    return toMeasureValues(point, closestPoint);\r\n  } else if (curve.kind == \"lineStrip\") {\r\n    const invMat = mat4.invert(mat4.create(), mat);\r\n    const localSpaceP = vec3.transformMat4(vec3.create(), point, invMat);\r\n    const t = curve.invert(localSpaceP);\r\n    const closestPoint = vec3.create();\r\n    curve.eval(t, closestPoint, undefined);\r\n    vec3.transformMat4(closestPoint, closestPoint, mat);\r\n    return toMeasureValues(point, closestPoint, undefined, t);\r\n  }\r\n}\r\n\r\nexport async function edgeToPointMeasureValues(\r\n  product: ProductData,\r\n  edgeIdx: number,\r\n  instanceIdx: number,\r\n  point: vec3\r\n): Promise<DuoMeasurementValues | undefined> {\r\n  const curve = MeasureTool.geometryFactory.getCurve3DFromEdge(product, edgeIdx);\r\n  if (curve) {\r\n    return curveToPointMeasureValues(product, curve, instanceIdx, point);\r\n  }\r\n}\r\n\r\nexport async function segmentToPointMeasureValues(\r\n  product: ProductData,\r\n  segIdx: number,\r\n  instanceIdx: number,\r\n  point: vec3\r\n): Promise<DuoMeasurementValues | undefined> {\r\n  const curve = MeasureTool.geometryFactory.getCurve3DFromSegment(product, segIdx);\r\n  if (curve) {\r\n    return curveToPointMeasureValues(product, curve, instanceIdx, point);\r\n  }\r\n}\r\n\r\nfunction lineToPlaneMeasure(\r\n  lineSegment: LineSegment3D,\r\n  plane: Plane,\r\n  planeProduct: ProductData,\r\n  planeFacedata: FaceData,\r\n  faceInstance: number\r\n): DuoMeasurementValues | undefined {\r\n  const [planePoint, planeNorm] = decomposePlane(\r\n    planeProduct,\r\n    planeFacedata,\r\n    faceInstance,\r\n    plane\r\n  );\r\n  const lineLength = vec3.dist(lineSegment.start, lineSegment.end);\r\n  const linePoint = vec3.scaleAndAdd(\r\n    vec3.create(),\r\n    lineSegment.start,\r\n    lineSegment.dir,\r\n    lineLength\r\n  );\r\n  const parallel = Math.abs(vec3.dot(lineSegment.dir, planeNorm)) < 0.001;\r\n  if (parallel) {\r\n    const d1 = vec3.dot(planeNorm, planePoint);\r\n    const d2 = vec3.dot(planeNorm, linePoint);\r\n    const d = d1 - d2;\r\n    const normalPointFromLine = vec3.add(\r\n      vec3.create(),\r\n      linePoint,\r\n      vec3.scale(vec3.create(), planeNorm, d)\r\n    );\r\n\r\n    return {\r\n      drawKind: \"measureResult\",\r\n      distance: Math.abs(d),\r\n      distanceX: 0,\r\n      distanceY: 0,\r\n      distanceZ: 0,\r\n      normalPoints: [normalPointFromLine, linePoint]\r\n    };\r\n  }\r\n}\r\n\r\nasync function lineToCylinderMeasure(\r\n  seg: LineSegment3D,\r\n  cylinder: CylinderData,\r\n  cylinderProduct: ProductData,\r\n  cylinderFaceData: FaceData,\r\n  cylinderMat: mat4,\r\n  cylinderScale: number,\r\n  cylinderMeasure: CylinerMeasureType\r\n): Promise<DuoMeasurementValues> {\r\n  const [cylinderOrigo, cylinderEnd] = await cylinderCenterLine(\r\n    cylinderProduct,\r\n    cylinderFaceData,\r\n    cylinder,\r\n    cylinderMat,\r\n    cylinderMeasure\r\n  );\r\n  const cylinderDir = vec3.sub(vec3.create(), cylinderEnd, cylinderOrigo);\r\n  vec3.normalize(cylinderDir, cylinderDir);\r\n  const parallel =\r\n    vec3.equals(cylinderDir, seg.dir) ||\r\n    vec3.equals(cylinderDir, vec3.negate(vec3.create(), seg.dir));\r\n\r\n  const [distance, pointA, pointB] = closestProjectedPoints(\r\n    cylinderOrigo,\r\n    cylinderEnd,\r\n    seg.start,\r\n    seg.end\r\n  );\r\n  if (!parallel) {\r\n    const crossPoint = closestPointsToIntersection(\r\n      cylinderOrigo,\r\n      cylinderEnd,\r\n      seg.start,\r\n      seg.end\r\n    );\r\n    const { pos: crossPointA } = closestPointToLine(\r\n      crossPoint,\r\n      cylinderOrigo,\r\n      cylinderEnd\r\n    );\r\n    const { pos: crossPointB } = closestPointToLine(\r\n      crossPoint,\r\n      seg.start,\r\n      seg.end\r\n    );\r\n    if (distance > vec3.dist(crossPointA, crossPointB)) {\r\n      vec3.copy(pointA, crossPointA);\r\n      vec3.copy(pointB, crossPointB);\r\n    }\r\n  }\r\n  const diff = vec3.sub(vec3.create(), pointB, pointA);\r\n\r\n  const canUseCylinderSettings =\r\n    parallel && fullCircleCylinder(cylinderProduct, cylinderFaceData);\r\n\r\n  if (\r\n    (cylinderMeasure == \"closest\" || cylinderMeasure == \"furthest\") &&\r\n    canUseCylinderSettings\r\n  ) {\r\n    vec3.normalize(diff, diff);\r\n    vec3.scale(diff, diff, cylinder.radius * cylinderScale);\r\n    if (cylinderMeasure == \"closest\") {\r\n      vec3.add(pointA, pointA, diff);\r\n    } else {\r\n      vec3.sub(pointA, pointA, diff);\r\n    }\r\n    vec3.sub(diff, pointB, pointA);\r\n  }\r\n  return {\r\n    drawKind: \"measureResult\",\r\n    distance: vec3.length(diff),\r\n    distanceX: Math.abs(diff[0]),\r\n    distanceY: Math.abs(diff[1]),\r\n    distanceZ: Math.abs(diff[2]),\r\n    measureInfoA: { point: pointA, validMeasureSettings: canUseCylinderSettings },\r\n    measureInfoB: { point: pointB, validMeasureSettings: canUseCylinderSettings }\r\n  };\r\n}\r\n\r\nasync function getCurveToSurfaceMeasureValues(\r\n  curve: Curve3D,\r\n  productA: ProductData,\r\n  curveInstanceIdx: number,\r\n  productB: ProductData,\r\n  faceIdx: number,\r\n  faceInstanceIdx: number,\r\n  setting?: MeasureSettings\r\n) {\r\n  const faceData = productB.faces[faceIdx];\r\n  const surfaceData = productB.surfaces[faceData.surface];\r\n  const surface = MeasureTool.geometryFactory.getSurface(surfaceData, 1);\r\n  if (surface) {\r\n    const kindCombo = `${curve.kind}_${surface.kind}`;\r\n    switch (kindCombo) {\r\n      case \"line_plane\": {\r\n        const line = curve as Line3D;\r\n        const lineMat = matFromInstance(productA.instances[curveInstanceIdx]);\r\n        const plane = surface as Plane;\r\n        return lineToPlaneMeasure(\r\n          lineToSegment(line, lineMat),\r\n          plane,\r\n          productB,\r\n          faceData,\r\n          faceInstanceIdx\r\n        );\r\n      }\r\n      case \"lineStrip_plane\": {\r\n        const stripMat = matFromInstance(productA.instances[curveInstanceIdx]);\r\n        const strip = curve as LineStrip3D;\r\n        const segments = strip.toSegments(stripMat);\r\n        let minDist = 1000000;\r\n        let bestMeasureValues: undefined | DuoMeasurementValues = undefined;\r\n        const plane = surface as Plane;\r\n        for (const seg of segments) {\r\n          const measureValue = lineToPlaneMeasure(\r\n            seg,\r\n            plane,\r\n            productB,\r\n            faceData,\r\n            faceInstanceIdx\r\n          );\r\n          if (measureValue && measureValue.distance && measureValue.distance < minDist) {\r\n            bestMeasureValues = measureValue;\r\n            minDist = measureValue.distance;\r\n          }\r\n        }\r\n        return bestMeasureValues;\r\n      }\r\n      case \"line_cylinder\": {\r\n        const line = curve as Line3D;\r\n        const lineMat = matFromInstance(productA.instances[curveInstanceIdx]);\r\n\r\n        const cylinder = surfaceData as CylinderData;\r\n        const cylinderMat = matFromInstance(\r\n          productB.instances[faceInstanceIdx]\r\n        );\r\n        return await lineToCylinderMeasure(\r\n          lineToSegment(line, lineMat),\r\n          cylinder,\r\n          productB,\r\n          faceData,\r\n          cylinderMat,\r\n          unitToScale(productB.units),\r\n          setting ? setting.cylinderMeasure : \"center\"\r\n        );\r\n      }\r\n      case \"lineStrip_cylinder\": {\r\n        const stripMat = matFromInstance(productA.instances[curveInstanceIdx]);\r\n        const cylinderMat = matFromInstance(\r\n          productB.instances[faceInstanceIdx]\r\n        );\r\n        const strip = curve as LineStrip3D;\r\n        const segments = strip.toSegments(stripMat);\r\n        let minDist = 1000000;\r\n        let bestMeasureValues: undefined | DuoMeasurementValues = undefined;\r\n        for (const seg of segments) {\r\n          const measureValue = await lineToCylinderMeasure(\r\n            seg,\r\n            surfaceData as CylinderData,\r\n            productB,\r\n            faceData,\r\n            cylinderMat,\r\n            unitToScale(productB.units),\r\n            setting ? setting.cylinderMeasure : \"center\"\r\n          );\r\n          if (measureValue.distance && measureValue.distance < minDist) {\r\n            bestMeasureValues = measureValue;\r\n            minDist = measureValue.distance;\r\n          }\r\n        }\r\n        return bestMeasureValues;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function getEdgeToFaceMeasureValues(\r\n  productA: ProductData,\r\n  edgeIdx: number,\r\n  edgeInstanceIdx: number,\r\n  productB: ProductData,\r\n  faceIdx: number,\r\n  faceInstanceIdx: number,\r\n  setting?: MeasureSettings\r\n): Promise<DuoMeasurementValues | undefined> {\r\n  const edgeCurve = MeasureTool.geometryFactory.getCurve3DFromEdge(\r\n    productA,\r\n    edgeIdx\r\n  );\r\n  if (edgeCurve) {\r\n    return getCurveToSurfaceMeasureValues(\r\n      edgeCurve,\r\n      productA,\r\n      edgeInstanceIdx,\r\n      productB,\r\n      faceIdx,\r\n      faceInstanceIdx,\r\n      setting\r\n    );\r\n  }\r\n}\r\n\r\nexport async function getSegmentToFaceMeasureValues(\r\n  productA: ProductData,\r\n  segIdx: number,\r\n  segInstanceIdx: number,\r\n  productB: ProductData,\r\n  faceIdx: number,\r\n  faceInstanceIdx: number,\r\n  setting?: MeasureSettings\r\n): Promise<DuoMeasurementValues | undefined> {\r\n  const segCurve = MeasureTool.geometryFactory.getCurve3DFromSegment(\r\n    productA,\r\n    segIdx\r\n  );\r\n  if (segCurve) {\r\n    return getCurveToSurfaceMeasureValues(\r\n      segCurve,\r\n      productA,\r\n      segInstanceIdx,\r\n      productB,\r\n      faceIdx,\r\n      faceInstanceIdx,\r\n      setting\r\n    );\r\n  }\r\n}\r\n\r\nfunction planeToPlaneMeasure(\r\n  productA: ProductData,\r\n  faceDataA: FaceData,\r\n  instanceA: number,\r\n  planeA: Plane,\r\n  productB: ProductData,\r\n  faceDataB: FaceData,\r\n  instanceB: number,\r\n  planeB: Plane\r\n): DuoMeasurementValues | undefined {\r\n  const [pointPlaneA, normA] = decomposePlane(\r\n    productA,\r\n    faceDataA,\r\n    instanceA,\r\n    planeA,\r\n    true\r\n  );\r\n  const [pointPlaneB, normB] = decomposePlane(\r\n    productB,\r\n    faceDataB,\r\n    instanceB,\r\n    planeB\r\n  );\r\n\r\n  const dot = Math.abs(vec3.dot(normA, normB));\r\n  if (dot > 0.999) {\r\n    const d = vec3.dot(\r\n      normA,\r\n      vec3.subtract(vec3.create(), pointPlaneB, pointPlaneA)\r\n    );\r\n    const normalPointB = vec3.add(\r\n      vec3.create(),\r\n      pointPlaneA,\r\n      vec3.scale(vec3.create(), normA, d)\r\n    );\r\n    const normalPointA = vec3.copy(vec3.create(), pointPlaneA);\r\n\r\n    //swapAxis(pointA);\r\n    //swapAxis(pointB);\r\n    return {\r\n      drawKind: \"measureResult\",\r\n      distance: Math.abs(d),\r\n      distanceX: 0,\r\n      distanceY: 0,\r\n      distanceZ: 0,\r\n      normalPoints: [normalPointA, normalPointB],\r\n    };\r\n  }\r\n}\r\n\r\nasync function cylinderToCylinderMeasure(\r\n  cylinderA: CylinderData,\r\n  matA: mat4,\r\n  productA: ProductData,\r\n  faceDataA: FaceData,\r\n  scaleA: number,\r\n  cylinderB: CylinderData,\r\n  matB: mat4,\r\n  productB: ProductData,\r\n  faceDataB: FaceData,\r\n  scaleB: number,\r\n  cylinderMeasureA: CylinerMeasureType,\r\n  cylinderMeasureB: CylinerMeasureType\r\n): Promise<DuoMeasurementValues> {\r\n  const [cylinderOrigoA, cylinderEndA] = await cylinderCenterLine(\r\n    productA,\r\n    faceDataA,\r\n    cylinderA,\r\n    matA,\r\n    cylinderMeasureA\r\n  );\r\n  const dirA = vec3.sub(vec3.create(), cylinderEndA, cylinderOrigoA);\r\n  vec3.normalize(dirA, dirA);\r\n\r\n  const [cylinderOrigoB, cylinderEndB] = await cylinderCenterLine(\r\n    productB,\r\n    faceDataB,\r\n    cylinderB,\r\n    matB,\r\n    cylinderMeasureB\r\n  );\r\n  const dirB = vec3.sub(vec3.create(), cylinderEndB, cylinderOrigoB);\r\n  vec3.normalize(dirB, dirB);\r\n\r\n  const parallel =\r\n    vec3.equals(dirA, dirB) ||\r\n    vec3.equals(dirA, vec3.negate(vec3.create(), dirB));\r\n  let [distance, pointA, pointB] = closestProjectedPoints(\r\n    cylinderOrigoA,\r\n    cylinderEndA,\r\n    cylinderOrigoB,\r\n    cylinderEndB\r\n  );\r\n\r\n  const diff = vec3.sub(vec3.create(), pointA, pointB);\r\n\r\n  const canUseCylinderSettings =\r\n    parallel &&\r\n    fullCircleCylinder(productA, faceDataA) &&\r\n    fullCircleCylinder(productB, faceDataB);\r\n\r\n  let angle: { radians: number, angleDrawInfo: [vec3, vec3, vec3], additionalLine: [vec3, vec3] | undefined } | undefined = undefined;\r\n\r\n  if (!parallel) {\r\n    const intersectionPoint = closestPointsToIntersection(\r\n      cylinderOrigoA,\r\n      cylinderEndA,\r\n      cylinderOrigoB,\r\n      cylinderEndB\r\n    );\r\n    const { pos: crossPointA } = closestPointToLine(\r\n      intersectionPoint,\r\n      cylinderOrigoA,\r\n      cylinderEndA\r\n    );\r\n    const { pos: crossPointB } = closestPointToLine(\r\n      intersectionPoint,\r\n      cylinderOrigoB,\r\n      cylinderEndB\r\n    );\r\n    if (vec3.dist(pointA, pointB) > vec3.dist(crossPointA, crossPointB)) {\r\n      vec3.sub(diff, crossPointB, crossPointA);\r\n      pointA = vec3.clone(crossPointA);\r\n      pointB = vec3.clone(crossPointB);\r\n    }\r\n\r\n\r\n    if (vec3.length(diff) < 0.5) {\r\n      let negate = false;\r\n      //For correct angle calculation\r\n      if (vec3.dist(pointA, cylinderEndA) < vec3.dist(pointA, cylinderOrigoA)) {\r\n        vec3.negate(dirA, dirA);\r\n      }\r\n      if (vec3.dist(pointB, cylinderEndB) < vec3.dist(pointB, cylinderOrigoB)) {\r\n        negate = true;\r\n        vec3.negate(dirB, dirB);\r\n      }\r\n\r\n      let radians = vec3.angle(dirA, dirB);\r\n      if (radians > Math.PI) {\r\n        radians = Math.PI * 2 - radians;\r\n      }\r\n\r\n      let addAdditionalLine = false;\r\n      if (radians > Math.PI / 2) {\r\n        radians = Math.PI - radians;\r\n        if (negate) {\r\n          vec3.negate(dirB, dirB);\r\n        } else {\r\n          vec3.negate(dirA, dirA);\r\n        }\r\n        addAdditionalLine = true;\r\n      }\r\n\r\n      const center = vec3.add(vec3.create(), pointA, pointB);\r\n      vec3.scale(center, center, 0.5);\r\n      const anglePa = vec3.add(vec3.create(), center, dirA);\r\n      const anglePb = vec3.add(vec3.create(), center, dirB);\r\n      angle = {\r\n        radians, angleDrawInfo: [center, anglePa, anglePb],\r\n        additionalLine: addAdditionalLine ? [vec3.clone(center), vec3.clone(anglePa)] : undefined\r\n      }\r\n    }\r\n  } else {\r\n    vec3.normalize(diff, diff);\r\n    const radiusDirA = vec3.scale(\r\n      vec3.create(),\r\n      diff,\r\n      cylinderA.radius * scaleA * -1\r\n    );\r\n    const radiusDirB = vec3.scale(\r\n      vec3.create(),\r\n      diff,\r\n      cylinderB.radius * scaleB\r\n    );\r\n    if (cylinderMeasureA == \"closest\") {\r\n      vec3.add(pointA, pointA, radiusDirA);\r\n    } else if (cylinderMeasureA == \"furthest\") {\r\n      vec3.sub(pointA, pointA, radiusDirA);\r\n    }\r\n    if (cylinderMeasureB == \"closest\") {\r\n      vec3.add(pointB, pointB, radiusDirB);\r\n    } else if (cylinderMeasureB == \"furthest\") {\r\n      vec3.sub(pointB, pointB, radiusDirB);\r\n    }\r\n    vec3.sub(diff, pointB, pointA);\r\n  }\r\n\r\n  return {\r\n    drawKind: \"measureResult\",\r\n    distance: vec3.length(diff),\r\n    distanceX: Math.abs(diff[0]),\r\n    distanceY: Math.abs(diff[1]),\r\n    distanceZ: Math.abs(diff[2]),\r\n    measureInfoA: { point: pointA, validMeasureSettings: canUseCylinderSettings },\r\n    measureInfoB: { point: pointB, validMeasureSettings: canUseCylinderSettings },\r\n    angle,\r\n  };\r\n}\r\n\r\nfunction cylinderToPlaneMeasure(\r\n  cylinder: CylinderData,\r\n  cylinderInstanceMat: mat4,\r\n  plane: Plane,\r\n  planeProduct: ProductData,\r\n  planeFace: FaceData,\r\n  planeInstance: number,\r\n  scale: number,\r\n  canUseCylinderSettings: boolean,\r\n  cylinderMeasure: CylinerMeasureType\r\n): DuoMeasurementValues | undefined {\r\n  const cylinderNormalMat = mat3.normalFromMat4(\r\n    mat3.create(),\r\n    cylinderInstanceMat\r\n  );\r\n  const cylinderMat = mat4.fromValues(\r\n    ...(cylinder.transform as Parameters<typeof mat4.fromValues>)\r\n  );\r\n  const cylinderPoint = mat4.getTranslation(vec3.create(), cylinderMat);\r\n  vec3.transformMat4(cylinderPoint, cylinderPoint, cylinderInstanceMat);\r\n  const cylinderDir = vec3.fromValues(\r\n    cylinderMat[8],\r\n    cylinderMat[9],\r\n    cylinderMat[10]\r\n  );\r\n  vec3.transformMat3(cylinderDir, cylinderDir, cylinderNormalMat);\r\n  vec3.normalize(cylinderDir, cylinderDir);\r\n\r\n  const [planePoint, planeNorm] = decomposePlane(\r\n    planeProduct,\r\n    planeFace,\r\n    planeInstance,\r\n    plane\r\n  );\r\n  const dot = vec3.dot(cylinderDir, planeNorm);\r\n  const parallel = dot < 0.000001 && dot > -0.0001;\r\n  if (parallel) {\r\n    const d1 = vec3.dot(planeNorm, planePoint);\r\n    const d2 = vec3.dot(planeNorm, cylinderPoint);\r\n    let d = d2 - d1;\r\n    if (cylinderMeasure == \"closest\") {\r\n      d = d > 0 ? d - cylinder.radius * scale : d + cylinder.radius * scale;\r\n    } else if (cylinderMeasure == \"furthest\") {\r\n      d = d > 0 ? d + cylinder.radius * scale : d - cylinder.radius * scale;\r\n    }\r\n    const cylinerPlanePoint = vec3.add(\r\n      vec3.create(),\r\n      planePoint,\r\n      vec3.scale(vec3.create(), planeNorm, d)\r\n    );\r\n\r\n    return {\r\n      drawKind: \"measureResult\",\r\n      normalDistance: Math.abs(d),\r\n      distanceX: 0,\r\n      distanceY: 0,\r\n      distanceZ: 0,\r\n      normalPoints: [planePoint, cylinerPlanePoint],\r\n      measureInfoA: { validMeasureSettings: canUseCylinderSettings },\r\n      measureInfoB: { validMeasureSettings: canUseCylinderSettings }\r\n    };\r\n  }\r\n}\r\n\r\nexport async function getSegmentToSegmentMeasureValues(\r\n  productA: ProductData,\r\n  segIdxA: number,\r\n  instanceIdxA: number,\r\n  productB: ProductData,\r\n  segIdxB: number,\r\n  instanceIdxB: number\r\n): Promise<DuoMeasurementValues | undefined> {\r\n  let curveA = MeasureTool.geometryFactory.getCurve3DFromSegment(productA, segIdxA);\r\n  let curveB = MeasureTool.geometryFactory.getCurve3DFromSegment(productB, segIdxB);\r\n  if (curveA && curveB) {\r\n    return getCurveToCurveMeasureValues(\r\n      productA,\r\n      curveA,\r\n      instanceIdxA,\r\n      productB,\r\n      curveB,\r\n      instanceIdxB\r\n    );\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport async function getSegmentToEdgeMeasureValues(\r\n  productA: ProductData,\r\n  segIdx: number,\r\n  instanceIdxA: number,\r\n  productB: ProductData,\r\n  edgeIdx: number,\r\n  instanceIdxB: number\r\n): Promise<DuoMeasurementValues | undefined> {\r\n  let curveA = MeasureTool.geometryFactory.getCurve3DFromSegment(productA, segIdx);\r\n  let curveB = MeasureTool.geometryFactory.getCurve3DFromEdge(productB, edgeIdx);\r\n  if (curveA && curveB) {\r\n    return getCurveToCurveMeasureValues(\r\n      productA,\r\n      curveA,\r\n      instanceIdxA,\r\n      productB,\r\n      curveB,\r\n      instanceIdxB\r\n    );\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport async function getFaceToFaceMeasureValues(\r\n  productA: ProductData,\r\n  faceIdxA: number,\r\n  instanceIdxA: number,\r\n  productB: ProductData,\r\n  faceIdxB: number,\r\n  instanceIdxB: number,\r\n  settingA?: MeasureSettings,\r\n  settingB?: MeasureSettings\r\n): Promise<DuoMeasurementValues | undefined> {\r\n  const faceDataA = productA.faces[faceIdxA];\r\n  const surfaceDataA = productA.surfaces[faceDataA.surface];\r\n  let surfaceA = {\r\n    surf: MeasureTool.geometryFactory.getSurface(surfaceDataA, 1),\r\n    instanceIdx: instanceIdxA,\r\n    faceData: faceDataA,\r\n    data: surfaceDataA,\r\n    product: productA,\r\n    setting: settingA,\r\n  };\r\n\r\n  const faceDataB = productB.faces[faceIdxB];\r\n  const surfaceDataB = productB.surfaces[faceDataB.surface];\r\n  let surfaceB = {\r\n    surf: MeasureTool.geometryFactory.getSurface(surfaceDataB, 1),\r\n    instanceIdx: instanceIdxB,\r\n    faceData: faceDataB,\r\n    data: surfaceDataB,\r\n    product: productB,\r\n    setting: settingB,\r\n  };\r\n\r\n  if (surfaceA.surf && surfaceB.surf) {\r\n    const entities = [surfaceA, surfaceB];\r\n    entities.sort((a, b) => a.surf!.kind.localeCompare(b.surf!.kind));\r\n    [surfaceA, surfaceB] = entities;\r\n    const kindCombo = `${surfaceA.surf!.kind}_${surfaceB.surf!.kind}`;\r\n    switch (kindCombo) {\r\n      case \"plane_plane\":\r\n        return planeToPlaneMeasure(\r\n          surfaceA.product,\r\n          surfaceA.faceData,\r\n          surfaceA.instanceIdx,\r\n          surfaceA.surf as Plane,\r\n          surfaceB.product,\r\n          surfaceB.faceData,\r\n          surfaceB.instanceIdx,\r\n          surfaceB.surf as Plane\r\n        );\r\n\r\n      case \"cylinder_cylinder\": {\r\n        const cylinderA = surfaceA.data as CylinderData;\r\n        const matA = matFromInstance(\r\n          surfaceA.product.instances[surfaceA.instanceIdx]\r\n        );\r\n\r\n        const cylinderB = surfaceB.data as CylinderData;\r\n        const matB = matFromInstance(\r\n          surfaceB.product.instances[surfaceB.instanceIdx]\r\n        );\r\n\r\n        return cylinderToCylinderMeasure(\r\n          cylinderA,\r\n          matA,\r\n          surfaceA.product,\r\n          surfaceA.faceData,\r\n          unitToScale(surfaceA.product.units),\r\n          cylinderB,\r\n          matB,\r\n          surfaceB.product,\r\n          surfaceB.faceData,\r\n          unitToScale(surfaceB.product.units),\r\n          surfaceA.setting ? surfaceA.setting.cylinderMeasure : \"center\",\r\n          surfaceB.setting ? surfaceB.setting.cylinderMeasure : \"center\"\r\n        );\r\n      }\r\n\r\n      case \"cylinder_plane\": {\r\n        const cylinder = surfaceA.data as CylinderData;\r\n        const cylinderInstanceMat = matFromInstance(\r\n          surfaceA.product.instances[surfaceA.instanceIdx]\r\n        );\r\n        const canUseCylinderSettings = fullCircleCylinder(\r\n          surfaceA.product,\r\n          surfaceA.faceData\r\n        );\r\n\r\n        const plane = surfaceB.surf as Plane;\r\n        return cylinderToPlaneMeasure(\r\n          cylinder,\r\n          cylinderInstanceMat,\r\n          plane,\r\n          surfaceB.product,\r\n          surfaceB.faceData,\r\n          surfaceB.instanceIdx,\r\n          unitToScale(surfaceA.product.units),\r\n          canUseCylinderSettings,\r\n          surfaceA.setting && canUseCylinderSettings\r\n            ? surfaceA.setting.cylinderMeasure\r\n            : \"center\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function evalCurve(\r\n  product: ProductData,\r\n  pathIdx: number,\r\n  instanceIdx: number,\r\n  paramter: number,\r\n  pathKind: \"edge\" | \"curveSegment\"\r\n): Promise<[ReadonlyVec3, ReadonlyVec3] | undefined> {\r\n  const curve =\r\n    pathKind == \"edge\"\r\n      ? MeasureTool.geometryFactory.getCurve3DFromEdge(product, pathIdx)\r\n      : MeasureTool.geometryFactory.getCurve3DFromSegment(product, pathIdx);\r\n  if (curve) {\r\n    paramter /= unitToScale(product.units);\r\n    const pos = vec3.create();\r\n    const dir = vec3.create();\r\n    curve.eval(paramter, pos, dir);\r\n    const mat = matFromInstance(product.instances[instanceIdx]);\r\n    const normalMat = mat3.normalFromMat4(mat3.create(), mat);\r\n    vec3.transformMat3(dir, dir, normalMat);\r\n    vec3.transformMat4(pos, pos, mat);\r\n    vec3.normalize(dir, dir);\r\n    vec3.negate(dir, dir);\r\n    return [pos, dir];\r\n  }\r\n}\r\n", "/*\r\nprecomputation:\r\nfor each body\r\n    compute vertex positions, normals, tangents etc - as needed\r\n    (compute triangle normals)\r\n    create edge topology map\r\n\r\n\r\nbuild list of forward facing polygons (from faces)\r\nfor each (other) poly\r\n  intersect with subject\r\n  if intersect is not empty and intersection lies in front of subject\r\n     subtract intersection from subject poly\r\n\r\n\r\nper camera angle:\r\nproject 3D points onto 2D image plane using fixed point integers for robust intersection tests (but retain z component for depth tests)\r\ndetermine triangle facings/windings\r\nfor each edge\r\n    if outline edge (has both a forward and backward facing triangle attached)\r\n        store edge in list of outline edges (possibly using some sort of accelleration structure)\r\nfor each triangle\r\n    if facing forward\r\n        for each triangle edge\r\n            does any edge edge intersect outline edges that lies in front of triangle?\r\n                yes: split edges into visible and hidden portions\r\n                    also sever topological connection to create triangle islands\r\n                    store visibility info in each triangle half\r\n\r\n\r\n\r\nhow about we just found the outline polygons for each face?\r\n  only consider forward facing triangles\r\n  then we slice it by all other outline polygons and test visibility of each sub poly\r\n\r\n\r\njs: https://github.com/mfogel/polygon-clipping (uses floats and gets rounding problems, but might do for a quick prototype)\r\nc++: https://github.com/Geri-Borbas/Clipper (uses large ints, but possibly a little out of date and not sure we can extract all subregions)\r\nc++: https://www.boost.org/doc/libs/1_72_0/libs/polygon/doc/gtl_polygon_set_concept.htm (uses ints or snapped floats. made by intel, but old'ish. flexible interface with potentially useful functions for LOD etc.)\r\n\r\n*/\r\n\r\nimport type { ReadonlyMat4, ReadonlyVec2, ReadonlyVec3 } from \"gl-matrix\";\r\nimport { mat3, glMatrix, vec2, vec3 } from \"gl-matrix\";\r\nimport type { Face } from \"./face\";\r\nimport type { Triangulation } from \"./brep\";\r\nimport type { Surface } from \"./surfaces\";\r\nimport type { Edge } from \"./edge\";\r\nimport type { Curve3D } from \"./curves\";\r\n\r\nglMatrix.setMatrixArrayType(Array);\r\n\r\nconst epsilon = 1e-4;\r\n\r\ninterface Topology {\r\n    readonly triangles: readonly Triangle[];\r\n    readonly vertices: readonly SurfaceVertex[];\r\n    readonly edges: readonly EdgeInfo[];\r\n}\r\n\r\ntype Index = number;\r\ntype IndexPair = readonly [Index, Index];\r\ntype IndexTriplet = readonly [Index, Index, Index];\r\ntype EdgeKey = bigint;\r\n\r\ntype SurfaceVertex = {\r\n    pos: ReadonlyVec3;\r\n    uv: ReadonlyVec2; // parametric uv coord\r\n    normal: ReadonlyVec3;\r\n};\r\n\r\ntype EdgeVertex = {\r\n    pos: ReadonlyVec3;\r\n    t: number;\r\n    tangent: ReadonlyVec3;\r\n};\r\n\r\ninterface EdgeInfo {\r\n    readonly vertices: IndexPair; // pair of vertex indices\r\n    readonly triangles: readonly [Index] | [Index, Index]; // pair of triangle indices (if last one is 0, then the edge is non-manifold)\r\n}\r\n\r\ninterface Triangle {\r\n    readonly vertices: IndexTriplet;\r\n    readonly edges: IndexTriplet; // negative indices indicates that the edge direction is reversed, i.e. this is the second triangle that refer to it.\r\n    readonly normal: ReadonlyVec3;\r\n}\r\n\r\ninterface Strip {\r\n    startEdge: number;\r\n    endEdge: number; // parametric uv coord\r\n    strip: ReadonlyVec3[];\r\n}\r\n\r\nfunction constructEdgeKey(a: number, b: number): EdgeKey {\r\n    if (a > b) {\r\n        [b, a] = [a, b];\r\n    }\r\n    return BigInt(a) | (BigInt(b) << 32n);\r\n}\r\n\r\nfunction deconstructEdgeKey(edgeKey: EdgeKey): readonly [number, number] {\r\n    const a = Number(BigInt.asUintN(32, edgeKey));\r\n    const b = Number(BigInt.asUintN(32, edgeKey >> 32n));\r\n    return [a, b] as const;\r\n}\r\n\r\nfunction evalTriangulation(surface: Surface, triangulation: Triangulation, productMatrix?: ReadonlyMat4) {\r\n    const vertices: SurfaceVertex[] = [];\r\n    const productNormalMatrix = productMatrix ? mat3.normalFromMat4(mat3.create(), productMatrix) : undefined;\r\n    for (let i = 0; i < triangulation.vertices.length; i += 2) {\r\n        // const uv = triangulation.vertices.slice(i, i + 2) as unknown as readonly [number, number];\r\n        const uv = vec2.fromValues(triangulation.vertices[i], triangulation.vertices[i + 1]);\r\n        const pos = vec3.create();\r\n        const normal = vec3.create();\r\n        surface.evalPosition(pos, uv);\r\n        surface.evalNormal(normal, uv);\r\n        if (productMatrix && productNormalMatrix) {\r\n            //const rotMat = mat3.fromMat4(mat3.create(), productMatrix);\r\n            vec3.transformMat4(pos, pos, productMatrix);\r\n            //vec3.transformMat3(pos, pos, rotMat);\r\n            vec3.transformMat3(normal, normal, productNormalMatrix);\r\n            vec3.normalize(normal, normal);\r\n        }\r\n        vertices.push({ pos, uv, normal });\r\n    }\r\n    return vertices;\r\n}\r\n\r\nfunction evalTesselation(curve: Curve3D, transform: ReadonlyMat4) {\r\n    const vertices: EdgeVertex[] = [];\r\n    const normalMat = mat3.normalFromMat4(mat3.create(), transform);\r\n    for (const t of curve.tesselationParameters) {\r\n        const pos = vec3.create();\r\n        const tangent = vec3.create();\r\n        curve.eval(t, pos, tangent);\r\n\r\n        vec3.transformMat4(pos, pos, transform);\r\n        vec3.transformMat3(tangent, tangent, normalMat);\r\n        vec3.normalize(tangent, tangent);\r\n\r\n        vertices.push({ pos, t, tangent });\r\n    }\r\n    return vertices;\r\n}\r\n\r\nfunction createTopology(face: Face): Topology {\r\n    const edges: EdgeInfo[] = [];\r\n    const edgeMap = new Map<bigint, number>();\r\n    const triangles: Triangle[] = [];\r\n    const { surface, triangulation } = face;\r\n\r\n    const vertices = evalTriangulation(surface, triangulation, face.geometryTransformation);\r\n\r\n    const vertexRemap = vertices.map((_, i) => i);\r\n    for (const seam of face.seams) {\r\n        for (const [a, b] of seam.vertexIndexPairs) {\r\n            vertexRemap[b] = a;\r\n            console.assert(vec3.distance(vertices[a].pos, vertices[b].pos) < 1e-4);\r\n        }\r\n    }\r\n\r\n    const { indices } = triangulation;\r\n    for (let i = 0; i < indices.length; i += 3) {\r\n        const triangleIndex = triangles.length;\r\n        const vi = indices.slice(i, i + 3).map((vi) => vertexRemap[vi]);\r\n        if (face.sense == -1) {\r\n            vi.reverse();\r\n        }\r\n        const [v0, v1, v2] = vi;\r\n\r\n        const ab = vec3.subtract(vec3.create(), vertices[v1].pos, vertices[v0].pos);\r\n        const ac = vec3.subtract(vec3.create(), vertices[v2].pos, vertices[v0].pos);\r\n\r\n        const normal = vec3.create();\r\n        vec3.cross(normal, ab, ac);\r\n        const l2 = vec3.dot(normal, normal);\r\n        if (l2 == 0) continue; // skip degenerate triangles\r\n        vec3.normalize(normal, normal);\r\n\r\n        console.assert(vec3.dot(normal, vertices[v0].normal) > 0);\r\n        console.assert(vec3.dot(normal, vertices[v1].normal) > 0);\r\n        console.assert(vec3.dot(normal, vertices[v2].normal) > 0);\r\n\r\n        function addEdge(v0: number, v1: number) {\r\n            const key = constructEdgeKey(v0, v1);\r\n            let edgeIndex = edgeMap.get(key);\r\n            if (undefined === edgeIndex) {\r\n                edgeIndex = edges.length;\r\n                edgeMap.set(key, edgeIndex);\r\n                edges.push({\r\n                    vertices: [v0, v1],\r\n                    triangles: [triangleIndex],\r\n                });\r\n            } else {\r\n                const { triangles } = edges[edgeIndex];\r\n                console.assert(triangles.length == 1);\r\n                (<[Index]>edges[edgeIndex].triangles).push(triangleIndex);\r\n                edgeIndex = edgeIndex;\r\n            }\r\n            return edgeIndex;\r\n        }\r\n        const e0 = addEdge(v0, v1);\r\n        const e1 = addEdge(v1, v2);\r\n        const e2 = addEdge(v2, v0);\r\n\r\n        const p0 = vertices[v0].pos;\r\n        const p1 = vertices[v1].pos;\r\n        const p2 = vertices[v2].pos;\r\n\r\n        const triangle: Triangle = {\r\n            vertices: [v0, v1, v2] as const,\r\n            edges: [e0, e1, e2] as const,\r\n            normal,\r\n        } as const;\r\n        triangles.push(triangle);\r\n    }\r\n\r\n    return {\r\n        triangles,\r\n        vertices,\r\n        edges,\r\n    };\r\n}\r\n\r\nfunction triangleWinding(indices: readonly [number, number, number], vertices: readonly ReadonlyVec3[]) {\r\n    const [ia, ib, ic] = indices;\r\n    const [ax, ay] = vertices[ia];\r\n    const [bx, by] = vertices[ib];\r\n    const [cx, cy] = vertices[ic];\r\n    const x1 = bx - ax;\r\n    const y1 = by - ay;\r\n    const x2 = cx - ax;\r\n    const y2 = cy - ay;\r\n    const cp = x1 * y2 - y1 * x2;\r\n    return cp > 0 ? 1 : -1;\r\n}\r\n\r\nfunction triangleVertexFacing(indices: readonly [number, number, number], normals: readonly ReadonlyVec3[]) {\r\n    const [ia, ib, ic] = indices;\r\n    const az = normals[ia][2];\r\n    const bz = normals[ib][2];\r\n    const cz = normals[ic][2];\r\n    if (az > epsilon && bz > epsilon && cz > epsilon) {\r\n        return 1;\r\n    } else if (az < epsilon && bz < epsilon && cz < epsilon) {\r\n        return -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction edgeVertexStraddling(indices: readonly [number, number], normals: readonly ReadonlyVec3[]) {\r\n    const [ia, ib] = indices;\r\n    const az = normals[ia][2];\r\n    const bz = normals[ib][2];\r\n    if (az > epsilon && bz > epsilon) {\r\n        return 0;\r\n    } else if (az < epsilon && bz < epsilon) {\r\n        return 0;\r\n    }\r\n    return Math.sign(az - bz);\r\n}\r\n\r\nfunction edgeVertexFacing(indices: readonly [number, number], normals: readonly ReadonlyVec3[]) {\r\n    const [ia, ib] = indices;\r\n    const az = normals[ia][2];\r\n    const bz = normals[ib][2];\r\n    if (az > epsilon && bz > epsilon) {\r\n        return 1;\r\n    } else if (az < epsilon && bz < epsilon) {\r\n        return -1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction edgeStraddleParameter(indices: readonly [number, number], normals: readonly ReadonlyVec3[]) {\r\n    const [ia, ib] = indices;\r\n    const az = normals[ia][2];\r\n    const bz = normals[ib][2];\r\n    let t = (az - epsilon) / (az - bz);\r\n    return t < 0 ? 0 : t > 1 ? 1 : t;\r\n}\r\n\r\nexport type PathInfo = { path: string; centerDepth: number; originalIndex: number; instanceIndex: number; kind: \"edge\" | \"face\" };\r\n\r\nexport function getEdgeStrip(edge: Edge, sense: number): ReadonlyVec3[] {\r\n    const v = evalTesselation(edge.curve, edge.geometryTransformation).map((v) => v.pos);\r\n    return sense > 0 ? v : v.reverse();\r\n}\r\n\r\nexport function getBrepEdges(edges: readonly (Edge | undefined)[], worldViewMatrix: ReadonlyMat4): PathInfo[] {\r\n    const paths: PathInfo[] = [];\r\n    for (let i = 0; i < edges.length; ++i) {\r\n        const edge = edges[i];\r\n        if (!edge) {\r\n            continue;\r\n        }\r\n        const vertices = evalTesselation(edge.curve, edge.geometryTransformation);\r\n        const verticiesVS = vertices.map((v) => vec3.transformMat4(vec3.create(), v.pos, worldViewMatrix));\r\n        const pathParts: string[] = [];\r\n        let [x, y] = verticiesVS[0];\r\n        pathParts.push(`M ${x} ${y}`);\r\n        for (let i = 1; i < vertices.length; ++i) {\r\n            [x, y] = verticiesVS[i];\r\n            pathParts.push(`L ${x} ${y}`);\r\n        }\r\n        const path = pathParts.join(\" \");\r\n        //TODO: Check if closed\r\n\r\n        paths.push({ path, centerDepth: 0, originalIndex: i, instanceIndex: edge.instanceIndex, kind: \"edge\" });\r\n    }\r\n    return paths;\r\n}\r\n\r\nexport function getBrepFaces(faces: readonly Face[], worldViewMatrix: ReadonlyMat4): PathInfo[] {\r\n    // const towardsCamera = camera.backward;\r\n\r\n    const paths: PathInfo[] = [];\r\n\r\n    for (let i = 0; i < faces.length; ++i) {\r\n        const face = faces[i];\r\n        const { loops } = getProjectedLoops(face, worldViewMatrix);\r\n\r\n        // const loops = triangles.filter((t, i) => triangleFacings[i] > 0).map(t => t.vertices);\r\n\r\n        // create rendercontext path from loops\r\n        // const path = new Path2D();\r\n        let minDepth = Number.MAX_VALUE;\r\n        let maxDepth = Number.MIN_VALUE;\r\n        const pathParts: string[] = [];\r\n\r\n        function polygonWinding(loop: readonly ReadonlyVec3[]) {\r\n            let totalArea = 0;\r\n            for (let i = 0; i < loop.length; ++i) {\r\n                const a = loop[i];\r\n                const b = loop[(i + 1) % loop.length];\r\n                const cp = (b[0] - a[0]) * (b[1] + a[1]);\r\n                //const cp = a[0] * b[1] - a[1] * b[0];\r\n                totalArea += cp;\r\n            }\r\n            console.assert(totalArea != 0);\r\n            return Math.sign(totalArea) as 1 | -1;\r\n        }\r\n\r\n        function endPath() {\r\n            const path = pathParts.join(\" \");\r\n            const centerDepth = (minDepth + maxDepth) / 2;\r\n            paths.push({ path, centerDepth, originalIndex: i, instanceIndex: face.instanceIndex, kind: \"face\" });\r\n        }\r\n\r\n        const windings: number[] = [];\r\n\r\n        for (const loopWS of loops) {\r\n            const loopVS = loopWS.map((v) => vec3.transformMat4(vec3.create(), v, worldViewMatrix));\r\n            const winding = -polygonWinding(loopVS);\r\n            windings.push(winding);\r\n            //todo winding > 0 more than one split loops\r\n            for (const v of loopVS) {\r\n                const depth = v[2];\r\n                if (minDepth > depth) {\r\n                    minDepth = depth;\r\n                }\r\n                if (maxDepth < depth) {\r\n                    maxDepth = depth;\r\n                }\r\n            }\r\n            const [x, y] = loopVS[loopVS.length - 1];\r\n            pathParts.push(`M ${x} ${y}`);\r\n            for (const v of loopVS) {\r\n                const [x, y] = v;\r\n                pathParts.push(`L ${x} ${y}`);\r\n            }\r\n        }\r\n\r\n        endPath();\r\n    }\r\n\r\n    return paths;\r\n}\r\n\r\nfunction getContourEdges(topology: Topology, normalsVS: readonly ReadonlyVec3[]) {\r\n    const { edges, triangles, vertices } = topology;\r\n\r\n    const edgeStraddle = edges.map((e) => edgeVertexStraddling(e.vertices, normalsVS));\r\n    const straddlingTriangleIndices = triangles.map((t, i) => i).filter((i) => triangleVertexFacing(triangles[i].vertices, normalsVS) == 0);\r\n    const remainingTriangles = new Set<number>(straddlingTriangleIndices);\r\n\r\n    const straddlePoints = edges.map((e, i) => {\r\n        if (edgeStraddle[i] == 0) {\r\n            return undefined;\r\n        }\r\n        const t = edgeStraddleParameter(e.vertices, normalsVS);\r\n        const va = vertices[e.vertices[0]];\r\n        const vb = vertices[e.vertices[1]];\r\n        return vec3.lerp(vec3.create(), va.pos, vb.pos, t) as ReadonlyVec3;\r\n    });\r\n\r\n    function traverseContourEdges(edge: number) {\r\n        const edgeStrip: number[] = [];\r\n        edgeStrip.push(edge);\r\n        let currentEdge = edge;\r\n        let run = true;\r\n        while (run) {\r\n            run = false;\r\n            for (const triangleIndex of edges[currentEdge].triangles) {\r\n                if (remainingTriangles.delete(triangleIndex)) {\r\n                    const triangle = triangles[triangleIndex];\r\n                    const straddleEdges = triangle.edges.filter((i) => edgeStraddle[i] != 0 && i != currentEdge);\r\n                    console.assert(straddleEdges.length == 1);\r\n                    currentEdge = straddleEdges[0];\r\n                    edgeStrip.push(currentEdge);\r\n                    run = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return edgeStrip;\r\n    }\r\n\r\n    function isContourLoop(edgeStart: number, edgeEnd: number) {\r\n        const start = edges[edgeStart].triangles;\r\n        const end = edges[edgeEnd].triangles;\r\n        return start.some((i) => end.some((j) => j == i));\r\n    }\r\n\r\n    function createStripFromStraddleEdges(loop: number[]) {\r\n        const strip: ReadonlyVec3[] = [];\r\n        for (const index of loop) {\r\n            strip.push(straddlePoints[index]!);\r\n        }\r\n        return strip;\r\n    }\r\n\r\n    const strips: number[][] = [];\r\n    const loops: ReadonlyVec3[][] = [];\r\n\r\n    while (remainingTriangles.size > 0) {\r\n        const keys = [...remainingTriangles.keys()];\r\n        //const triangleIndex = keys[Math.floor(Math.random() * keys.length)];\r\n        const triangleIndex = remainingTriangles.keys().next().value as number;\r\n        remainingTriangles.delete(triangleIndex);\r\n\r\n        const triangle = triangles[triangleIndex];\r\n        const triangleEdges = triangle.edges;\r\n        const straddleEdges = triangleEdges.filter((i) => edgeStraddle[i] != 0);\r\n        straddleEdges.sort((a, b) => edgeStraddle[a] - edgeStraddle[b]);\r\n\r\n        const leftStrip = traverseContourEdges(straddleEdges[0]);\r\n        const rightStrip = traverseContourEdges(straddleEdges[1]);\r\n        const combinedStrip = [...rightStrip.reverse(), ...leftStrip];\r\n        if (isContourLoop(combinedStrip[0], combinedStrip[combinedStrip.length - 1])) {\r\n            loops.push(createStripFromStraddleEdges(combinedStrip));\r\n        } else {\r\n            strips.push(combinedStrip);\r\n        }\r\n    }\r\n\r\n    const contourStrips = strips.map((s) => {\r\n        return { startEdge: s[0], endEdge: s[s.length - 1], strip: s.map((i) => straddlePoints[i]!) };\r\n    });\r\n\r\n    return { loops, contourStrips };\r\n}\r\n\r\nfunction getTrimEdges(topology: Topology, normalsVS: readonly ReadonlyVec3[], facing: number = 1) {\r\n    const { edges } = topology;\r\n    const edgeFacing = edges.map((e) => edgeVertexFacing(e.vertices, normalsVS));\r\n\r\n    const edgeIndices = edges.map((e, i) => i);\r\n    const trimEdgeIndices = edgeIndices.filter((i) => edges[i].triangles.length === 1 && edgeFacing[i] * facing >= 0);\r\n    return trimEdgeIndices;\r\n}\r\n\r\nfunction getTrimStrips(topology: Topology, normalsVS: readonly ReadonlyVec3[]) {\r\n    const { edges, vertices } = topology;\r\n\r\n    const trimEdgeIndices = getTrimEdges(topology, normalsVS);\r\n\r\n    const trimEdgesMap = new Map<number, [number, number]>();\r\n\r\n    const edgeReferences = new Array<number>(edges.length).fill(0);\r\n    for (const trimEdgeIndex of trimEdgeIndices) {\r\n        const trimEdge = edges[trimEdgeIndex];\r\n        let [va, vb] = trimEdge.vertices;\r\n        console.assert(!trimEdgesMap.has(va));\r\n        ++edgeReferences[va];\r\n        --edgeReferences[vb];\r\n        trimEdgesMap.set(va, [vb, trimEdgeIndex]);\r\n    }\r\n\r\n    const beginEdges = edgeReferences.map((count, index) => ({ index, count })).filter((e) => e.count == 1);\r\n\r\n    const trimLoops: ReadonlyVec3[][] = [];\r\n    const trimStrips: Strip[] = [];\r\n    function traverseEdges(startKey: number) {\r\n        let strip: ReadonlyVec3[] = [];\r\n        let head = startKey;\r\n        const value = trimEdgesMap.get(head)!;\r\n        const startEdge = value[1];\r\n        let endEdge = value[1];\r\n        do {\r\n            strip.push(vertices[head].pos);\r\n            const tail = head;\r\n            const value = trimEdgesMap.get(tail) as [number, number];\r\n            trimEdgesMap.delete(tail);\r\n            if (value === undefined) {\r\n                break;\r\n            }\r\n            head = value[0];\r\n            endEdge = value[1];\r\n            console.assert(strip.length < 100000); // infinite loop?\r\n        } while (head != startKey);\r\n        if (head == startKey) {\r\n            endEdge = startEdge;\r\n            return { kind: \"loop\", strip } as const;\r\n        } else {\r\n            strip = strip.slice(1, strip.length - 1);\r\n        }\r\n        return { kind: \"strip\", startEdge, endEdge, strip } as const;\r\n    }\r\n\r\n    for (const beginEdge of beginEdges) {\r\n        const strip = traverseEdges(beginEdge.index);\r\n        if (strip.kind === \"strip\") {\r\n            trimStrips.push(strip);\r\n        } else {\r\n            console.assert(false);\r\n        }\r\n    }\r\n\r\n    while (trimEdgesMap.size > 0) {\r\n        const key = trimEdgesMap.keys().next().value as number;\r\n        const { kind, strip } = traverseEdges(key);\r\n        trimLoops.push(strip);\r\n        console.assert(kind == \"loop\");\r\n    }\r\n    return { trimLoops, trimStrips };\r\n}\r\n\r\nfunction* loopsFromStrips(combinedStrips: Strip[]) {\r\n    while (combinedStrips.length > 0) {\r\n        const loop: ReadonlyVec3[] = [];\r\n        let current = combinedStrips.pop()!;\r\n        const loopStartEdge = current.startEdge;\r\n        loop.push(...current.strip);\r\n        for (; ;) {\r\n            let foundIndex: number | undefined = undefined;\r\n            for (let i = 0; i < combinedStrips.length; ++i) {\r\n                const { startEdge } = combinedStrips[i];\r\n                if (startEdge == current.endEdge) {\r\n                    foundIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (foundIndex !== undefined) {\r\n                current = combinedStrips[foundIndex];\r\n                loop.push(...current.strip);\r\n                combinedStrips.splice(foundIndex, 1);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        if (loopStartEdge === current.endEdge) {\r\n            yield loop;\r\n        } else {\r\n            console.error(\"Unable to join to loop\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction projectFace(topology: Topology, worldViewMatrix: ReadonlyMat4) {\r\n    const { vertices } = topology;\r\n    const positionsVS = new Array<vec3>(vertices.length);\r\n    for (let i = 0; i < vertices.length; i++) {\r\n        positionsVS[i] = vec3.create();\r\n        vec3.transformMat4(positionsVS[i], vertices[i].pos, worldViewMatrix);\r\n    }\r\n\r\n    const normalsVS = new Array<vec3>(vertices.length);\r\n    const worldViewMatrixNormal = mat3.normalFromMat4(mat3.create(), worldViewMatrix);\r\n    for (let i = 0; i < vertices.length; i++) {\r\n        normalsVS[i] = vec3.create();\r\n        vec3.transformMat3(normalsVS[i], vertices[i].normal, worldViewMatrixNormal);\r\n    }\r\n\r\n    const cameraDir = vec3.fromValues(0, 0, 1);\r\n    vec3.transformMat3(cameraDir, cameraDir, worldViewMatrixNormal);\r\n    return { positionsVS, normalsVS };\r\n}\r\n\r\nexport function getProjectedLoops(face: Face, worldViewMatrix: ReadonlyMat4) {\r\n    const topology = createTopology(face);\r\n\r\n    const { normalsVS, positionsVS } = projectFace(topology, worldViewMatrix);\r\n    const loops: ReadonlyVec3[][] = [];\r\n\r\n    const { trimLoops, trimStrips } = getTrimStrips(topology, normalsVS);\r\n    loops.push(...trimLoops);\r\n\r\n    const { loops: contourLoops, contourStrips } = getContourEdges(topology, normalsVS);\r\n    loops.push(...contourLoops);\r\n\r\n    const combinedStrips = [...contourStrips, ...trimStrips];\r\n    loops.push(...loopsFromStrips(combinedStrips));\r\n\r\n    //DEBUG CODE\r\n    const { vertices, triangles, edges } = topology;\r\n    const trimEdges = getTrimEdges(topology, normalsVS, 0).map((i) => edges[i].vertices);\r\n    ///\r\n\r\n    return { loops, trimLoops, contourLoops, trimEdges, vertices, positionsVS };\r\n}\r\n", "\r\nimport { mat3, type ReadonlyVec3, vec2, vec3 } from \"gl-matrix\";\r\nimport type { AABB2, CylinderData, FaceData, LoopData, ProductData, SurfaceData } from \"./brep\";\r\nimport { cylinderCenterLine } from \"./calculations\";\r\nimport { matFromInstance, unitToScale } from \"./loader\";\r\nimport { MeasureTool, epsilon } from \"./scene\";\r\nimport type { Surface } from \"./surfaces\";\r\nimport type { CameraValues, CylinderValues, EdgeValues, FaceValues, MeasureSettings, ObjectId, PlaneValues } from \"measure\";\r\n\r\nexport async function extractCurveValues(\r\n  product: ProductData,\r\n  pathIdx: number,\r\n  instanceIdx: number,\r\n  pathKind: \"edge\" | \"curveSegment\"\r\n): Promise<EdgeValues | undefined> {\r\n  const start = vec3.create();\r\n  const end = vec3.create();\r\n\r\n  const parameterData =\r\n    pathKind == \"edge\"\r\n      ? product.edges[pathIdx]\r\n      : product.curveSegments[pathIdx];\r\n  if (parameterData.curve3D != undefined) {\r\n    const curveData = product.curves3D[parameterData.curve3D];\r\n    switch (curveData.kind) {\r\n      case \"line\": {\r\n        const mat = matFromInstance(product.instances[instanceIdx]);\r\n        const edgeCurve =\r\n          pathKind == \"edge\"\r\n            ? MeasureTool.geometryFactory.getCurve3DFromEdge(product, pathIdx)\r\n            : MeasureTool.geometryFactory.getCurve3DFromSegment(product, pathIdx);\r\n        edgeCurve?.eval(parameterData.parameterBounds[0], start, undefined);\r\n        edgeCurve?.eval(parameterData.parameterBounds[1], end, undefined);\r\n        const dir = vec3.subtract(vec3.create(), end, start);\r\n\r\n        vec3.transformMat4(start, start, mat);\r\n        vec3.transformMat4(end, end, mat);\r\n\r\n        let dist = vec3.len(dir);\r\n        dist *= unitToScale(product.units);\r\n        vec3.normalize(dir, dir);\r\n        return { kind: \"line\", distance: dist, gradient: dir, start, end };\r\n      }\r\n      case \"circle\": {\r\n        const totalAngle =\r\n          parameterData.parameterBounds[1] - parameterData.parameterBounds[0];\r\n        return {\r\n          kind: \"arc\",\r\n          radius: curveData.radius * unitToScale(product.units),\r\n          totalAngle,\r\n        };\r\n      }\r\n      case \"lineStrip\": {\r\n        const closed = vec3.equals(\r\n          curveData.vertices[0],\r\n          curveData.vertices[curveData.vertices.length - 1]\r\n        );\r\n        return {\r\n          kind: \"lineStrip\",\r\n          totalLength: closed\r\n            ? undefined\r\n            : (parameterData.parameterBounds[1] -\r\n              parameterData.parameterBounds[0]) *\r\n            unitToScale(product.units),\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function extractPlaneValues(prodId: ObjectId, faceIdx: number, product: ProductData, instanceIdx: number, faceData: FaceData, surf: Surface, scale: number): Promise<PlaneValues> {\r\n  type MutableAABB2 = { readonly min: vec2; readonly max: vec2 };\r\n  function union(out: MutableAABB2, a: AABB2) {\r\n    vec2.min(out.min, out.min, a.min);\r\n    vec2.max(out.max, out.max, a.max);\r\n  }\r\n\r\n  const loopToEdges = async (\r\n    loop: LoopData\r\n  ): Promise<{\r\n    edges: EdgeValues[];\r\n    useRadius: boolean;\r\n    radius: number | undefined;\r\n  }> => {\r\n    let useRadius = true;\r\n    let radius = 0.0 as number | undefined;\r\n    let edges: EdgeValues[] = [];\r\n    for (const halfEdgeIdx of loop.halfEdges) {\r\n      const halfEdgeData = product.halfEdges[halfEdgeIdx];\r\n      const edgeValue = await extractCurveValues(\r\n        product,\r\n        halfEdgeData.edge,\r\n        instanceIdx,\r\n        \"edge\"\r\n      );\r\n      if (edgeValue) {\r\n        if (useRadius) {\r\n          if (edgeValue.kind != \"arc\") {\r\n            useRadius = false;\r\n            radius = undefined;\r\n          } else {\r\n            radius = Math.max(edgeValue.radius, radius as number) * scale;\r\n          }\r\n        }\r\n        edges.push(edgeValue);\r\n      }\r\n    }\r\n    return {\r\n      edges,\r\n      useRadius,\r\n      radius,\r\n    };\r\n  };\r\n\r\n  const mat = matFromInstance(product.instances[instanceIdx]);\r\n  function addVertexFromIndex(points: ReadonlyVec3[], index: number) {\r\n    const v = vec3.clone(product!.vertices[index].position);\r\n    vec3.transformMat4(v as vec3, v, mat);\r\n    points.push(v);\r\n  }\r\n  let hasWidthAndHeight = true;\r\n  const loop = product.loops[faceData.outerLoop];\r\n  const aabb = {\r\n    min: vec2.fromValues(Number.MAX_VALUE, Number.MAX_VALUE),\r\n    max: vec2.fromValues(-Number.MAX_VALUE, -Number.MAX_VALUE),\r\n  };\r\n  let verts: ReadonlyVec3[] = [];\r\n  for (const halfEdgeIdx of loop.halfEdges) {\r\n    const aabb2 = MeasureTool.geometryFactory.getHalfEdgeAABB(product, halfEdgeIdx);\r\n    if (!aabb2) {\r\n      break;\r\n    }\r\n    union(aabb, aabb2);\r\n\r\n    const halfEdgeData = product.halfEdges[halfEdgeIdx];\r\n    const edgeData = product.edges[halfEdgeData.edge];\r\n    if (edgeData.vertices) {\r\n      if (halfEdgeData.direction === 1) {\r\n        addVertexFromIndex(verts, edgeData.vertices[0]);\r\n      } else {\r\n        addVertexFromIndex(verts, edgeData.vertices[1]);\r\n      }\r\n    }\r\n  }\r\n\r\n  const normal = vec3.create();\r\n  const normalMat = mat3.normalFromMat4(mat3.create(), mat);\r\n  surf.evalNormal(normal, [0, 0]);\r\n  vec3.transformMat3(normal, normal, normalMat);\r\n  const xyNormal = vec3.fromValues(0, 0, 1);\r\n  const dotXyPlane = Math.abs(vec3.dot(normal, xyNormal));\r\n  let heightAboveXyPlane: number | undefined = undefined;\r\n  if (1 - dotXyPlane < epsilon) {\r\n    const pos = vec3.create();\r\n    surf.evalPosition(pos, [0, 0]);\r\n    vec3.scale(pos, pos, 1 / scale);\r\n    vec3.transformMat4(pos, pos, mat);\r\n    heightAboveXyPlane = pos[2];\r\n  }\r\n\r\n  let outerEdges = await loopToEdges(loop);\r\n\r\n  let innerEdges: EdgeValues[][] = [];\r\n  let innerRadius = undefined as number | undefined;\r\n  if (faceData.innerLoops) {\r\n    let useInnerRadius = true;\r\n    innerRadius = 0.0;\r\n    for (const innerLoopIdx of faceData.innerLoops) {\r\n      const innerLoop = product.loops[innerLoopIdx];\r\n      const edgeResult = await loopToEdges(innerLoop);\r\n      innerEdges.push(edgeResult.edges);\r\n      useInnerRadius = edgeResult.useRadius && useInnerRadius;\r\n      if (edgeResult.radius) {\r\n        innerRadius = Math.max(innerRadius as number, edgeResult.radius);\r\n      }\r\n    }\r\n    if (!useInnerRadius) {\r\n      innerRadius = undefined;\r\n    }\r\n  }\r\n\r\n  let width = undefined;\r\n  let height = undefined;\r\n  if (!outerEdges.useRadius) {\r\n    width = (aabb.max[0] - aabb.min[0]) * scale;\r\n    height = (aabb.max[1] - aabb.min[1]) * scale;\r\n  }\r\n\r\n  return {\r\n    kind: \"plane\",\r\n    width,\r\n    height,\r\n    outerRadius: outerEdges.radius,\r\n    innerRadius,\r\n    normal: normal,\r\n    area: faceData.area ? faceData.area * scale * scale : undefined,\r\n    vertices: verts as vec3[],\r\n    outerEdges: outerEdges.edges,\r\n    innerEdges,\r\n    heightAboveXyPlane,\r\n    entity: {\r\n      ObjectId: prodId, drawKind: \"face\", pathIndex: faceIdx, instanceIndex: instanceIdx\r\n    }\r\n  };\r\n}\r\n\r\nexport async function extractCylinderValues(prodId: ObjectId, faceIdx: number, product: ProductData, instanceIdx: number,\r\n  faceData: FaceData, cylinderData: CylinderData, scale: number, setting?: MeasureSettings): Promise<CylinderValues> {\r\n\r\n  const mat = matFromInstance(product.instances[instanceIdx]);\r\n  const [cylinderOrigo, cylinderEnd] = await cylinderCenterLine(\r\n    product,\r\n    faceData,\r\n    cylinderData,\r\n    mat,\r\n    setting ? setting.cylinderMeasure : \"center\"\r\n  );\r\n  return {\r\n    kind: \"cylinder\",\r\n    radius: cylinderData.radius * scale,\r\n    centerLineStart: cylinderOrigo,\r\n    centerLineEnd: cylinderEnd,\r\n    entity: {\r\n      ObjectId: prodId, drawKind: \"face\", pathIndex: faceIdx, instanceIndex: instanceIdx\r\n    }\r\n  };\r\n}\r\n\r\n\r\nexport async function extractFaceValues(\r\n  prodId: ObjectId,\r\n  product: ProductData,\r\n  faceIdx: number,\r\n  instanceIdx: number,\r\n  setting?: MeasureSettings\r\n): Promise<FaceValues | undefined> {\r\n\r\n  const faceData = product.faces[faceIdx];\r\n  const scale = unitToScale(product.units);\r\n  const surfaceData = product.surfaces[faceData.surface];\r\n  const surf = MeasureTool.geometryFactory.getSurface(\r\n    surfaceData,\r\n    faceData.facing,\r\n    scale\r\n  );\r\n  switch (surf.kind) {\r\n    case \"plane\": {\r\n      return await extractPlaneValues(prodId, faceIdx, product, instanceIdx, faceData, surf, scale);\r\n    }\r\n    case \"cylinder\": {\r\n      const cylinderData = surfaceData as CylinderData;\r\n      return await extractCylinderValues(prodId, faceIdx, product, instanceIdx, faceData, cylinderData, scale, setting);\r\n    }\r\n  }\r\n}\r\n\r\nexport async function extractCameraValuesFromFace(\r\n  product: ProductData,\r\n  faceIdx: number,\r\n  instanceIdx: number,\r\n  cameraDir: vec3,\r\n  setting?: MeasureSettings\r\n): Promise<CameraValues | undefined> {\r\n  const faceData = product.faces[faceIdx];\r\n  const surfaceData = product.surfaces[faceData.surface];\r\n  switch (surfaceData.kind) {\r\n    case \"cylinder\": {\r\n      const cylinderA = surfaceData as CylinderData;\r\n      const mat = matFromInstance(product.instances[instanceIdx]);\r\n      const [cylinderOrigo, cylinderEnd] = await cylinderCenterLine(\r\n        product,\r\n        faceData,\r\n        cylinderA,\r\n        mat,\r\n        setting ? setting.cylinderMeasure : \"center\"\r\n      );\r\n      const cylinderDir = vec3.sub(vec3.create(), cylinderEnd, cylinderOrigo);\r\n      vec3.normalize(cylinderDir, cylinderDir);\r\n      const dotCamera = vec3.dot(cameraDir, cylinderDir);\r\n      if (Math.abs(dotCamera) > 0.8) {\r\n        let position: vec3;\r\n        if (dotCamera < 0) {\r\n          position = cylinderEnd;\r\n        } else {\r\n          vec3.negate(cylinderDir, cylinderDir);\r\n          position = cylinderOrigo;\r\n        }\r\n        return { normal: cylinderDir, position };\r\n      }\r\n      const position = vec3.lerp(\r\n        vec3.create(),\r\n        cylinderOrigo,\r\n        cylinderEnd,\r\n        0.5\r\n      );\r\n\r\n      const xAxis = vec3.cross(\r\n        vec3.create(),\r\n        cylinderDir,\r\n        vec3.fromValues(1, 0, 0)\r\n      );\r\n      const dotX = vec3.dot(cameraDir, xAxis);\r\n      const absDotX = Math.abs(dotX);\r\n      const yAxis = vec3.cross(\r\n        vec3.create(),\r\n        cylinderDir,\r\n        vec3.fromValues(0, 1, 0)\r\n      );\r\n      const dotY = vec3.dot(cameraDir, yAxis);\r\n      const absDotY = Math.abs(dotY);\r\n      const zAxis = vec3.cross(\r\n        vec3.create(),\r\n        cylinderDir,\r\n        vec3.fromValues(0, 0, 1)\r\n      );\r\n      const dotZ = vec3.dot(cameraDir, zAxis);\r\n      const absDotZ = Math.abs(dotZ);\r\n\r\n      if (absDotX > absDotY && absDotX > absDotZ) {\r\n        if (dotX > 0) {\r\n          vec3.negate(xAxis, xAxis);\r\n        }\r\n        return { normal: xAxis, position };\r\n      } else if (absDotY > absDotZ) {\r\n        if (dotY > 0) {\r\n          vec3.negate(yAxis, yAxis);\r\n        }\r\n        return { normal: yAxis, position };\r\n      } else {\r\n        if (dotZ > 0) {\r\n          vec3.negate(zAxis, zAxis);\r\n        }\r\n        return { normal: zAxis, position };\r\n      }\r\n    }\r\n  }\r\n}\r\n", "import type { EdgeValues, FaceValues, ObjectId } from \"measure\";\r\nimport type { LoopData, ProductData, ShellData } from \"./brep\";\r\nimport { extractCurveValues, extractFaceValues } from \"./extract_values\";\r\nimport { matFromInstance } from \"./loader\";\r\n\r\nexport interface ParametricEdge {\r\n  index: number;\r\n  values: EdgeValues | undefined;\r\n}\r\n\r\nexport interface ParametricFace {\r\n  index: number;\r\n  values: FaceValues | undefined;\r\n  outerLoop: ParametricEdge[];\r\n  innerLoops?: ParametricEdge[][];\r\n}\r\n\r\nexport interface ParametricSolid {\r\n  volume?: number;\r\n  outerShell: ParametricFace[];\r\n  innerShells?: ParametricFace[][];\r\n}\r\n\r\nexport interface ParametricGeometry {\r\n  index: number;\r\n  solids: ParametricSolid[];\r\n}\r\n\r\nexport interface ParametricProduct {\r\n  geometries: ParametricGeometry[];\r\n}\r\n\r\nexport async function toParametricProduct(prodId: ObjectId, product: ProductData) {\r\n  const handleLoop = async (\r\n    loop: LoopData,\r\n    instanceIdx: number\r\n  ): Promise<ParametricEdge[] | undefined> => {\r\n    const loopEdges: ParametricEdge[] = [];\r\n    for (const halfEdgeIdx of loop.halfEdges) {\r\n      const halfEdge = product!.halfEdges[halfEdgeIdx];\r\n      loopEdges.push({\r\n        index: halfEdge.edge,\r\n        values: await extractCurveValues(\r\n          product,\r\n          halfEdge.edge,\r\n          instanceIdx,\r\n          \"edge\"\r\n        ),\r\n      });\r\n    }\r\n    return loopEdges;\r\n  };\r\n  const handleShell = async (\r\n    shellData: ShellData,\r\n    instanceIdx: number\r\n  ): Promise<ParametricFace[] | undefined> => {\r\n    const outerFaces: ParametricFace[] = [];\r\n    for (const faceIdx of shellData.faces) {\r\n      const faceData = product.faces[faceIdx];\r\n      const outerLoop = await handleLoop(\r\n        product.loops[faceData.outerLoop],\r\n        instanceIdx\r\n      );\r\n      if (outerLoop == undefined) {\r\n        return undefined;\r\n      }\r\n      let innerLoops: ParametricEdge[][] | undefined = undefined;\r\n      if (faceData.innerLoops) {\r\n        innerLoops = [];\r\n        for (const loopIdx of faceData.innerLoops) {\r\n          const innerLoop = await handleLoop(\r\n            product.loops[loopIdx],\r\n            instanceIdx\r\n          );\r\n          if (innerLoop == undefined) {\r\n            return undefined;\r\n          }\r\n          innerLoops.push(innerLoop);\r\n        }\r\n      }\r\n      outerFaces.push({\r\n        index: faceIdx,\r\n        outerLoop,\r\n        innerLoops,\r\n        values: await extractFaceValues(prodId, product, faceIdx, instanceIdx),\r\n      });\r\n      return outerFaces;\r\n    }\r\n  };\r\n  const geometries: ParametricGeometry[] = [];\r\n  for (let i = 0; i < product.instances.length; ++i) {\r\n    const instanceData = product.instances[i];\r\n    const mat = matFromInstance(instanceData);\r\n    const geometryData = product.geometries[instanceData.geometry as number];\r\n    const solids: ParametricSolid[] = [];\r\n    let volume = 0;\r\n    if (geometryData.shells) {\r\n      for (const shellIdx of geometryData.shells) {\r\n        const shellData = product.shells[shellIdx];\r\n        if (shellData.volume) {\r\n          volume += shellData.volume;\r\n        }\r\n\r\n        const outerFaces = await handleShell(shellData, i);\r\n        if (outerFaces) {\r\n          solids.push({\r\n            volume: volume == 0 ? undefined : volume,\r\n            outerShell: outerFaces,\r\n          });\r\n        } else {\r\n          return undefined;\r\n        }\r\n      }\r\n    }\r\n    if (geometryData.solids) {\r\n      for (const solidIdx of geometryData.solids) {\r\n        const solidData = product.solids[solidIdx];\r\n        const outerShellData = product.shells[solidData.outerShell];\r\n        if (outerShellData.volume) {\r\n          volume += outerShellData.volume;\r\n        }\r\n\r\n        const outerShell = await handleShell(outerShellData, i);\r\n        if (outerShell == undefined) {\r\n          return undefined;\r\n        }\r\n        let innerShells: ParametricFace[][] | undefined = undefined;\r\n        if (solidData.innerShells) {\r\n          innerShells = [];\r\n          for (const shellIdx of solidData.innerShells) {\r\n            const innerShellData = product.shells[shellIdx];\r\n            if (innerShellData.volume) {\r\n              volume -= innerShellData.volume;\r\n            }\r\n            const innerShell = await handleShell(innerShellData, i);\r\n            if (innerShell == undefined) {\r\n              return undefined;\r\n            }\r\n            innerShells.push(innerShell);\r\n          }\r\n        }\r\n        solids.push({\r\n          volume: volume == 0 ? undefined : volume,\r\n          outerShell,\r\n          innerShells,\r\n        });\r\n      }\r\n    }\r\n    geometries.push({ index: i, solids });\r\n  }\r\n  return { geometries };\r\n}\r\n", "import { vec2, vec3 } from \"gl-matrix\";\r\nimport type { ReadonlyVec2, ReadonlyVec3 } from \"gl-matrix\";\r\nimport type { ProductData } from \"./brep\";\r\nimport { cylinderCenterLine } from \"./calculations\";\r\nimport type { Curve3D, LineStrip3D, NurbsCurve3D } from \"./curves\";\r\nimport { crawlInstance, matFromInstance } from \"./loader\";\r\nimport { getProfile, reduceLineStrip } from \"./util\";\r\nimport type { MeasureSettings, Profile } from \"measure\";\r\n\r\nexport function slopeFromProfile(profile: ReadonlyVec2[]): number[] {\r\n  const slopes: number[] = [];\r\n  if (profile.length > 0) {\r\n    for (let i = 1; i < profile.length; ++i) {\r\n      const prevP = profile[i - 1];\r\n      const p = profile[i];\r\n      const segLen = p[0] - prevP[0];\r\n      const heightDiff = p[1] - prevP[1];\r\n      slopes.push(heightDiff / segLen);\r\n    }\r\n  }\r\n  return slopes;\r\n}\r\n\r\nexport function topAndBottomFromProfile(profile: ReadonlyVec2[]) {\r\n  let top = Number.MIN_SAFE_INTEGER;\r\n  let bottom = Number.MAX_SAFE_INTEGER;\r\n  for (const v of profile) {\r\n    top = Math.max(top, v[1]);\r\n    bottom = Math.min(bottom, v[1]);\r\n  }\r\n  return { top, bottom };\r\n}\r\n\r\nexport function reduceProfile(profile: ReadonlyVec2[]): Profile {\r\n  const slopeEpsilon = 1e-4;\r\n  const slopes: number[] = [];\r\n  const newProfile: ReadonlyVec2[] = [];\r\n  var elevations = topAndBottomFromProfile(profile);\r\n  let startElevation = 0;\r\n  let endElevation = 0;\r\n  startElevation = profile[0][1];\r\n  endElevation = profile[profile.length - 1][1];\r\n  if (profile.length > 1) {\r\n    let prevSlope = 0;\r\n    newProfile.push(profile[0]);\r\n    slopes.push(prevSlope);\r\n    for (let i = 1; i < profile.length; ++i) {\r\n      const prevP = profile[i - 1];\r\n      const p = profile[i];\r\n      const segLen = p[0] - prevP[0];\r\n      const heightDiff = p[1] - prevP[1];\r\n      const slope = heightDiff / segLen;\r\n      if (Math.abs(slope - prevSlope) > slopeEpsilon) {\r\n        slopes.push(prevSlope);\r\n        newProfile.push(prevP);\r\n      }\r\n      prevSlope = slope;\r\n    }\r\n    newProfile.push(profile[profile.length - 1]);\r\n    slopes.push(prevSlope);\r\n  }\r\n  return {\r\n    profilePoints: newProfile,\r\n    slopes,\r\n    startElevation,\r\n    endElevation,\r\n    top: elevations.top,\r\n    bottom: elevations.bottom,\r\n  };\r\n}\r\n\r\nexport function getCurveSegmentProfile(\r\n  product: ProductData,\r\n  curveSeg: Curve3D,\r\n  instanceIdx: number\r\n): Profile | undefined {\r\n  if (curveSeg && curveSeg.kind == \"lineStrip\") {\r\n    const lineStrip = curveSeg as LineStrip3D;\r\n    const mat = matFromInstance(product.instances[instanceIdx]);\r\n    const profile = lineStrip.toProfile(mat);\r\n    return reduceProfile(profile);\r\n  }\r\n  if (curveSeg && curveSeg.kind == \"nurbs\") {\r\n    const nurbs = curveSeg as NurbsCurve3D;\r\n\r\n    const vertices: ReadonlyVec3[] = [];\r\n    let parameters: readonly number[] = [];\r\n    if (nurbs.order == 2) {\r\n      for (let i = 1; i < nurbs.knots.length; ++i) {\r\n        (parameters as number[]).push(nurbs.knots[i]);\r\n      }\r\n      vertices.push(...nurbs.controlPoints);\r\n    } else {\r\n      parameters = nurbs.tesselationParameters;\r\n      for (const p of nurbs.tesselationParameters) {\r\n        const v = vec3.create();\r\n        nurbs.eval(p, v, undefined);\r\n        vertices.push(v);\r\n      }\r\n    }\r\n\r\n    const mat = matFromInstance(product.instances[instanceIdx]);\r\n    const profile = getProfile(reduceLineStrip(vertices), parameters, mat);\r\n    var elevations = topAndBottomFromProfile(profile);\r\n    return {\r\n      profilePoints: profile,\r\n      slopes: slopeFromProfile(profile),\r\n      startElevation: profile[0][1],\r\n      endElevation: profile[profile.length - 1][1],\r\n      top: elevations.top,\r\n      bottom: elevations.bottom,\r\n    };\r\n  }\r\n}\r\n\r\nexport async function getCylinderProfile(\r\n  product: ProductData,\r\n  faceIdx: number,\r\n  instanceIdx: number,\r\n  setting?: MeasureSettings\r\n): Promise<Profile | undefined> {\r\n  const face = product.faces[faceIdx];\r\n  const surfaceData = product.surfaces[face.surface];\r\n  if (surfaceData.kind == \"cylinder\") {\r\n    const mat = matFromInstance(product.instances[instanceIdx]);\r\n    const [start, end] = await cylinderCenterLine(\r\n      product,\r\n      face,\r\n      surfaceData,\r\n      mat,\r\n      setting ? setting.cylinderMeasure : \"center\"\r\n    );\r\n    const profile = [\r\n      vec2.fromValues(0, start[2]),\r\n      vec2.fromValues(\r\n        vec2.distance(\r\n          vec2.fromValues(start[0], start[1]),\r\n          vec2.fromValues(end[0], end[1])\r\n        ),\r\n        end[2]\r\n      ),\r\n    ];\r\n    var elevations = topAndBottomFromProfile(profile);\r\n\r\n    return {\r\n      profilePoints: profile,\r\n      slopes: slopeFromProfile(profile),\r\n      top: elevations.top,\r\n      bottom: elevations.bottom,\r\n      startElevation: profile[0][1],\r\n      endElevation: profile[profile.length - 1][1],\r\n    };\r\n  }\r\n}\r\n\r\nexport async function addCenterLinesFromCylinders(\r\n  product: ProductData,\r\n  centerLines: {\r\n    start: ReadonlyVec3;\r\n    end: ReadonlyVec3;\r\n    radius: number;\r\n    prev: number | undefined;\r\n    next: number | undefined;\r\n  }[],\r\n  scale: number,\r\n  setting?: MeasureSettings\r\n) {\r\n  const smallLines: {\r\n    start: vec3;\r\n    end: vec3;\r\n    radius: number;\r\n    checked: boolean\r\n  }[] = [];\r\n\r\n  const faceInstances = new Array<Array<number>>(product.instances.length);\r\n\r\n  for (let i = 0; i < product.instances.length; ++i) {\r\n    const instanceData = product.instances[i];\r\n    const faces = new Array<number>();\r\n    function faceFunc(faceIdx: number) {\r\n      faces.push(faceIdx);\r\n    }\r\n\r\n    if (typeof instanceData.geometry == \"number\") {\r\n      //check geom is number\r\n      crawlInstance(product, instanceData, faceFunc);\r\n    }\r\n    faceInstances[i] = faces;\r\n  }\r\n\r\n  const cylinderMeasureSettings = setting ? setting.cylinderMeasure : \"center\";\r\n  for (let i = 0; i < faceInstances.length; ++i) {\r\n    const mat = matFromInstance(product.instances[i]);\r\n    for (const faceIdx of faceInstances[i]) {\r\n      const face = product.faces[faceIdx];\r\n      const surfaceData = product.surfaces[face.surface];\r\n      if (surfaceData.kind == \"cylinder\") {\r\n        const [start, end] = await cylinderCenterLine(\r\n          product,\r\n          face,\r\n          surfaceData,\r\n          mat,\r\n          cylinderMeasureSettings\r\n        );\r\n        const scaledRadius = surfaceData.radius * scale;\r\n        let add = true;\r\n        const small = vec3.dist(start, end) < scaledRadius;\r\n\r\n        for (let centerline of small ? smallLines : centerLines) {\r\n          const threshold = Math.abs(centerline.radius - scaledRadius) + 0.15;\r\n          if (\r\n            vec3.distance(start, centerline.start) < threshold &&\r\n            vec3.distance(end, centerline.end) < threshold\r\n          ) {\r\n            add = false;\r\n            if (cylinderMeasureSettings === \"top\") {\r\n              if (centerline.radius < scaledRadius) {\r\n                centerline.radius = scaledRadius;\r\n                centerline.start = start;\r\n                centerline.end = end;\r\n              }\r\n            } else if (centerline.radius > scaledRadius) {\r\n              centerline.radius = scaledRadius;\r\n              centerline.start = start;\r\n              centerline.end = end;\r\n            }\r\n            break;\r\n          }\r\n        }\r\n        if (add) {\r\n          if (small) {\r\n            smallLines.push({\r\n              start,\r\n              end,\r\n              radius: scaledRadius,\r\n              checked: false\r\n            });\r\n          }\r\n          else {\r\n            centerLines.push({\r\n              start,\r\n              end,\r\n              radius: scaledRadius,\r\n              next: undefined,\r\n              prev: undefined,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  for (let i = 0; i < smallLines.length; ++i) {\r\n    const testLine = smallLines[i];\r\n    let add = false;\r\n    if (testLine.checked) {\r\n      continue;\r\n    }\r\n    for (let j = i + 1; j < smallLines.length; ++j) {\r\n      if (smallLines[j].checked) {\r\n        continue;\r\n      }\r\n      const dist = vec3.dist(smallLines[j].start, testLine.end);\r\n      const flippedDist = vec3.dist(smallLines[j].end, testLine.end);\r\n\r\n      if (dist < testLine.radius && dist < flippedDist) {\r\n        vec3.copy(testLine.end, smallLines[j].end);\r\n        smallLines[j].checked = true;\r\n        j = i + 1;\r\n        add = true;\r\n        continue;\r\n      }\r\n      if (flippedDist < testLine.radius) {\r\n        vec3.copy(testLine.end, smallLines[j].start);\r\n        smallLines[j].checked = true;\r\n        j = i + 1;\r\n        add = true;\r\n        continue;\r\n      }\r\n    }\r\n    if (add) {\r\n      centerLines.push({\r\n        start: testLine.start,\r\n        end: testLine.end,\r\n        radius: testLine.radius,\r\n        next: undefined,\r\n        prev: undefined,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function centerLinesToLinesTrip(\r\n  centerLines: {\r\n    start: ReadonlyVec3;\r\n    end: ReadonlyVec3;\r\n    radius: number;\r\n    prev: number | undefined;\r\n    next: number | undefined;\r\n  }[]\r\n) {\r\n  const compare = (\r\n    a: ReadonlyVec3,\r\n    radiusA: number,\r\n    b: ReadonlyVec3,\r\n    radiusB: number\r\n  ) => {\r\n    const dist = vec3.distance(a, b);\r\n    return dist < (radiusA + radiusB) / 2;\r\n  };\r\n\r\n  let startSegment:\r\n    | {\r\n      start: ReadonlyVec3;\r\n      end: ReadonlyVec3;\r\n      prev: number | undefined;\r\n      next: number | undefined;\r\n    }\r\n    | undefined = undefined;\r\n  for (let i = 0; i < centerLines.length; ++i) {\r\n    const currentSegment = centerLines[i];\r\n    let findNext = currentSegment.next == undefined;\r\n    let findPrev = currentSegment.prev == undefined;\r\n    for (let j = i + 1; j < centerLines.length; ++j) {\r\n      if (!findPrev && !findNext) {\r\n        break;\r\n      }\r\n      const checkSegment = centerLines[j];\r\n      if (\r\n        findPrev &&\r\n        compare(\r\n          currentSegment.start,\r\n          currentSegment.radius,\r\n          checkSegment.end,\r\n          checkSegment.radius\r\n        )\r\n      ) {\r\n        checkSegment.next = i;\r\n        currentSegment.prev = j;\r\n        findPrev = false;\r\n      }\r\n      if (\r\n        findNext &&\r\n        compare(\r\n          currentSegment.end,\r\n          currentSegment.radius,\r\n          checkSegment.start,\r\n          checkSegment.radius\r\n        )\r\n      ) {\r\n        checkSegment.prev = i;\r\n        currentSegment.next = j;\r\n        findNext = false;\r\n      }\r\n    }\r\n    if (findNext && i != centerLines.length - 1) {\r\n      for (let j = i + 1; j < centerLines.length; ++j) {\r\n        const checkSegment = centerLines[j];\r\n        if (\r\n          compare(\r\n            currentSegment.end,\r\n            currentSegment.radius,\r\n            checkSegment.end,\r\n            checkSegment.radius\r\n          )\r\n        ) {\r\n          const tmp = checkSegment.start;\r\n          checkSegment.start = checkSegment.end;\r\n          checkSegment.end = tmp;\r\n          checkSegment.prev = i;\r\n          currentSegment.next = j;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (findPrev && i != centerLines.length - 1) {\r\n      for (let j = i + 1; j < centerLines.length; ++j) {\r\n        const checkSegment = centerLines[j];\r\n        if (\r\n          compare(\r\n            currentSegment.start,\r\n            currentSegment.radius,\r\n            checkSegment.start,\r\n            checkSegment.radius\r\n          )\r\n        ) {\r\n          const tmp = checkSegment.start;\r\n          checkSegment.start = checkSegment.end;\r\n          checkSegment.end = tmp;\r\n          checkSegment.next = i;\r\n          currentSegment.prev = j;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (findPrev) {\r\n      if (currentSegment.next === undefined ||\r\n        (startSegment != undefined && startSegment.prev === undefined)) {\r\n        continue;\r\n      }\r\n      startSegment = currentSegment;\r\n    }\r\n  }\r\n  const lineStrip: ReadonlyVec3[] = [];\r\n  if (startSegment && startSegment.next === undefined) {\r\n    const len = vec3.distance(startSegment.start, startSegment.end);\r\n    lineStrip.push(vec3.clone(startSegment.start));\r\n    lineStrip.push(vec3.clone(startSegment.end));\r\n  } else if (startSegment && startSegment.next !== undefined) {\r\n    let workingSegment = startSegment;\r\n    lineStrip.push(vec3.clone(startSegment.start));\r\n    lineStrip.push(vec3.clone(startSegment.end));\r\n    let prevEnd = startSegment.end;\r\n    while (workingSegment.next !== undefined) {\r\n      workingSegment = centerLines[workingSegment.next];\r\n      prevEnd = workingSegment.end;\r\n      lineStrip.push(vec3.clone(workingSegment.end));\r\n    }\r\n  }\r\n  return lineStrip;\r\n}\r\n", "import { mat4, type ReadonlyVec3, vec3 } from \"gl-matrix\";\r\nimport type { CylinderData, FaceData, ProductData, SurfaceData } from \"./brep\";\r\nimport { cylinderLength } from \"./calculations\";\r\nimport { extractCylinderValues, extractPlaneValues } from \"./extract_values\";\r\nimport { crawlInstance, matFromInstance, unitToScale } from \"./loader\";\r\nimport type { Surface } from \"./surfaces\";\r\nimport type { ManholeMeasureValues, ObjectId } from \"measure\";\r\nimport { MeasureTool } from \"./scene\";\r\n\r\ntype PlaneEntity = { faceData: FaceData; instanceIdx: number, planeData: SurfaceData, faceIdx: number }\r\ntype CylinderEntity = { faceData: FaceData; instanceIdx: number, cylinderData: CylinderData, faceIdx: number }\r\n\r\nexport async function manholeMeasure(product: ProductData, prodId: ObjectId): Promise<ManholeMeasureValues | undefined> {\r\n    let top: { elevation: number; entity: PlaneEntity } | undefined = undefined;\r\n    let botInner: { elevation: number; radius: number | undefined, entity: PlaneEntity } | undefined = undefined;\r\n    let botOuter: { elevation: number; radius: number | undefined, entity: PlaneEntity } | undefined = undefined;\r\n    let outer: { radius: number; entity: CylinderEntity } | undefined = undefined;\r\n    let inner: { radius: number; entity: CylinderEntity } | undefined = undefined;\r\n\r\n    const botInnerCandiates: { elevation: number; radius: number | undefined, entity: PlaneEntity }[] = [];\r\n\r\n    for (let i = 0; i < product.instances.length; ++i) {\r\n        const instanceData = product.instances[i];\r\n        const instanceMat = matFromInstance(instanceData);\r\n\r\n        function faceFuncPlane(faceIdx: number) {\r\n            if (product) {\r\n                const face = product.faces[faceIdx];\r\n                let radius: number | undefined = undefined;\r\n                const outerLoop = product.loops[face.outerLoop];\r\n                if (outerLoop.halfEdges.length == 1) {\r\n                    const halfEdge = product.halfEdges[outerLoop.halfEdges[0]];\r\n                    const edge = product.edges[halfEdge.edge];\r\n                    if (edge.curve3D != undefined) {\r\n                        const curve = product.curves3D[edge.curve3D];\r\n                        if (curve.kind == \"circle\") {\r\n                            radius = curve.radius;\r\n                        }\r\n                    }\r\n                }\r\n                const surf = product.surfaces[face.surface];\r\n                if (surf.kind == \"plane\") {\r\n                    const transform = mat4.fromValues(\r\n                        ...(surf.transform as Parameters<typeof mat4.fromValues>)\r\n                    );\r\n                    mat4.multiply(transform, instanceMat, transform);\r\n                    const planeDir = vec3.fromValues(transform[8], transform[9], transform[10]);\r\n                    if (Math.abs(vec3.dot(planeDir, vec3.fromValues(0, 0, 1))) < 0.8) {\r\n                        return;\r\n                    }\r\n                    const planePos = vec3.fromValues(0, 0, 0);\r\n                    vec3.transformMat4(planePos, planePos, transform);\r\n                    if (top === undefined || botInner === undefined || botOuter === undefined) {\r\n                        top = { elevation: planePos[2], entity: { faceData: face, instanceIdx: i, planeData: surf, faceIdx } };\r\n                        botInner = { elevation: planePos[2], radius, entity: { faceData: face, instanceIdx: i, planeData: surf, faceIdx } };\r\n                        botOuter = { elevation: planePos[2], radius, entity: { faceData: face, instanceIdx: i, planeData: surf, faceIdx } };\r\n                    } else {\r\n                        if (top.elevation < planePos[2]) {\r\n                            top = { elevation: planePos[2], entity: { faceData: face, instanceIdx: i, planeData: surf, faceIdx } };\r\n                        }\r\n                        else {\r\n                            let setOuter = false;\r\n                            if (radius === undefined) {\r\n                                setOuter = botOuter.elevation > planePos[2]\r\n                            } else {\r\n                                if (botOuter.radius == undefined) {\r\n                                    setOuter = botOuter.elevation > planePos[2];\r\n                                }\r\n                                else {\r\n                                    setOuter = radius > botOuter.radius || (botOuter.radius === radius && botOuter.elevation > planePos[2]);\r\n                                }\r\n                            }\r\n                            if (setOuter) {\r\n                                botOuter = { elevation: planePos[2], radius, entity: { faceData: face, instanceIdx: i, planeData: surf, faceIdx } };\r\n                            }\r\n                            if (radius != undefined) {\r\n                                botInnerCandiates.push({ elevation: planePos[2], radius, entity: { faceData: face, instanceIdx: i, planeData: surf, faceIdx } });\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (typeof instanceData.geometry == \"number\") {\r\n            //check geom is number\r\n            crawlInstance(product, instanceData, faceFuncPlane);\r\n            botInnerCandiates.forEach(plane => {\r\n                const { radius, elevation } = plane;\r\n                if (botInner && botOuter && radius) {\r\n                    let setInner = false;\r\n                    if (botInner.radius == undefined) {\r\n                        setInner = radius != undefined || botOuter.elevation > elevation\r\n                    }\r\n                    else {\r\n                        setInner = botOuter.radius != undefined && botOuter.radius >= radius && botInner.elevation > elevation && elevation > botOuter.elevation;\r\n                    }\r\n                    if (setInner) {\r\n                        botInner = plane;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    top = top as { elevation: number; entity: PlaneEntity } | undefined;\r\n    botOuter = botOuter as { elevation: number; radius: number | undefined, entity: PlaneEntity } | undefined;\r\n    if (!top || !botOuter) {\r\n        return undefined;\r\n    }\r\n    if (top.elevation == botOuter.elevation) {\r\n        return undefined;\r\n    }\r\n    const totalLength = top.elevation - botOuter.elevation;\r\n    const scale = unitToScale(product.units);\r\n    if (totalLength * scale < 0.1) {\r\n        return undefined;\r\n    }\r\n\r\n    const getCylinderTopBot = (origo: ReadonlyVec3, dir: ReadonlyVec3, l: number, transformElevation: number) => {\r\n        const flipped = dir[2] <= 0;\r\n        const t = vec3.scaleAndAdd(vec3.create(), origo, dir, flipped ? l * -1 : l);\r\n        return t[2] > origo[2] ? [t[2] + transformElevation, origo[2] + transformElevation] : [origo[2] + transformElevation, t[2] + transformElevation];\r\n    }\r\n\r\n\r\n    let letInnerCylinderTopBot: number[] | undefined = undefined;\r\n    for (let i = 0; i < product.instances.length; ++i) {\r\n        const instanceData = product.instances[i];\r\n        function faceFuncCylinder(faceIdx: number) {\r\n            if (product) {\r\n                const face = product.faces[faceIdx];\r\n                const surf = product.surfaces[face.surface];\r\n                if (surf.kind == \"cylinder\") {\r\n                    const cylinderMtx = mat4.fromValues(\r\n                        ...(surf.transform as Parameters<typeof mat4.fromValues>)\r\n                    );\r\n                    const cylinderOrigo = mat4.getTranslation(vec3.create(), cylinderMtx);\r\n                    const cylinderDir = vec3.fromValues(\r\n                        cylinderMtx[8],\r\n                        cylinderMtx[9],\r\n                        cylinderMtx[10]\r\n                    );\r\n\r\n                    if (Math.abs(vec3.dot(cylinderDir, vec3.fromValues(0, 0, 1))) < 0.8) {\r\n                        return;\r\n                    }\r\n                    const transformElevation = instanceData.transformation ? instanceData.transformation[14] : 0;\r\n\r\n                    const len = Math.abs(cylinderLength(product, face, cylinderOrigo, cylinderDir));\r\n                    if (len > totalLength / 3) {\r\n                        if (outer == undefined || inner == undefined) {\r\n                            outer = { radius: surf.radius, entity: { faceData: face, instanceIdx: i, cylinderData: surf, faceIdx } };\r\n                            inner = { radius: surf.radius, entity: { faceData: face, instanceIdx: i, cylinderData: surf, faceIdx } };\r\n                            letInnerCylinderTopBot = getCylinderTopBot(cylinderOrigo, cylinderDir, len, transformElevation);\r\n                        } else {\r\n                            if (outer.radius < surf.radius) {\r\n                                outer = { radius: surf.radius, entity: { faceData: face, instanceIdx: i, cylinderData: surf, faceIdx } };\r\n                            } else if (inner.radius > surf.radius) {\r\n                                inner = { radius: surf.radius, entity: { faceData: face, instanceIdx: i, cylinderData: surf, faceIdx } };\r\n                                letInnerCylinderTopBot = getCylinderTopBot(cylinderOrigo, cylinderDir, len, transformElevation);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (typeof instanceData.geometry == \"number\") {\r\n            //check geom is number\r\n            crawlInstance(product, instanceData, faceFuncCylinder);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (top && botOuter && outer && inner && botInner) {\r\n        const scale = unitToScale(product.units);\r\n        top = top as { elevation: number; entity: PlaneEntity };\r\n        const topPlane = MeasureTool.geometryFactory.getSurface(\r\n            top.entity.planeData,\r\n            top.entity.faceData.facing,\r\n            scale\r\n        );\r\n        botOuter = botOuter as { elevation: number; radius: number | undefined, entity: PlaneEntity };\r\n        botInner = botInner as { elevation: number; radius: number | undefined, entity: PlaneEntity };\r\n        inner = inner as { radius: number; entity: CylinderEntity };\r\n        outer = outer as { radius: number; entity: CylinderEntity };\r\n        const oneCylinder = inner.radius === outer.radius;\r\n        if (oneCylinder) {\r\n            botInner = undefined;\r\n        }\r\n        else if (letInnerCylinderTopBot) {\r\n            if (botInner.elevation >= letInnerCylinderTopBot[0]) {\r\n                botInner = undefined;\r\n            }\r\n        }\r\n\r\n\r\n        const botOuterPlane = MeasureTool.geometryFactory.getSurface(\r\n            botOuter.entity.planeData,\r\n            botOuter.entity.faceData.facing,\r\n            scale\r\n        );\r\n\r\n        const botInnerPlane = botInner ? MeasureTool.geometryFactory.getSurface(\r\n            botInner.entity.planeData,\r\n            botInner.entity.faceData.facing,\r\n            scale\r\n        ) : undefined;\r\n\r\n        return {\r\n            drawKind: \"manhole\",\r\n            ObjectId: prodId,\r\n            top: await extractPlaneValues(prodId, top.entity.faceIdx, product, top.entity.instanceIdx, top.entity.faceData, topPlane, scale),\r\n            topElevation: top.elevation,\r\n            bottomOuter: await extractPlaneValues(prodId, botOuter.entity.faceIdx, product, botOuter.entity.instanceIdx, botOuter.entity.faceData, botOuterPlane, scale),\r\n            bottomOuterElevation: botOuter.elevation,\r\n            bottomInner: botInner ? await extractPlaneValues(prodId, botInner.entity.faceIdx, product, botInner.entity.instanceIdx, botInner.entity.faceData, botInnerPlane as Surface, scale) : undefined,\r\n            bottomInnerElevation: botInner ? botInner.elevation : letInnerCylinderTopBot ? letInnerCylinderTopBot[1] : undefined,\r\n            inner: oneCylinder ? undefined : await extractCylinderValues(prodId, inner.entity.faceIdx, product, inner.entity.instanceIdx, inner.entity.faceData, inner.entity.cylinderData, scale),\r\n            innerRadius: oneCylinder ? undefined : inner.radius,\r\n            outer: await extractCylinderValues(prodId, outer.entity.faceIdx, product, outer.entity.instanceIdx, outer.entity.faceData, outer.entity.cylinderData, scale),\r\n            outerRadius: outer.radius,\r\n            internal: {\r\n                top: top.entity.faceData,\r\n                bottomOuter: botOuter.entity.faceData,\r\n                bottomInner: botInner ? botInner.entity.faceData : undefined,\r\n                inner: oneCylinder ? undefined : inner.entity.faceData,\r\n                outer: outer.entity.faceData,\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}", "import { type ReadonlyVec3, vec2, vec3 } from \"gl-matrix\";\r\nimport type { CylinderData, FaceData, LoopData, ProductData } from \"./brep\";\r\nimport { cylinderCenterLine } from \"./calculations\";\r\nimport { matFromInstance } from \"./loader\";\r\nimport { getEdgeStrip } from \"./outline\";\r\nimport type { DrawObject, DrawPart, DrawVoid, ManholeMeasureValues, MeasureSettings } from \"measure\";\r\nimport { MeasureTool } from \"./scene\";\r\n\r\nexport async function getCylinderDrawParts(product: ProductData, instanceIdx: number, cylinderData: CylinderData,\r\n    face: FaceData, setting?: MeasureSettings) {\r\n    const drawParts: DrawPart[] = [];\r\n    const loop = product.loops[face.outerLoop];\r\n    const mat = matFromInstance(product.instances[instanceIdx]);\r\n    const [cylinderOrigo, cylinderEnd] = await cylinderCenterLine(\r\n        product,\r\n        face,\r\n        cylinderData,\r\n        mat,\r\n        setting ? setting.cylinderMeasure : \"center\"\r\n    );\r\n    const diff = vec3.sub(vec3.create(), cylinderEnd, cylinderOrigo);\r\n    const length = vec3.length(diff);\r\n    const planarLength = vec2.len(vec2.fromValues(diff[0], diff[1]));\r\n    const epsilon = 1e-3;\r\n    const dir = vec3.normalize(vec3.create(), diff);\r\n    const vertical = Math.abs(Math.abs(dir[2]) - 1) < epsilon;\r\n    drawParts.push({\r\n        vertices3D: [cylinderOrigo, cylinderEnd],\r\n        drawType: \"lines\",\r\n        elevation: {\r\n            from: cylinderOrigo[2],\r\n            to: cylinderEnd[2],\r\n            horizontalDisplay: diff[2] < planarLength,\r\n        },\r\n        text: [[`L ${length.toFixed(3)}m   \u2300 ${(cylinderData.radius * 2).toFixed(3)}m   ${vertical ? \"\" : `% ${((Math.abs(diff[2] / planarLength)) * 100).toFixed(2)}`}`]]\r\n    });\r\n    for (const halfEdgeIdx of loop.halfEdges) {\r\n        const halfEdgeData = product.halfEdges[halfEdgeIdx];\r\n        const edgeData = product.edges[halfEdgeData.edge];\r\n        if (edgeData.virtual) {\r\n            continue;\r\n        }\r\n        const edgeCurve = MeasureTool.geometryFactory.getCurve3DFromEdge(\r\n            product,\r\n            halfEdgeData.edge\r\n        );\r\n        if (edgeCurve) {\r\n            const edge = {\r\n                curve: edgeCurve,\r\n                geometryTransformation: matFromInstance(\r\n                    product.instances[instanceIdx]\r\n                ),\r\n                instanceIndex: instanceIdx,\r\n            };\r\n            drawParts.push({\r\n                vertices3D: getEdgeStrip(edge, 1),\r\n                drawType: \"lines\",\r\n            });\r\n        }\r\n    }\r\n\r\n    drawParts.push({ drawType: 'text', vertices3D: [cylinderEnd], text: `Z: ${cylinderEnd[2].toFixed(3)}m` })\r\n    drawParts.push({ drawType: 'text', vertices3D: [cylinderOrigo], text: `Z: ${cylinderOrigo[2].toFixed(3)}m` })\r\n\r\n    return drawParts;\r\n}\r\n\r\nexport async function getSurfaceDrawParts(product: ProductData, instanceIdx: number, face: FaceData) {\r\n    const loop = product.loops[face.outerLoop];\r\n    const drawParts: DrawPart[] = [];\r\n    async function loopToVertices(loop: LoopData): Promise<{ vertices: ReadonlyVec3[], text: string[] }> {\r\n        const vertices: ReadonlyVec3[] = [];\r\n        const hasLineOnEitherSide: boolean[] = [];\r\n        const text: string[] = [];\r\n        if (product) {\r\n            let first = true;\r\n            for (const halfEdgeIdx of loop.halfEdges) {\r\n                const halfEdgeData = product.halfEdges[halfEdgeIdx];\r\n\r\n                const edgeCurve = MeasureTool.geometryFactory.getCurve3DFromEdge(\r\n                    product,\r\n                    halfEdgeData.edge\r\n                );\r\n                if (edgeCurve) {\r\n                    const isLine = edgeCurve.kind == \"line\" || edgeCurve.kind == \"lineStrip\";\r\n                    const edge = {\r\n                        curve: edgeCurve,\r\n                        geometryTransformation: matFromInstance(\r\n                            product.instances[instanceIdx]\r\n                        ),\r\n                        instanceIndex: instanceIdx,\r\n                    };\r\n                    const edgeStrip = getEdgeStrip(edge, halfEdgeData.direction);\r\n                    const startIdx = first ? 0 : vertices.length - 1;\r\n                    if (!first && isLine) {\r\n                        hasLineOnEitherSide[startIdx]\r\n                    }\r\n                    let i = first ? 0 : 1;\r\n                    first = false;\r\n                    for (; i < edgeStrip.length; ++i) {\r\n                        vertices.push(edgeStrip[i]);\r\n                        hasLineOnEitherSide.push(isLine);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        if (vertices.length > 3) {\r\n            let prev = vec3.sub(vec3.create(), vertices[vertices.length - 1], vertices[0]);\r\n            let next = vec3.create();\r\n            for (let i = 0; i < vertices.length - 1; ++i) {\r\n                next = vec3.sub(vec3.create(), vertices[i + 1], vertices[i]);\r\n                if (hasLineOnEitherSide[i]) {\r\n                    text.push(vec3.length(next).toFixed(3));\r\n                    const prevIdx = i == 0 ? vertices.length - 1 : i - 1;\r\n                    if (hasLineOnEitherSide[prevIdx] && hasLineOnEitherSide[i + 1]) {\r\n                        const angle = vec3.angle(prev, next) * (180 / Math.PI);\r\n                        if (angle > 0.1 && (angle > 92 || angle < 88)) {\r\n                            drawParts.push({\r\n                                text: angle.toFixed(1) + \"\u00B0\", drawType: \"angle\", vertices3D:\r\n                                    [vec3.clone(vertices[i]), vec3.clone(vertices[prevIdx]), vec3.clone(vertices[i + 1])]\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    text.push(\"\");\r\n                }\r\n                vec3.negate(next, next);\r\n                prev = next;\r\n            }\r\n        }\r\n        return { vertices, text };\r\n    }\r\n\r\n    const text: string[][] = [];\r\n    const { vertices: outerVerts, text: outerTexts } = await loopToVertices(loop);\r\n    text.push(outerTexts);\r\n\r\n    const voids: DrawVoid[] = [];\r\n    if (face.innerLoops) {\r\n        for (const innerLoopIdx of face.innerLoops) {\r\n            const innerLoop = product.loops[innerLoopIdx];\r\n            const { vertices: innerVerts, text: innerTexts } = await loopToVertices(innerLoop);\r\n            text.push(innerTexts);\r\n            voids.push({ vertices3D: innerVerts });\r\n        }\r\n    }\r\n    drawParts.push({ vertices3D: outerVerts, drawType: \"filled\", voids, text: text.length > 0 ? text : undefined });\r\n    return drawParts;\r\n}\r\n\r\nexport async function getManholeDrawObjects(product: ProductData, manhole: ManholeMeasureValues) {\r\n    const drawObjects: DrawObject[] = [];\r\n    drawObjects.push({\r\n        kind: \"plane\", parts: await getSurfaceDrawParts(product, manhole.top.entity!.instanceIndex, manhole.internal.top)\r\n    });\r\n    drawObjects.push({\r\n        kind: \"plane\", parts: await getSurfaceDrawParts(product, manhole.bottomOuter.entity!.instanceIndex, manhole.internal.bottomOuter)\r\n    });\r\n    if (manhole.bottomInner && manhole.internal.bottomInner) {\r\n        drawObjects.push({\r\n            kind: \"plane\", parts: await getSurfaceDrawParts(product, manhole.bottomInner.entity!.instanceIndex, manhole.internal.bottomInner)\r\n        });\r\n    }\r\n    const outerCylinder = product.surfaces[manhole.internal.outer.surface] as CylinderData;\r\n    drawObjects.push({\r\n        kind: \"plane\", parts: await getCylinderDrawParts(product, manhole.outer.entity!.instanceIndex, outerCylinder, manhole.internal.outer)\r\n    });\r\n    if (manhole.internal.inner && manhole.inner) {\r\n        const innerCylinder = product.surfaces[manhole.internal.inner.surface] as CylinderData;\r\n        drawObjects.push({\r\n            kind: \"plane\", parts: await getCylinderDrawParts(product, manhole.inner.entity!.instanceIndex, innerCylinder, manhole.internal.inner)\r\n        });\r\n    }\r\n    return drawObjects;\r\n}\r\n", "import { mat4, vec3, vec4 } from \"gl-matrix\";\r\nimport type { CylinderData, FaceData, ProductData } from \"./brep\";\r\nimport { cylinderCenterLine, fullCircleCylinder } from \"./calculations\";\r\nimport { matFromInstance, unitToScale } from \"./loader\";\r\nimport type { CollisionValues, MeasureSettings } from \"measure\";\r\nimport { MeasureTool } from \"./scene\";\r\n\r\nexport async function getFaceToFaceCollisionValues(\r\n    productA: ProductData,\r\n    faceIdxA: number,\r\n    instanceIdxA: number,\r\n    productB: ProductData,\r\n    faceIdxB: number,\r\n    instanceIdxB: number,\r\n    setting?: MeasureSettings\r\n): Promise<CollisionValues | undefined> {\r\n    const faceDataA = productA.faces[faceIdxA];\r\n    const surfaceDataA = productA.surfaces[faceDataA.surface];\r\n    let surfaceA = {\r\n        surf: MeasureTool.geometryFactory.getSurface(surfaceDataA, 1),\r\n        instanceIdx: instanceIdxA,\r\n        faceData: faceDataA,\r\n        data: surfaceDataA,\r\n        product: productA,\r\n    };\r\n\r\n    const faceDataB = productB.faces[faceIdxB];\r\n    const surfaceDataB = productB.surfaces[faceDataB.surface];\r\n    let surfaceB = {\r\n        surf: MeasureTool.geometryFactory.getSurface(surfaceDataB, 1),\r\n        instanceIdx: instanceIdxB,\r\n        faceData: faceDataB,\r\n        data: surfaceDataB,\r\n        product: productB,\r\n    };\r\n    if (surfaceA.surf && surfaceB.surf) {\r\n        if (surfaceA.surf.kind == \"cylinder\" && surfaceB.surf.kind == \"cylinder\") {\r\n            if (!fullCircleCylinder(productA, faceDataA) || !fullCircleCylinder(productB, faceDataB)) {\r\n                return undefined;\r\n            }\r\n            const cylinderA = surfaceA.data as CylinderData;\r\n            const matA = matFromInstance(\r\n                surfaceA.product.instances[surfaceA.instanceIdx]\r\n            );\r\n\r\n            const cylinderB = surfaceB.data as CylinderData;\r\n            const matB = matFromInstance(\r\n                surfaceB.product.instances[surfaceB.instanceIdx]\r\n            );\r\n\r\n            return getCylinderToCylnderCollisionValues(cylinderA,\r\n                matA,\r\n                surfaceA.product,\r\n                surfaceA.faceData,\r\n                unitToScale(surfaceA.product.units),\r\n                cylinderB,\r\n                matB,\r\n                surfaceB.product,\r\n                surfaceB.faceData,\r\n                unitToScale(surfaceB.product.units),\r\n                setting);\r\n        }\r\n    }\r\n    return undefined;\r\n\r\n}\r\n\r\ntype Ray = {\r\n    start: vec3;\r\n    dir: vec3;\r\n}\r\n\r\nfunction rayCyllinderCollision(ray: Ray, cylinderStart: vec3, cylinderDir: vec3, cylinderRad: number): vec3 | undefined {\r\n    const parallel = vec3.equals(ray.dir, cylinderDir);\r\n    if (parallel) { //Valid collision for parallel cylinders is probably unlikely so not handled\r\n        return undefined;\r\n    }\r\n\r\n    const rc = vec3.sub(vec3.create(), ray.start, cylinderStart);\r\n    const n = vec3.cross(vec3.create(), ray.dir, cylinderDir);\r\n    const ln = vec3.len(n);\r\n    vec3.normalize(n, n);\r\n    const d = Math.abs(vec3.dot(rc, n));\r\n    if (d <= cylinderRad) {\r\n        const o = vec3.cross(vec3.create(), rc, cylinderDir);\r\n        const t = -vec3.dot(o, n) / ln;\r\n        const o2 = vec3.cross(vec3.create(), n, cylinderDir)\r\n        vec3.normalize(o2, o2);\r\n        const s = Math.abs(Math.sqrt(cylinderRad * cylinderRad - d * d) / vec3.dot(ray.dir, o2));\r\n        const tIn = t - s;\r\n        const tOut = t + s;\r\n        const param = tIn < tOut ? tIn : tOut;\r\n        const centerCol = vec3.scaleAndAdd(vec3.create(), ray.start, ray.dir, param);\r\n        return centerCol;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nasync function getCylinderToCylnderCollisionValues(\r\n    cylinderA: CylinderData,\r\n    matA: mat4,\r\n    productA: ProductData,\r\n    faceDataA: FaceData,\r\n    scaleA: number,\r\n    cylinderB: CylinderData,\r\n    matB: mat4,\r\n    productB: ProductData,\r\n    faceDataB: FaceData,\r\n    scaleB: number,\r\n    setting?: MeasureSettings\r\n): Promise<CollisionValues | undefined> {\r\n    const tolerance = 0.5;\r\n    const [cylinderStartA, cylinderEndA] = await cylinderCenterLine(\r\n        productA,\r\n        faceDataA,\r\n        cylinderA,\r\n        matA,\r\n    );\r\n    const dirA = vec3.sub(vec3.create(), cylinderEndA, cylinderStartA);\r\n    vec3.normalize(dirA, dirA);\r\n\r\n    const [cylinderStartB, cylinderEndB] = await cylinderCenterLine(\r\n        productB,\r\n        faceDataB,\r\n        cylinderB,\r\n        matB,\r\n    );\r\n    const dirB = vec3.sub(vec3.create(), cylinderEndB, cylinderStartB);\r\n    vec3.normalize(dirB, dirB);\r\n\r\n    const radB = cylinderB.radius * scaleB;\r\n    const radA = cylinderA.radius * scaleA;\r\n    const ray = { start: cylinderStartA, dir: dirA };\r\n    if (vec3.dist(ray.start, cylinderStartB) < vec3.dist(cylinderEndA, cylinderStartB)) { //inside so need to flip\r\n        ray.start = cylinderEndA;\r\n        vec3.negate(ray.dir, ray.dir);\r\n    }\r\n\r\n    if (Math.abs(vec3.dot(ray.dir, dirB)) > 0.99) {\r\n        return undefined;\r\n    }\r\n\r\n    const colCenter = rayCyllinderCollision(ray, cylinderStartB, dirB, radB);\r\n    if (colCenter) {\r\n        const cylLen = vec3.dist(cylinderStartA, cylinderEndA) + tolerance;\r\n        const p = vec4.fromValues(ray.dir[0], ray.dir[1], ray.dir[2], - vec3.dot(colCenter, ray.dir));\r\n        if (Math.abs(vec4.dot(p, vec4.fromValues(ray.start[0], ray.start[1], ray.start[2], 1))) > cylLen) {\r\n            return undefined;\r\n        }\r\n        if (!setting || setting?.cylinderMeasure === \"center\") {\r\n            return { point: colCenter };\r\n        }\r\n        let side = vec3.fromValues(1, 0, 0);\r\n        if (vec3.dot(ray.dir, side) === 1) {\r\n            side = vec3.fromValues(0, 0, 1);\r\n        }\r\n        const up = vec3.cross(vec3.create(), ray.dir, side);\r\n        vec3.normalize(up, up);\r\n        const d = 1 / Math.abs(vec3.dot(up, dirB));\r\n        if (setting.cylinderMeasure === \"top\") {\r\n            const top = vec3.scaleAndAdd(vec3.create(), colCenter, dirB, radA * d);\r\n            return { point: top };\r\n\r\n        }\r\n        const bottom = vec3.scaleAndAdd(vec3.create(), colCenter, dirB, -radA * d);\r\n        return { point: bottom };\r\n    }\r\n    return undefined;\r\n}", "import type { ReadonlyMat4, ReadonlyVec3 } from \"gl-matrix\";\r\nimport { mat4, vec2, vec3 } from \"gl-matrix\";\r\nimport type { AABB3, EdgeData, ProductData } from \"./brep\";\r\nimport { isInsideAABB } from \"./calculations\";\r\nimport type { Line3D, Arc3D, NurbsCurve3D, LineStrip3D, Curve3D } from \"./curves\";\r\nimport { crawlInstance, matFromInstance, unitToScale } from \"./loader\";\r\nimport type { Surface } from \"./surfaces\";\r\nimport type { SnapTolerance } from \"measure/modules\";\r\nimport type { MeasureEntity } from \"measure/measure_view\";\r\nimport { MeasureTool } from \"./scene\";\r\n\r\nexport interface EntityPicker {\r\n    instanceIdx: number;\r\n    worldToObject: ReadonlyMat4;\r\n}\r\n\r\n\r\nexport interface EdgePickInfo {\r\n    idx: number;\r\n    curve: Curve3D;\r\n    data: EdgeData;\r\n}\r\n\r\nexport interface SegmentPickInfo {\r\n    idx: number;\r\n    readonly curve: Curve3D;\r\n}\r\n\r\nexport interface PickSegments extends EntityPicker {\r\n    segments: SegmentPickInfo[];\r\n}\r\n\r\nexport interface PickEdges extends EntityPicker {\r\n    instanceMat: ReadonlyMat4;\r\n    edges: EdgePickInfo[];\r\n}\r\n\r\nexport interface FacePickInfo {\r\n    idx: number;\r\n    aabb: AABB3;\r\n    surface: Surface;\r\n}\r\n\r\nexport interface PickFaces extends EntityPicker {\r\n    instanceMat: ReadonlyMat4;\r\n    faces: FacePickInfo[];\r\n}\r\n\r\nexport interface PickInterface {\r\n    objectId: number;\r\n    unitScale: number;\r\n    segments: PickSegments[];\r\n    edges: PickEdges[];\r\n    faces: PickFaces[];\r\n}\r\n\r\nexport async function getPickInterface(product: ProductData, objectId: number): Promise<PickInterface> {\r\n    const edgeInstances = new Array<Array<number>>(product.instances.length);\r\n    const faceInstances = new Array<Array<number>>(product.instances.length);\r\n    const curveSegmentInstances = new Array<readonly number[]>(\r\n        product.instances.length\r\n    );\r\n\r\n    for (let i = 0; i < product.instances.length; ++i) {\r\n        const instanceData = product.instances[i];\r\n\r\n        const edges = new Array<number>();\r\n        const faces = new Array<number>();\r\n\r\n        function faceFunc(faceIdx: number) {\r\n            faces.push(faceIdx);\r\n            if (product) {\r\n                const face = product.faces[faceIdx];\r\n                const loops = [face.outerLoop, ...(face.innerLoops ?? [])];\r\n                for (const loopIdx of loops) {\r\n                    const loop = product.loops[loopIdx];\r\n                    for (const halfEdgeIdx of loop.halfEdges) {\r\n                        const halfEdge = product.halfEdges[halfEdgeIdx];\r\n                        edges.push(halfEdge.edge);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (typeof instanceData.geometry == \"number\") {\r\n            //check geom is number\r\n            crawlInstance(product, instanceData, faceFunc);\r\n        }\r\n        const geometryData =\r\n            product.geometries[instanceData.geometry as number];\r\n        if (geometryData.compoundCurve) {\r\n            curveSegmentInstances[i] = geometryData.compoundCurve;\r\n        } else {\r\n            curveSegmentInstances[i] = [];\r\n        }\r\n\r\n        edgeInstances[i] = edges;\r\n        faceInstances[i] = faces;\r\n    }\r\n\r\n    const segments: PickSegments[] = [];\r\n    for (let i = 0; i < curveSegmentInstances.length; ++i) {\r\n        const instanceData = product.instances[i];\r\n        const instanceMat = matFromInstance(instanceData);\r\n        const worldToObject = mat4.invert(mat4.create(), instanceMat);\r\n        const curves: SegmentPickInfo[] = [];\r\n\r\n        for (const segmentIdx of curveSegmentInstances[i]) {\r\n            const curve = MeasureTool.geometryFactory.getCurve3DFromSegment(\r\n                product,\r\n                segmentIdx\r\n            );\r\n            if (curve) {\r\n                curves.push({ idx: segmentIdx, curve: curve as Curve3D })\r\n            }\r\n        }\r\n        if (curves.length > 0) {\r\n            segments.push({ segments: curves, instanceIdx: i, worldToObject });\r\n        }\r\n    }\r\n\r\n    const edges: PickEdges[] = [];\r\n    for (let i = 0; i < edgeInstances.length; ++i) {\r\n        const InstanceData = product.instances[i];\r\n        const instanceMat = matFromInstance(InstanceData);\r\n        const worldToObject = mat4.invert(mat4.create(), instanceMat);\r\n\r\n        const curves: EdgePickInfo[] = [];\r\n        for (const edgeIdx of edgeInstances[i]) {\r\n            const edgeData = product.edges[edgeIdx];\r\n            if (edgeData.virtual) {\r\n                continue;\r\n            }\r\n            const curve = MeasureTool.geometryFactory.getCurve3DFromEdge(\r\n                product,\r\n                edgeIdx,\r\n                1\r\n            );\r\n            if (curve) {\r\n                curves.push({ data: edgeData, idx: edgeIdx, curve: curve as Curve3D });\r\n            }\r\n        }\r\n        if (curves.length > 0) {\r\n            edges.push({ instanceIdx: i, worldToObject, instanceMat, edges: curves })\r\n        }\r\n    }\r\n\r\n    const faces: PickFaces[] = [];\r\n    for (let i = 0; i < faceInstances.length; ++i) {\r\n        const InstanceData = product.instances[i];\r\n        const instanceMat = matFromInstance(InstanceData);\r\n        const worldToObject = mat4.invert(mat4.create(), instanceMat);\r\n        const surfaces: FacePickInfo[] = [];\r\n        for (const faceIdx of faceInstances[i]) {\r\n            const faceData = product.faces[faceIdx];\r\n            const surfaceData = product.surfaces[faceData.surface];\r\n            const surface = MeasureTool.geometryFactory.getSurface(surfaceData, 1);\r\n            surfaces.push({ aabb: faceData.aabb, idx: faceIdx, surface: surface as Surface })\r\n        }\r\n        faces.push({ instanceIdx: i, worldToObject, faces: surfaces, instanceMat });\r\n    }\r\n\r\n    return { objectId, edges, segments, faces, unitScale: unitToScale(product.units) };\r\n}\r\n\r\nexport function pick(pickInterface: PickInterface, position: ReadonlyVec3, tolerance: SnapTolerance): { entity: MeasureEntity, connectionPoint: vec3 } | undefined {\r\n    const flippedPos = vec3.copy(vec3.create(), position);\r\n    const edgeTolerance = tolerance.edge ? tolerance.edge / pickInterface.unitScale : undefined;\r\n    const segmentTolerance = tolerance.segment ? tolerance.segment / pickInterface.unitScale : undefined;\r\n    const faceTolerance = tolerance.face ? tolerance.face / pickInterface.unitScale : undefined;\r\n    const pointTolerance = tolerance.point ? tolerance.point / pickInterface.unitScale : undefined;\r\n\r\n    if (segmentTolerance) {\r\n        for (const instanceSeg of pickInterface.segments) {\r\n            const localPoint = vec3.transformMat4(\r\n                vec3.create(),\r\n                flippedPos,\r\n                instanceSeg.worldToObject\r\n            );\r\n            for (const seg of instanceSeg.segments) {\r\n                const t = seg.curve.invert(localPoint);\r\n                const curvePoint = vec3.create();\r\n                seg.curve.eval(t, curvePoint, undefined);\r\n                const dist = vec3.dist(curvePoint, localPoint);\r\n                if (dist < segmentTolerance) {\r\n                    return {\r\n                        entity: {\r\n                            ObjectId: pickInterface.objectId,\r\n                            drawKind: \"curveSegment\",\r\n                            pathIndex: seg.idx,\r\n                            instanceIndex: instanceSeg.instanceIdx,\r\n                            parameter: t,\r\n                        },\r\n                        connectionPoint: curvePoint\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    let closestCandidate: { entity: MeasureEntity, connectionPoint: vec3 } | undefined = undefined;\r\n    let closestDistance = Number.MAX_VALUE;\r\n    let pointSelected = false;\r\n\r\n    if (edgeTolerance || pointTolerance) {\r\n        let aabbTol = 0;\r\n        if (edgeTolerance && pointTolerance) {\r\n            aabbTol = pointTolerance > edgeTolerance ? pointTolerance : edgeTolerance;\r\n        } else {\r\n            aabbTol = edgeTolerance ? edgeTolerance : pointTolerance ? pointTolerance : 0;\r\n        }\r\n        for (const instanceEdge of pickInterface.edges) {\r\n            const localPoint = vec3.transformMat4(\r\n                vec3.create(),\r\n                flippedPos,\r\n                instanceEdge.worldToObject\r\n            );\r\n            for (const edge of instanceEdge.edges) {\r\n                if (isInsideAABB(localPoint, edge.data.aabb, aabbTol)) {\r\n                    const t = edge.curve.invert(localPoint);\r\n                    const curvePoint = vec3.create();\r\n                    if (edge.data.vertices && edge.curve.kind != \"arc\" && pointTolerance) {\r\n                        const distToStart = Math.abs(edge.data.parameterBounds[0] - t);\r\n                        if (distToStart < pointTolerance && distToStart < closestDistance) {\r\n\r\n                            edge.curve.eval(\r\n                                edge.data.parameterBounds[0],\r\n                                curvePoint,\r\n                                undefined\r\n                            );\r\n                            const actualDistance = vec3.dist(curvePoint, localPoint);\r\n                            if (actualDistance < pointTolerance && actualDistance < closestDistance) {\r\n                                pointSelected = true;\r\n                                closestDistance = actualDistance;\r\n                                vec3.transformMat4(curvePoint, curvePoint, instanceEdge.instanceMat);\r\n                                closestCandidate = {\r\n                                    entity: {\r\n                                        ObjectId: pickInterface.objectId,\r\n                                        drawKind: \"vertex\",\r\n                                        pathIndex: edge.data.vertices[0],\r\n                                        instanceIndex: instanceEdge.instanceIdx,\r\n                                        parameter: vec3.clone(curvePoint),\r\n                                    },\r\n                                    connectionPoint: vec3.clone(curvePoint)\r\n                                }\r\n                            }\r\n                            const distToEnd = Math.abs(edge.data.parameterBounds[1] - t);\r\n                            if (distToEnd < pointTolerance && distToEnd < closestDistance) {\r\n                                edge.curve.eval(\r\n                                    edge.data.parameterBounds[1],\r\n                                    curvePoint,\r\n                                    undefined\r\n                                );\r\n                                const actualDistance = vec3.dist(curvePoint, localPoint);\r\n                                if (actualDistance < pointTolerance && actualDistance < closestDistance) {\r\n                                    pointSelected = true;\r\n                                    closestDistance = actualDistance;\r\n                                    vec3.transformMat4(curvePoint, curvePoint, instanceEdge.instanceMat);\r\n                                    closestCandidate = {\r\n                                        entity: {\r\n                                            ObjectId: pickInterface.objectId,\r\n                                            drawKind: \"vertex\",\r\n                                            pathIndex: edge.data.vertices[1],\r\n                                            instanceIndex: instanceEdge.instanceIdx,\r\n                                            parameter: vec3.clone(curvePoint),\r\n                                        },\r\n                                        connectionPoint: vec3.clone(curvePoint)\r\n                                    };\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!pointSelected && edgeTolerance) {\r\n                        edge.curve.eval(t, curvePoint, undefined);\r\n                        const dist = vec3.dist(curvePoint, localPoint);\r\n                        if (dist < edgeTolerance && dist < closestDistance) {\r\n                            closestDistance = dist;\r\n                            vec3.transformMat4(curvePoint, curvePoint, instanceEdge.instanceMat);\r\n                            closestCandidate = {\r\n                                entity: {\r\n                                    ObjectId: pickInterface.objectId,\r\n                                    drawKind: \"edge\",\r\n                                    pathIndex: edge.idx,\r\n                                    instanceIndex: instanceEdge.instanceIdx,\r\n                                    parameter: t,\r\n                                },\r\n                                connectionPoint: curvePoint\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (closestCandidate) {\r\n        return closestCandidate;\r\n    }\r\n\r\n    if (faceTolerance) {\r\n        for (const faceInstance of pickInterface.faces) {\r\n            const localPoint = vec3.transformMat4(\r\n                vec3.create(),\r\n                flippedPos,\r\n                faceInstance.worldToObject\r\n            );\r\n            for (const face of faceInstance.faces) {\r\n                if (isInsideAABB(localPoint, face.aabb, faceTolerance)) {\r\n                    const uv = vec2.create();\r\n                    face.surface.invert(uv, localPoint);\r\n                    const surfacePoint = vec3.create();\r\n                    face.surface.evalPosition(surfacePoint, uv);\r\n\r\n                    const dist = vec3.dist(surfacePoint, localPoint);\r\n                    if (dist < closestDistance && dist < faceTolerance) {\r\n                        vec3.transformMat4(surfacePoint, surfacePoint, faceInstance.instanceMat);\r\n                        closestCandidate = {\r\n                            entity: {\r\n                                ObjectId: pickInterface.objectId,\r\n                                drawKind: \"face\",\r\n                                pathIndex: face.idx,\r\n                                instanceIndex: faceInstance.instanceIdx,\r\n                                parameter: uv,\r\n                            },\r\n                            connectionPoint: surfacePoint\r\n                        };\r\n                        closestDistance = dist;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return closestCandidate;\r\n}", "import { mat3, type ReadonlyVec3, vec2, vec3 } from \"gl-matrix\";\r\nimport { Downloader } from \"../util\";\r\nimport type { CrossSections } from \"./cross_section\";\r\nimport type { CrossSlope, RoadCrossSection, RoadProfile, RoadProfiles } from \"measure\";\r\n\r\nexport class RoadTool {\r\n    data = new Map<string, CrossSections | null>();\r\n    readonly downloader;\r\n    constructor(readonly baseUrl: URL) {\r\n        const crossUrl = baseUrl;\r\n        crossUrl.pathname += \"road/\";\r\n        this.downloader = new Downloader(crossUrl);\r\n    }\r\n\r\n    findShoulderIndex(codes: number[]) {\r\n        let leftShoulder = 0;\r\n        let rightShoulder = 0;\r\n        let handleLeft = true;\r\n        for (let i = 0; i < codes.length; ++i) {\r\n            const code = codes[i];\r\n            if (code == 10) {\r\n                handleLeft = false;\r\n            }\r\n            if (code == 2) {\r\n                if (handleLeft) {\r\n                    leftShoulder = i;\r\n                } else {\r\n                    rightShoulder = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return { leftShoulder, rightShoulder }\r\n    }\r\n\r\n    async downloadSections(name: string): Promise<CrossSections | null> {\r\n        try {\r\n            return await this.downloader.downloadJson(name);\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private async getCrossSections(name: string): Promise<CrossSections | undefined> {\r\n        if (this.data.size > 20) {\r\n            this.data.clear();\r\n        }\r\n        let crossSection = this.data.get(name);\r\n        if (crossSection === undefined) {\r\n            crossSection = await this.downloadSections(`${name}.json`);\r\n            this.data.set(name, crossSection);\r\n        }\r\n        return crossSection ?? undefined;\r\n    }\r\n\r\n    async getCrossSection(name: string, param: number): Promise<RoadCrossSection | undefined> {\r\n        const crossSections = await this.getCrossSections(name);\r\n        if (crossSections) {\r\n            const { intervals, sections, labels, codes } = crossSections;\r\n\r\n            let left: number = 0;\r\n            let right: number = intervals.length - 1;\r\n\r\n            const sectionFromIndex = (index: number) => {\r\n                if (index !== 0 && labels[sections[index - 1].l].length === 1) {\r\n                    return undefined\r\n                }\r\n\r\n                let pts: ReadonlyVec3[];\r\n                let centerDir: vec3;\r\n                const sec = sections[index];\r\n                const centerIdx = crossSections.codes[sec.l].findIndex((c) => c == 10);\r\n                const currCenter = sec.p[centerIdx];\r\n                if (index == 0) {\r\n                    pts = sec.p;\r\n                    const nextSec = sections[index + 1];\r\n                    const nextCenterIdx = nextSec.l == sec.l ? centerIdx : crossSections.codes[nextSec.l].findIndex((c) => c == 10);\r\n                    const nextCenter = nextSec.p[nextCenterIdx];\r\n                    centerDir = vec3.sub(vec3.create(), nextCenter, currCenter);\r\n                    vec3.normalize(centerDir, centerDir);\r\n                } else {\r\n                    const internalParam = Math.abs(param - intervals[index - 1]);\r\n                    if (internalParam > 10) {\r\n                        return undefined;\r\n                    }\r\n                    const prevSec = sections[index - 1];\r\n                    const nextCenterIdx = prevSec.l == sec.l ? centerIdx : crossSections.codes[prevSec.l].findIndex((c) => c == 10);\r\n                    const prevCenter = prevSec.p[nextCenterIdx];\r\n                    centerDir = vec3.sub(vec3.create(), currCenter, prevCenter);\r\n                    vec3.normalize(centerDir, centerDir);\r\n\r\n                    pts = prevSec.l == sec.l ? prevSec.p.map((p, i) => {\r\n                        const nextP = sec.p[i];\r\n                        const dir = vec3.sub(vec3.create(), nextP, p);\r\n                        vec3.normalize(dir, dir);\r\n                        return vec3.scaleAndAdd(vec3.create(), p, dir, internalParam);\r\n                    }) : sec.p;\r\n                }\r\n                const up = vec3.fromValues(0, 0, 1);\r\n                const right = vec3.cross(vec3.create(), up, centerDir);\r\n                vec3.normalize(right, right);\r\n                vec3.cross(centerDir, right, up);\r\n                vec3.normalize(centerDir, centerDir);\r\n                const mat = mat3.fromValues(\r\n                    right[0], right[1], right[2],\r\n                    up[0], up[1], up[2],\r\n                    centerDir[0], centerDir[1], centerDir[2]\r\n                );\r\n\r\n                const points2D = pts.map((p) => {\r\n                    const _p = vec3.transformMat3(vec3.create(), p, mat);\r\n                    return vec2.fromValues(_p[0], _p[1]);\r\n                });\r\n\r\n                const points = pts.map((p) => {\r\n                    const _p = vec3.clone(p);\r\n                    return _p;\r\n                });\r\n\r\n                const sectionCodes = codes[sec.l];\r\n\r\n                const { leftShoulder, rightShoulder } = this.findShoulderIndex(sectionCodes)\r\n                const cp = vec3.clone(pts[centerIdx]);\r\n                const lp = vec3.clone(pts[leftShoulder]);\r\n                const rp = vec3.clone(pts[rightShoulder]);\r\n\r\n                const cp2d = vec2.fromValues(cp[0], cp[1]);\r\n                const lp2d = vec2.fromValues(lp[0], lp[1]);\r\n                const rp2d = vec2.fromValues(rp[0], rp[1]);\r\n                const slopeL = Math.abs(cp[2] - lp[2]) / vec2.dist(cp2d, lp2d);\r\n                const slopeR = Math.abs(cp[2] - rp[2]) / vec2.dist(cp2d, rp2d);\r\n\r\n                const slopes = {\r\n                    left: { slope: slopeL, start: lp, end: cp },\r\n                    right: { slope: slopeR, start: cp, end: rp }\r\n                };\r\n\r\n                return { points, labels: labels[sec.l], points2D, slopes, codes: sectionCodes };\r\n            }\r\n\r\n            while (left <= right) {\r\n                const mid: number = Math.floor((left + right) / 2);\r\n                const midParam = intervals[mid];\r\n                if (mid === intervals.length - 1) {\r\n                    if (midParam < param) {\r\n                        return sectionFromIndex(mid);\r\n                    }\r\n                    return undefined;\r\n                }\r\n                if (Math.abs(midParam - param) < 0.001) {\r\n                    return sectionFromIndex(mid);\r\n                }\r\n                if (param < midParam) {\r\n                    right = mid - 1;\r\n                }\r\n                else {\r\n                    const nextParam = intervals[mid + 1];\r\n                    if (param < nextParam) {\r\n                        return sectionFromIndex(mid + 1);\r\n                    }\r\n                    left = mid + 1;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    async getRoadProfiles(name: string): Promise<RoadProfiles | undefined> {\r\n        const crossSections = await this.getCrossSections(name);\r\n        if (crossSections) {\r\n            if (crossSections.heightmaps.length != 0) {\r\n                const profiles: RoadProfile[] = [];\r\n                profiles.push({ name: crossSections.name, elevations: crossSections.centerLine.map(p => p[2]) });\r\n                for (const map of crossSections.heightmaps) {\r\n                    profiles.push(map);\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    async getCrossSlope(name: string): Promise<CrossSlope | undefined> {\r\n        const crossSections = await this.getCrossSections(name);\r\n        if (crossSections) {\r\n            const left: number[] = [];\r\n            const right: number[] = [];\r\n            crossSections.sections.forEach(section => {\r\n                const sectionCodes = crossSections.codes[section.l];\r\n                const { leftShoulder, rightShoulder } = this.findShoulderIndex(sectionCodes);\r\n                const centerIdx = sectionCodes.findIndex((c) => c == 10);\r\n                const cp = vec3.clone(section.p[centerIdx]);\r\n                const lp = vec3.clone(section.p[leftShoulder]);\r\n                const rp = vec3.clone(section.p[rightShoulder]);\r\n\r\n                const cp2d = vec2.fromValues(cp[0], cp[1]);\r\n                const lp2d = vec2.fromValues(lp[0], lp[1]);\r\n                const rp2d = vec2.fromValues(rp[0], rp[1]);\r\n                left.push(cp[2] - lp[2] / vec2.dist(cp2d, lp2d));\r\n                right.push(cp[2] - rp[2] / vec2.dist(cp2d, rp2d));\r\n            });\r\n            return { intervals: crossSections.intervals, left, right };\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    // async getRoadProfiles(name: string): Promise<RoadProfiles | undefined> {\r\n    //     const crossSections = await this.getCrossSections(name);\r\n    //     if (crossSections) {\r\n\r\n    //         const profiles: RoadProfile[] = [];\r\n\r\n    //         const addOrAppend = (codes: number[], points: ReadonlyVec2[][], labels: string[]) => {\r\n    //             for (let i = 0; i < codes.length; ++i) {\r\n    //                 const side = codes[i] == 10 ? \"center\" : labels[i][0] === '-' ? \"left\" : \"right\";\r\n    //                 const p = profiles.find((p) => p.code == codes[i] && p.side == side && p.label == labels[i]);\r\n    //                 if (p) {\r\n    //                     p.points.push(...points[i]);\r\n    //                 } else {\r\n    //                     profiles.push({ code: codes[i], label: labels[i], points: points[i], side });\r\n    //                 }\r\n    //             }\r\n    //         }\r\n\r\n    //         let currentCodes = crossSections.codes[0];\r\n    //         let currentLabels = crossSections.labels[0];\r\n    //         let currentPoints: ReadonlyVec2[][] = [];\r\n    //         let currentLabelsIdx = 0;\r\n    //         for (let i = 0; i < crossSections.intervals.length; ++i) {\r\n    //             const section = crossSections.sections[i];\r\n    //             if (currentLabelsIdx != section.l) {\r\n    //                 addOrAppend(currentCodes, currentPoints, currentLabels);\r\n    //                 currentCodes = crossSections.codes[section.l];\r\n    //                 currentLabels = crossSections.labels[section.l];\r\n    //                 currentLabelsIdx = section.l\r\n    //                 currentPoints = [];\r\n    //             }\r\n    //             if (currentPoints.length == 0) {\r\n    //                 for (let j = 0; j < section.p.length; ++j) {\r\n    //                     currentPoints.push([]);\r\n    //                 }\r\n    //             }\r\n    //             const currentParam = crossSections.intervals[i];\r\n    //             for (let j = 0; j < section.p.length; ++j) {\r\n    //                 currentPoints[j].push(vec2.fromValues(currentParam, section.p[j][2]));\r\n    //             }\r\n    //         }\r\n    //         addOrAppend(currentCodes, currentPoints, currentLabels);\r\n    //         return { name: crossSections.centerLine, profiles };\r\n    //     }\r\n    // }\r\n}", "import type { ReadonlyMat4, ReadonlyVec3 } from \"gl-matrix\";\r\nimport { glMatrix, mat4, vec3 } from \"gl-matrix\";\r\nimport type { CylinderData, ProductData } from \"./brep\";\r\nimport {\r\n  cylinderCenterLine,\r\n  edgeToPointMeasureValues,\r\n  faceToPointMeasureValues,\r\n  getSegmentToSegmentMeasureValues,\r\n  getSegmentToEdgeMeasureValues,\r\n  getEdgeToEdgeMeasureValues,\r\n  getEdgeToFaceMeasureValues,\r\n  getFaceToFaceMeasureValues,\r\n  getSegmentToFaceMeasureValues,\r\n  segmentToPointMeasureValues,\r\n  evalCurve,\r\n} from \"./calculations\";\r\nimport { unitToScale, matFromInstance, GeometryFactory, createGeometryFactory } from \"./loader\";\r\nimport { getBrepEdges, getBrepFaces, getEdgeStrip, type PathInfo } from \"./outline\";\r\nimport { Downloader, getProfile, reduceLineStrip, swapCylinderImpl, } from \"./util\";\r\nimport { type ParametricProduct, toParametricProduct } from \"./parametric_product\";\r\nimport {\r\n  addCenterLinesFromCylinders,\r\n  centerLinesToLinesTrip,\r\n  getCurveSegmentProfile,\r\n  getCylinderProfile,\r\n  reduceProfile,\r\n} from \"./profile\";\r\nimport {\r\n  extractCameraValuesFromFace,\r\n  extractCurveValues,\r\n  extractFaceValues,\r\n} from \"./extract_values\";\r\nimport { manholeMeasure } from \"./manhole\";\r\nimport { getCylinderDrawParts, getManholeDrawObjects, getSurfaceDrawParts } from \"./draw_objects\";\r\nimport { getFaceToFaceCollisionValues } from \"./collision\";\r\nimport { getPickInterface, pick, type PickInterface } from \"./snaps\";\r\nimport { RoadTool } from \"./roads/scene\";\r\nimport type { CameraValues, CollisionValues, CrossSlope, DrawObject, DrawPart, DuoMeasurementValues, EdgeValues, FaceValues, LoadStatus, ManholeMeasureValues, MeasureEntity, MeasureSettings, ObjectId, ParameterBounds, Profile, RoadCrossSection, RoadProfiles, SnapTolerance } from \"measure\";\r\n\r\nglMatrix.setMatrixArrayType(Array);\r\nexport const epsilon = 0.0001;\r\n\r\nexport class MeasureTool {\r\n  downloader: Downloader = undefined!;\r\n  crossSectionTool: RoadTool = undefined!;\r\n  data = new Map<ObjectId, ProductData | null>();\r\n  snapObjects = new Array<PickInterface>();\r\n  nextSnapIdx = 0;\r\n  static geometryFactory: GeometryFactory = undefined!;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  async init(wasm: string | ArrayBuffer) {\r\n    MeasureTool.geometryFactory = await createGeometryFactory(wasm);\r\n  }\r\n\r\n  loadScene(baseUrl: string) {\r\n    const brepUrl = new URL(baseUrl);\r\n    brepUrl.pathname += \"brep/\";\r\n    this.downloader = new Downloader(brepUrl);\r\n    this.crossSectionTool = new RoadTool(new URL(baseUrl));\r\n    this.data.clear();\r\n    this.snapObjects.length = 0;\r\n  }\r\n\r\n  async getSnapInterface(id: number, product: ProductData | undefined): Promise<PickInterface | undefined> {\r\n    for (const pickInterface of this.snapObjects) {\r\n      if (pickInterface.objectId == id) {\r\n        return pickInterface;\r\n      }\r\n    }\r\n    if (product) {\r\n      if (this.nextSnapIdx == 6) {\r\n        this.nextSnapIdx = 0;\r\n      }\r\n      const snapInterface = await getPickInterface(product, id);\r\n      this.snapObjects[this.nextSnapIdx++] = snapInterface;\r\n      return snapInterface;\r\n    }\r\n  }\r\n\r\n  async downloadBrep(name: string): Promise<ProductData | null> {\r\n    try {\r\n      return await this.downloader.downloadJson(name);\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private async getProduct(\r\n    id: ObjectId\r\n  ): Promise<ProductData | undefined> {\r\n    let product = this.data.get(id);\r\n    if (product === undefined) {\r\n      product = await this.downloadBrep(`${id}.json`);\r\n      if (product && product.instances === undefined) {\r\n        this.data.set(id, null);\r\n        return undefined;\r\n      }\r\n      this.data.set(id, product);\r\n    }\r\n    return product ?? undefined;\r\n  }\r\n\r\n  async getCameraValuesFromFace(\r\n    id: ObjectId,\r\n    faceIdx: number,\r\n    instanceIdx: number,\r\n    cameraDir: vec3\r\n  ): Promise<CameraValues | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      return extractCameraValuesFromFace(\r\n        product,\r\n        faceIdx,\r\n        instanceIdx,\r\n        cameraDir\r\n      );\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async getFaces(\r\n    id: ObjectId,\r\n    viewWorldMatrix: ReadonlyMat4\r\n  ): Promise<PathInfo[]> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      const worldViewMatrix = mat4.create();\r\n      mat4.invert(worldViewMatrix, viewWorldMatrix);\r\n      const faces = MeasureTool.geometryFactory.getFaces(product);\r\n      const paths = getBrepFaces(faces, worldViewMatrix).filter(\r\n        (p) => p.path.length > 0\r\n      );\r\n      paths.sort((a, b) => a.centerDepth - b.centerDepth);\r\n      return paths;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async getProductObject(\r\n    productId: number\r\n  ): Promise<ParametricProduct | undefined> {\r\n    const product = await this.getProduct(productId);\r\n    if (product) {\r\n      return toParametricProduct(productId, product);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async getSnaps(productId: number) {\r\n    const product = await this.getProduct(productId);\r\n    if (product) {\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async getParameterBoundsForCurve(\r\n    id: ObjectId,\r\n    pathIdx: number,\r\n    pathKind: \"edge\" | \"curveSegment\"\r\n  ): Promise<ParameterBounds | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      const parameterData =\r\n        pathKind == \"edge\"\r\n          ? product.edges[pathIdx]\r\n          : product.curveSegments[pathIdx];\r\n      const scale = unitToScale(product.units);\r\n      return {\r\n        start: parameterData.parameterBounds[0] * scale,\r\n        end: parameterData.parameterBounds[1] * scale,\r\n      };\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async evalCurve(\r\n    id: ObjectId,\r\n    pathIdx: number,\r\n    instanceIdx: number,\r\n    parameter: number,\r\n    pathKind: \"edge\" | \"curveSegment\"\r\n  ): Promise<[ReadonlyVec3, ReadonlyVec3] | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      return evalCurve(product, pathIdx, instanceIdx, parameter, pathKind);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async getCylinderCurve(\r\n    id: ObjectId,\r\n    faceIdx: number,\r\n    instanceIdx: number,\r\n    setting?: MeasureSettings\r\n  ): Promise<[ParameterBounds, [ReadonlyVec3, ReadonlyVec3]] | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      const faceData = product.faces[faceIdx];\r\n      const scale = unitToScale(product.units);\r\n      const surfaceData = product.surfaces[faceData.surface];\r\n      const surface = MeasureTool.geometryFactory.getSurface(\r\n        surfaceData,\r\n        faceData.facing,\r\n        scale\r\n      );\r\n      if (surface.kind == \"cylinder\") {\r\n        const cylinderData = surfaceData as CylinderData;\r\n        const mat = matFromInstance(product.instances[instanceIdx]);\r\n        const [cylinderOrigo, cylinderEnd] = await cylinderCenterLine(\r\n          product,\r\n          faceData,\r\n          cylinderData,\r\n          mat,\r\n          setting ? setting.cylinderMeasure : \"center\"\r\n        );\r\n        return [\r\n          { start: 0, end: vec3.dist(cylinderOrigo, cylinderEnd) },\r\n          [cylinderOrigo, cylinderEnd],\r\n        ];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  async pickEntity(id: ObjectId, position: vec3, tolerance?: SnapTolerance):\r\n    Promise<{ entity: MeasureEntity, status: LoadStatus, connectionPoint?: vec3 }> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      const snapInterface = await this.getSnapInterface(id, product);\r\n      if (snapInterface) {\r\n        const tol = tolerance ?? { edge: 0.032, segment: 0.12, face: 0.07, point: 0.032 };\r\n        const pickedEntity = pick(snapInterface, position, tol);\r\n        if (pickedEntity) {\r\n          return { entity: pickedEntity.entity, status: \"loaded\", connectionPoint: pickedEntity.connectionPoint };\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      entity: { ObjectId: id, parameter: position, drawKind: \"vertex\" }, status: \"missing\"\r\n    };\r\n  }\r\n\r\n  async pickEntityOnCurrentObject(id: ObjectId, position: vec3, tolerance: SnapTolerance):\r\n    Promise<{ entity: MeasureEntity | undefined, status: LoadStatus, connectionPoint?: vec3 }> {\r\n    const product = this.data.get(id);\r\n    if (product === null) {\r\n      return {\r\n        entity: undefined, status: \"missing\"\r\n      }\r\n    }\r\n    const snapInterface = await this.getSnapInterface(id, undefined);\r\n    if (snapInterface) {\r\n      const p = pick(snapInterface, position, tolerance);\r\n      return { entity: p?.entity, status: \"loaded\", connectionPoint: p?.connectionPoint };\r\n    }\r\n    return {\r\n      entity: undefined, status: \"unknown\"\r\n    }\r\n  }\r\n\r\n  async getEdges(\r\n    id: ObjectId,\r\n    viewWorldMatrix: ReadonlyMat4\r\n  ): Promise<PathInfo[]> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      const worldViewMatrix = mat4.create();\r\n      mat4.invert(worldViewMatrix, viewWorldMatrix);\r\n      const edges = MeasureTool.geometryFactory.getEdges(product);\r\n      const paths = getBrepEdges(edges, worldViewMatrix).filter(\r\n        (p) => p.path.length > 0\r\n      );\r\n      return paths;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async getPaths(\r\n    id: ObjectId,\r\n    worldViewMatrix: ReadonlyMat4\r\n  ): Promise<PathInfo[]> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      const faces = MeasureTool.geometryFactory.getFaces(product);\r\n      const facePaths = getBrepFaces(faces, worldViewMatrix).filter(\r\n        (p) => p.path.length > 0\r\n      );\r\n      facePaths.sort((a, b) => a.centerDepth - b.centerDepth);\r\n      const edges = MeasureTool.geometryFactory.getEdges(product);\r\n      const edgePaths = getBrepEdges(edges, worldViewMatrix).filter(\r\n        (p) => p.path.length > 0\r\n      );\r\n\r\n      return [...facePaths, ...edgePaths];\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async viableFollowPathEntity(\r\n    id: ObjectId\r\n  ): Promise<MeasureEntity | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      if (product.curveSegments && product.curveSegments.length > 0) {\r\n        if (product.curveSegments.length === 1) {\r\n          return {\r\n            ObjectId: id,\r\n            drawKind: \"curveSegment\",\r\n            pathIndex: 0,\r\n            instanceIndex: 0,\r\n            parameter: 0,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async getTesselatedEdge(\r\n    id: ObjectId,\r\n    edgeIdx: number,\r\n    instanceIdx: number\r\n  ): Promise<ReadonlyVec3[]> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      const edgeCurve = MeasureTool.geometryFactory.getCurve3DFromEdge(\r\n        product,\r\n        edgeIdx\r\n      );\r\n      if (edgeCurve) {\r\n        const edge = {\r\n          curve: edgeCurve,\r\n          geometryTransformation: matFromInstance(\r\n            product.instances[instanceIdx]\r\n          ),\r\n          instanceIndex: instanceIdx,\r\n        };\r\n        return getEdgeStrip(edge, 1);\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async tesselateCurveSegment(\r\n    id: ObjectId,\r\n    curveSegmentIdx: number,\r\n    instanceIdx: number\r\n  ): Promise<ReadonlyVec3[]> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      const curveSeg = MeasureTool.geometryFactory.getCurve3DFromSegment(\r\n        product,\r\n        curveSegmentIdx\r\n      );\r\n      if (curveSeg) {\r\n        const curve = {\r\n          curve: curveSeg,\r\n          geometryTransformation: matFromInstance(\r\n            product.instances[instanceIdx]\r\n          ),\r\n          instanceIndex: instanceIdx,\r\n        };\r\n        return getEdgeStrip(curve, 1);\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async curveSegmentProfile(\r\n    id: ObjectId,\r\n    curveSegmentIdx: number,\r\n    instanceIdx: number\r\n  ): Promise<Profile | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      const curveSeg = MeasureTool.geometryFactory.getCurve3DFromSegment(\r\n        product,\r\n        curveSegmentIdx\r\n      );\r\n      if (curveSeg) {\r\n        return getCurveSegmentProfile(product, curveSeg, instanceIdx);\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async cylinderProfile(\r\n    id: ObjectId,\r\n    faceIdx: number,\r\n    instanceIdx: number,\r\n    setting?: MeasureSettings\r\n  ): Promise<Profile | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      return await getCylinderProfile(product, faceIdx, instanceIdx, setting);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async multiSelectProfile(\r\n    products: ObjectId[],\r\n    setting?: MeasureSettings\r\n  ): Promise<Profile | undefined | string> {\r\n    const centerLines: {\r\n      start: ReadonlyVec3;\r\n      end: ReadonlyVec3;\r\n      radius: number;\r\n      prev: number | undefined;\r\n      next: number | undefined;\r\n    }[] = [];\r\n    for (const id of products) {\r\n      const product = await this.getProduct(id);\r\n      if (product) {\r\n        if (product.curveSegments && product.curveSegments.length > 0) {\r\n          if (product.curveSegments.length === 1 && products.length === 1) {\r\n            const segProfile = await this.curveSegmentProfile(id, 0, 0);\r\n            if (segProfile) {\r\n              return segProfile;\r\n            }\r\n          } else {\r\n            return \"Multiple segments in profile\";\r\n          }\r\n        }\r\n\r\n        await addCenterLinesFromCylinders(\r\n          product,\r\n          centerLines,\r\n          unitToScale(product.units),\r\n          setting\r\n        );\r\n      }\r\n    }\r\n\r\n    const lineStrip = reduceLineStrip(centerLinesToLinesTrip(centerLines));\r\n    if (lineStrip.length > 1) {\r\n      const profile = getProfile(lineStrip, undefined, undefined);\r\n      return reduceProfile(profile);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async getLineStripFromCylinders(\r\n    products: ObjectId[],\r\n    setting?: MeasureSettings\r\n  ) {\r\n    const lineStrip = await this.cylindersToLinestrip(products, setting);\r\n    for (const p of lineStrip) {\r\n    }\r\n    return lineStrip;\r\n  }\r\n\r\n  async cylindersToLinestrip(\r\n    products: ObjectId[],\r\n    setting?: MeasureSettings\r\n  ): Promise<ReadonlyVec3[]> {\r\n    const centerLines: {\r\n      start: ReadonlyVec3;\r\n      end: ReadonlyVec3;\r\n      radius: number;\r\n      prev: number | undefined;\r\n      next: number | undefined;\r\n    }[] = [];\r\n    for (const id of products) {\r\n      const product = await this.getProduct(id);\r\n      if (product) {\r\n        await addCenterLinesFromCylinders(\r\n          product,\r\n          centerLines,\r\n          unitToScale(product.units),\r\n          setting\r\n        );\r\n      }\r\n    }\r\n    return reduceLineStrip(centerLinesToLinesTrip(centerLines));\r\n  }\r\n\r\n  async getFaceDrawObject(\r\n    id: ObjectId,\r\n    faceIdx: number,\r\n    instanceIdx: number,\r\n    setting?: MeasureSettings\r\n  ): Promise<DrawObject | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      const face = product.faces[faceIdx];\r\n      const surface = product.surfaces[face.surface];\r\n      let drawParts: DrawPart[] = [];\r\n      const kind = surface.kind == \"cylinder\" ? \"cylinder\" : \"plane\";\r\n      if (surface.kind == \"cylinder\") {\r\n        drawParts = await getCylinderDrawParts(product, instanceIdx, surface as CylinderData, face, setting);\r\n      } else {\r\n        drawParts = await getSurfaceDrawParts(product, instanceIdx, face);\r\n      }\r\n      return { kind, parts: drawParts };\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async edgeToEdgeMeasure(\r\n    idA: ObjectId,\r\n    edgeIdxA: number,\r\n    instanceIdxA: number,\r\n    idB: ObjectId,\r\n    edgeIdxB: number,\r\n    instanceIdxB: number\r\n  ): Promise<DuoMeasurementValues | undefined> {\r\n    const productA = await this.getProduct(idA);\r\n    const productB = await this.getProduct(idB);\r\n    if (productA && productB) {\r\n      return await getEdgeToEdgeMeasureValues(\r\n        productA,\r\n        edgeIdxA,\r\n        instanceIdxA,\r\n        productB,\r\n        edgeIdxB,\r\n        instanceIdxB\r\n      );\r\n    }\r\n  }\r\n\r\n  async edgeToPointMeasure(\r\n    id: ObjectId,\r\n    edgeIdx: number,\r\n    instanceIdx: number,\r\n    point: vec3\r\n  ): Promise<DuoMeasurementValues | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      return await edgeToPointMeasureValues(\r\n        product,\r\n        edgeIdx,\r\n        instanceIdx,\r\n        point\r\n      );\r\n    }\r\n  }\r\n\r\n  async segmentToPointMeasure(\r\n    id: ObjectId,\r\n    segIdx: number,\r\n    instanceIdx: number,\r\n    point: vec3\r\n  ): Promise<DuoMeasurementValues | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      return await segmentToPointMeasureValues(\r\n        product,\r\n        segIdx,\r\n        instanceIdx,\r\n        point\r\n      );\r\n    }\r\n  }\r\n\r\n  async faceToPointMeasure(\r\n    id: ObjectId,\r\n    faceIdx: number,\r\n    instanceIdx: number,\r\n    point: vec3,\r\n    setting?: MeasureSettings\r\n  ): Promise<DuoMeasurementValues | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      return await faceToPointMeasureValues(\r\n        product,\r\n        faceIdx,\r\n        instanceIdx,\r\n        point,\r\n        unitToScale(product.units),\r\n        setting\r\n      );\r\n    }\r\n  }\r\n\r\n  async edgeToFaceMeasure(\r\n    idA: ObjectId,\r\n    edgeIdx: number,\r\n    edgeInstanceIdx: number,\r\n    idB: ObjectId,\r\n    faceIdx: number,\r\n    faceInstanceIdx: number,\r\n    setting?: MeasureSettings\r\n  ): Promise<DuoMeasurementValues | undefined> {\r\n    const productA = await this.getProduct(idA);\r\n    const productB = await this.getProduct(idB);\r\n    if (productA && productB) {\r\n      return await getEdgeToFaceMeasureValues(\r\n        productA,\r\n        edgeIdx,\r\n        edgeInstanceIdx,\r\n        productB,\r\n        faceIdx,\r\n        faceInstanceIdx,\r\n        setting\r\n      );\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async faceToFaceMeasure(\r\n    idA: ObjectId,\r\n    faceIdxA: number,\r\n    instanceIdxA: number,\r\n    idB: ObjectId,\r\n    faceIdxB: number,\r\n    instanceIdxB: number,\r\n    settingA?: MeasureSettings,\r\n    settingB?: MeasureSettings\r\n  ): Promise<DuoMeasurementValues | undefined> {\r\n    const productA = await this.getProduct(idA);\r\n    const productB = await this.getProduct(idB);\r\n    if (productA && productB) {\r\n      return await getFaceToFaceMeasureValues(\r\n        productA,\r\n        faceIdxA,\r\n        instanceIdxA,\r\n        productB,\r\n        faceIdxB,\r\n        instanceIdxB,\r\n        settingA,\r\n        settingB\r\n      );\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async segmentToSegmentMeasure(\r\n    idA: ObjectId,\r\n    segIdxA: number,\r\n    instanceIdxA: number,\r\n    idB: ObjectId,\r\n    segIdxB: number,\r\n    instanceIdxB: number\r\n  ): Promise<DuoMeasurementValues | undefined> {\r\n    const productA = await this.getProduct(idA);\r\n    const productB = await this.getProduct(idB);\r\n    if (productA && productB) {\r\n      return await getSegmentToSegmentMeasureValues(\r\n        productA,\r\n        segIdxA,\r\n        instanceIdxA,\r\n        productB,\r\n        segIdxB,\r\n        instanceIdxB\r\n      );\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async segmentToEdgeMeasure(\r\n    idA: ObjectId,\r\n    segIdx: number,\r\n    segInstanceIdx: number,\r\n    idB: ObjectId,\r\n    edgeIdx: number,\r\n    edgeInstanceIdx: number\r\n  ): Promise<DuoMeasurementValues | undefined> {\r\n    const productA = await this.getProduct(idA);\r\n    const productB = await this.getProduct(idB);\r\n    if (productA && productB) {\r\n      return await getSegmentToEdgeMeasureValues(\r\n        productA,\r\n        segIdx,\r\n        segInstanceIdx,\r\n        productB,\r\n        edgeIdx,\r\n        edgeInstanceIdx\r\n      );\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async segmentToFaceMeasure(\r\n    idA: ObjectId,\r\n    segIdx: number,\r\n    segInstanceIdx: number,\r\n    idB: ObjectId,\r\n    faceIdx: number,\r\n    faceInstanceIdx: number,\r\n    setting?: MeasureSettings\r\n  ): Promise<DuoMeasurementValues | undefined> {\r\n    const productA = await this.getProduct(idA);\r\n    const productB = await this.getProduct(idB);\r\n    if (productA && productB) {\r\n      return await getSegmentToFaceMeasureValues(\r\n        productA,\r\n        segIdx,\r\n        segInstanceIdx,\r\n        productB,\r\n        faceIdx,\r\n        faceInstanceIdx,\r\n        setting\r\n      );\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async getCurveValues(\r\n    id: ObjectId,\r\n    pathIdx: number,\r\n    instanceIdx: number,\r\n    pathKind: \"edge\" | \"curveSegment\"\r\n  ): Promise<EdgeValues | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      return extractCurveValues(product, pathIdx, instanceIdx, pathKind);\r\n    }\r\n  }\r\n\r\n  async getFaceValues(\r\n    id: ObjectId,\r\n    faceIdx: number,\r\n    instanceIdx: number,\r\n    setting?: MeasureSettings\r\n  ): Promise<FaceValues | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      return extractFaceValues(id, product, faceIdx, instanceIdx, setting);\r\n    }\r\n  }\r\n\r\n  async getManholeValues(id: ObjectId): Promise<ManholeMeasureValues | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      return manholeMeasure(product, id);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async getManholeDrawObject(entity: ManholeMeasureValues) {\r\n    const product = await this.getProduct(entity.ObjectId);\r\n    if (product) {\r\n      return getManholeDrawObjects(product, entity);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async swapCylinder(\r\n    id: ObjectId,\r\n    faceIdx: number,\r\n    instanceIdx: number,\r\n    to: \"inner\" | \"outer\"\r\n  ): Promise<number | undefined> {\r\n    const product = await this.getProduct(id);\r\n    if (product) {\r\n      return swapCylinderImpl(product, faceIdx, instanceIdx, to);\r\n    }\r\n  }\r\n\r\n  async faceToFaceCollision(\r\n    idA: ObjectId,\r\n    faceIdxA: number,\r\n    instanceIdxA: number,\r\n    idB: ObjectId,\r\n    faceIdxB: number,\r\n    instanceIdxB: number,\r\n    setting?: MeasureSettings\r\n  ): Promise<CollisionValues | undefined> {\r\n    const productA = await this.getProduct(idA);\r\n    const productB = await this.getProduct(idB);\r\n    if (productA && productB) {\r\n      return await getFaceToFaceCollisionValues(\r\n        productA,\r\n        faceIdxA,\r\n        instanceIdxA,\r\n        productB,\r\n        faceIdxB,\r\n        instanceIdxB,\r\n        setting\r\n      );\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //Road stuff\r\n  async getRoadProfile(roadId: string): Promise<RoadProfiles | undefined> {\r\n    return await this.crossSectionTool.getRoadProfiles(roadId);\r\n  }\r\n\r\n  async getRoadCrossSlope(roadId: string): Promise<CrossSlope | undefined> {\r\n    return await this.crossSectionTool.getCrossSlope(roadId);\r\n  }\r\n\r\n  async getCrossSection(roadId: string, profileNumber: number): Promise<RoadCrossSection | undefined> {\r\n    return await this.crossSectionTool.getCrossSection(roadId, profileNumber);\r\n  }\r\n}\r\n", "import * as Comlink from \"comlink\";\r\nimport { MeasureTool } from \"./scene\";\r\n\r\nclass Service {\r\n    scriptUrl: string | undefined;\r\n\r\n    initialize(scriptUrl: string) {\r\n        this.scriptUrl = scriptUrl;\r\n    }\r\n\r\n    terminate() {\r\n        if (\"DedicatedWorkerGlobalScope\" in self) {\r\n            self.close();\r\n        }\r\n    }\r\n\r\n    createMeasureTool() {\r\n        const tool = new MeasureTool();\r\n        return Comlink.proxy(tool);\r\n    }\r\n}\r\n\r\nconst service = new Service();\r\nComlink.expose(service);\r\n\r\nexport type { Service };\r\n"],
  "mappings": "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",
  "names": ["origin", "obj", "returnValue", "proxy", "equals", "scale", "equals", "add", "adjoint", "clone", "copy", "create", "determinant", "equals", "exactEquals", "frob", "fromQuat", "fromRotation", "fromScaling", "fromTranslation", "fromValues", "identity", "invert", "mul", "multiply", "multiplyScalar", "multiplyScalarAndAdd", "rotate", "scale", "set", "str", "sub", "subtract", "translate", "transpose", "create", "clone", "copy", "fromValues", "set", "identity", "transpose", "invert", "adjoint", "determinant", "multiply", "translate", "scale", "rotate", "len", "fromTranslation", "fromScaling", "fromRotation", "fromQuat", "str", "frob", "add", "subtract", "multiplyScalar", "multiplyScalarAndAdd", "exactEquals", "equals", "mul", "sub", "add", "clone", "copy", "create", "equals", "exactEquals", "fromValues", "mul", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "set", "str", "sub", "subtract", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "scale", "len", "rotateX", "rotateY", "rotateZ", "str", "exactEquals", "equals", "sub", "mul", "add", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat4", "transformQuat", "zero", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "divide", "ceil", "floor", "min", "max", "round", "scale", "scaleAndAdd", "distance", "squaredDistance", "length", "squaredLength", "negate", "inverse", "normalize", "len", "dot", "cross", "lerp", "random", "transformMat4", "transformQuat", "zero", "str", "exactEquals", "equals", "sub", "mul", "div", "dist", "sqrDist", "sqrLen", "forEach", "add", "angle", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "rotate", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat3", "transformMat4", "zero", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "divide", "ceil", "floor", "min", "max", "round", "scale", "scaleAndAdd", "distance", "squaredDistance", "length", "squaredLength", "negate", "inverse", "normalize", "len", "dot", "cross", "lerp", "random", "transformMat3", "transformMat4", "rotate", "angle", "zero", "str", "exactEquals", "equals", "sub", "mul", "div", "dist", "sqrDist", "sqrLen", "forEach", "degree", "dist", "origin", "direction", "tmp3", "scale", "tmp3", "scale", "origin", "direction", "h", "Module", "err", "str", "ret", "len", "buffer", "max", "asm", "exports", "length", "origin", "direction", "min", "max", "scale", "projectedPoint", "len", "dist", "origin", "direction", "len", "projectedPoint", "epsilon", "scale", "distance", "projectedPoint", "dot", "angle", "negate", "epsilon", "addEdge", "v0", "v1", "triangles", "vi", "epsilon", "v", "i", "polygonWinding", "endPath", "x", "y", "value", "dist", "scale", "loop", "epsilon", "position", "scale", "faceFunc", "add", "dist", "len", "faceFuncPlane", "scale", "faceFuncCylinder", "len", "length", "epsilon", "loop", "text", "angle", "faceFunc", "faces", "edges", "dist", "actualDistance", "right", "epsilon", "scale"]
}
