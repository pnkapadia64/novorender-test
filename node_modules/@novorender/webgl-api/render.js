const e=Symbol("Comlink.proxy"),t=Symbol("Comlink.endpoint"),n=Symbol("Comlink.releaseProxy"),o=Symbol("Comlink.thrown"),r=e=>"object"==typeof e&&null!==e||"function"==typeof e,i=new Map([["proxy",{canHandle:t=>r(t)&&t[e],serialize(e){const{port1:t,port2:n}=new MessageChannel;return a(e,t),[n,[n]]},deserialize:e=>(e.start(),c(e,[],undefined))}],["throw",{canHandle:e=>r(e)&&o in e,serialize({value:e}){let t;return t=e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[t,[]]},deserialize(e){if(e.isError)throw Object.assign(new Error(e.value.message),e.value);throw e.value}}]]);function a(e,t=self){t.addEventListener("message",(function n(r){if(!r||!r.data)return;const{id:i,type:l,path:c}=Object.assign({path:[]},r.data),f=(r.data.argumentList||[]).map(x);let u;try{const t=c.slice(0,-1).reduce(((e,t)=>e[t]),e),n=c.reduce(((e,t)=>e[t]),e);switch(l){case"GET":u=n;break;case"SET":t[c.slice(-1)[0]]=x(r.data.value),u=!0;break;case"APPLY":u=n.apply(t,f);break;case"CONSTRUCT":u=m(new n(...f));break;case"ENDPOINT":{const{port1:t,port2:n}=new MessageChannel;a(e,n),u=d(t,[t])}break;case"RELEASE":u=void 0;break;default:return}}catch(e){u={value:e,[o]:0}}Promise.resolve(u).catch((e=>({value:e,[o]:0}))).then((e=>{const[o,r]=p(e);t.postMessage(Object.assign(Object.assign({},o),{id:i}),r),"RELEASE"===l&&(t.removeEventListener("message",n),s(t))}))})),t.start&&t.start()}function s(e){(function(e){return"MessagePort"===e.constructor.name})(e)&&e.close()}function l(e){if(e)throw new Error("Proxy has been released and is not useable")}function c(e,o=[],r=function(){}){let i=!1;const a=new Proxy(r,{get(t,r){if(l(i),r===n)return()=>v(e,{type:"RELEASE",path:o.map((e=>e.toString()))}).then((()=>{s(e),i=!0}));if("then"===r){if(0===o.length)return{then:()=>a};const t=v(e,{type:"GET",path:o.map((e=>e.toString()))}).then(x);return t.then.bind(t)}return c(e,[...o,r])},set(t,n,r){l(i);const[a,s]=p(r);return v(e,{type:"SET",path:[...o,n].map((e=>e.toString())),value:a},s).then(x)},apply(n,r,a){l(i);const s=o[o.length-1];if(s===t)return v(e,{type:"ENDPOINT"}).then(x);if("bind"===s)return c(e,o.slice(0,-1));const[u,d]=f(a);return v(e,{type:"APPLY",path:o.map((e=>e.toString())),argumentList:u},d).then(x)},construct(t,n){l(i);const[r,a]=f(n);return v(e,{type:"CONSTRUCT",path:o.map((e=>e.toString())),argumentList:r},a).then(x)}});return a}function f(e){const t=e.map(p);return[t.map((e=>e[0])),(n=t.map((e=>e[1])),Array.prototype.concat.apply([],n))];var n}const u=new WeakMap;function d(e,t){return u.set(e,t),e}function m(t){return Object.assign(t,{[e]:!0})}function p(e){for(const[t,n]of i)if(n.canHandle(e)){const[o,r]=n.serialize(e);return[{type:"HANDLER",name:t,value:o},r]}return[{type:"RAW",value:e},u.get(e)||[]]}function x(e){switch(e.type){case"HANDLER":return i.get(e.name).deserialize(e.value);case"RAW":return e.value}}function v(e,t,n){return new Promise((o=>{const r=new Array(4).fill(0).map((()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16))).join("-");e.addEventListener("message",(function t(n){n.data&&n.data.id&&n.data.id===r&&(e.removeEventListener("message",t),o(n.data))})),e.start&&e.start(),e.postMessage(Object.assign({id:r},t),n)}))}var h="undefined"!=typeof Float32Array?Float32Array:Array;function g(){var e=new h(9);return h!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[5]=0,e[6]=0,e[7]=0),e[0]=1,e[4]=1,e[8]=1,e}function _(e,t){var n=t[0],o=t[1],r=t[2],i=t[3],a=t[4],s=t[5],l=t[6],c=t[7],f=t[8],u=t[9],d=t[10],m=t[11],p=t[12],x=t[13],v=t[14],h=t[15],g=n*s-o*a,_=n*l-r*a,b=n*c-i*a,E=o*l-r*s,C=o*c-i*s,R=r*c-i*l,D=f*x-u*p,N=f*v-d*p,M=f*h-m*p,S=u*v-d*x,y=u*h-m*x,T=d*h-m*v,w=g*T-_*y+b*S+E*M-C*N+R*D;return w?(w=1/w,e[0]=(s*T-l*y+c*S)*w,e[1]=(l*M-a*T-c*N)*w,e[2]=(a*y-s*M+c*D)*w,e[3]=(r*y-o*T-i*S)*w,e[4]=(n*T-r*M+i*N)*w,e[5]=(o*M-n*y-i*D)*w,e[6]=(x*R-v*C+h*E)*w,e[7]=(v*b-p*R-h*_)*w,e[8]=(p*C-x*b+h*g)*w,e):null}function b(){var e=new h(16);return h!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function E(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e}function C(e,t){if(e===t){var n=t[1],o=t[2],r=t[3],i=t[6],a=t[7],s=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=n,e[6]=t[9],e[7]=t[13],e[8]=o,e[9]=i,e[11]=t[14],e[12]=r,e[13]=a,e[14]=s}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e}function R(e,t){var n=t[0],o=t[1],r=t[2],i=t[3],a=t[4],s=t[5],l=t[6],c=t[7],f=t[8],u=t[9],d=t[10],m=t[11],p=t[12],x=t[13],v=t[14],h=t[15],g=n*s-o*a,_=n*l-r*a,b=n*c-i*a,E=o*l-r*s,C=o*c-i*s,R=r*c-i*l,D=f*x-u*p,N=f*v-d*p,M=f*h-m*p,S=u*v-d*x,y=u*h-m*x,T=d*h-m*v,w=g*T-_*y+b*S+E*M-C*N+R*D;return w?(w=1/w,e[0]=(s*T-l*y+c*S)*w,e[1]=(r*y-o*T-i*S)*w,e[2]=(x*R-v*C+h*E)*w,e[3]=(d*C-u*R-m*E)*w,e[4]=(l*M-a*T-c*N)*w,e[5]=(n*T-r*M+i*N)*w,e[6]=(v*b-p*R-h*_)*w,e[7]=(f*R-d*b+m*_)*w,e[8]=(a*y-s*M+c*D)*w,e[9]=(o*M-n*y-i*D)*w,e[10]=(p*C-x*b+h*g)*w,e[11]=(u*b-f*C-m*g)*w,e[12]=(s*N-a*S-l*D)*w,e[13]=(n*S-o*N+r*D)*w,e[14]=(x*_-p*E-v*g)*w,e[15]=(f*E-u*_+d*g)*w,e):null}function D(e,t,n){var o=t[0],r=t[1],i=t[2],a=t[3],s=t[4],l=t[5],c=t[6],f=t[7],u=t[8],d=t[9],m=t[10],p=t[11],x=t[12],v=t[13],h=t[14],g=t[15],_=n[0],b=n[1],E=n[2],C=n[3];return e[0]=_*o+b*s+E*u+C*x,e[1]=_*r+b*l+E*d+C*v,e[2]=_*i+b*c+E*m+C*h,e[3]=_*a+b*f+E*p+C*g,_=n[4],b=n[5],E=n[6],C=n[7],e[4]=_*o+b*s+E*u+C*x,e[5]=_*r+b*l+E*d+C*v,e[6]=_*i+b*c+E*m+C*h,e[7]=_*a+b*f+E*p+C*g,_=n[8],b=n[9],E=n[10],C=n[11],e[8]=_*o+b*s+E*u+C*x,e[9]=_*r+b*l+E*d+C*v,e[10]=_*i+b*c+E*m+C*h,e[11]=_*a+b*f+E*p+C*g,_=n[12],b=n[13],E=n[14],C=n[15],e[12]=_*o+b*s+E*u+C*x,e[13]=_*r+b*l+E*d+C*v,e[14]=_*i+b*c+E*m+C*h,e[15]=_*a+b*f+E*p+C*g,e}Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});var N=D;function M(){var e=new h(3);return h!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function S(e,t,n){var o=new h(3);return o[0]=e,o[1]=t,o[2]=n,o}function y(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e}function T(e,t){var n=t[0],o=t[1],r=t[2],i=n*n+o*o+r*r;return i>0&&(i=1/Math.sqrt(i)),e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e}function w(){var e=new h(4);return h!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function L(e,t,n,o){var r=new h(4);return r[0]=e,r[1]=t,r[2]=n,r[3]=o,r}function I(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}function O(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e}function V(e,t,n){var o=t[0],r=t[1],i=t[2],a=t[3];return e[0]=n[0]*o+n[4]*r+n[8]*i+n[12]*a,e[1]=n[1]*o+n[5]*r+n[9]*i+n[13]*a,e[2]=n[2]*o+n[6]*r+n[10]*i+n[14]*a,e[3]=n[3]*o+n[7]*r+n[11]*i+n[15]*a,e}function P(){var e=new h(4);return h!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function A(e,t){var n=new h(2);return n[0]=e,n[1]=t,n}M(),w(),M(),S(1,0,0),S(0,1,0),P(),P(),g(),function(){var e;e=new h(2),h!=Float32Array&&(e[0]=0,e[1]=0)}();class U{gl;webGLExtensions;visible;primitiveType;indexCount;indexType;textures;modelWorldMatrix;uniforms;vertexBuffer;indexBuffer;drawElements;constructor(e,t,n,o,r,i,a,s,l,c){this.gl=e,this.webGLExtensions=t,this.visible=n,this.primitiveType=o,this.indexCount=r,this.indexType=i,this.textures=l,this.modelWorldMatrix=c;const f=e.createBuffer();if(!f)throw new Error("Could not create vertex buffer!");e.bindBuffer(34962,f),e.bufferData(34962,a,35044);let u=null;if(s){if(u=e.createBuffer(),!u)throw new Error("Could not create index buffer!");e.bindBuffer(34963,u),e.bufferData(34963,s,35044)}this.vertexBuffer=f,this.indexBuffer=u}triangleCount(){if(0===this.primitiveType)return 0;let e=this.indexCount;if(this.drawElements?.counts.length){e=0;for(const t of this.drawElements.counts)e+=t}switch(this.primitiveType){case 4:e/=3;break;case 5:case 6:e-=2;break;case 1:e/=2}return e}pointsCount(){if(0===this.primitiveType){if(this.drawElements?.counts.length){let e=0;for(const t of this.drawElements.counts)e+=t;return e}return this.indexCount}return 0}bind(){const{gl:e,indexBuffer:t,vertexBuffer:n}=this;e.bindBuffer(34963,t),e.bindBuffer(34962,n)}draw(){const{gl:e,indexCount:t,primitiveType:n,indexType:o}=this;if(o){const{drawElements:r}=this;if(2===this.webGLExtensions.glVersion&&r?.counts.length){const{counts:e,offsets:t}=r,i=e.length;this.webGLExtensions.WEBGL_multi_draw.multiDrawElementsWEBGL(n,e,0,o,t,0,i)}else e.drawElements(n,t,o,0)}else 2===this.webGLExtensions.glVersion&&this.drawElements?.counts.length?this.webGLExtensions.WEBGL_multi_draw.multiDrawArraysWEBGL(n,this.drawElements.offsets,0,this.drawElements.counts,0,this.drawElements.counts.length):e.drawArrays(n,0,t)}dispose(){const{gl:e,indexBuffer:t,vertexBuffer:n}=this;e.bindBuffer(34963,null),e.bindBuffer(34962,null),e.deleteBuffer(t),e.deleteBuffer(n)}}class F{gl;webGLExtensions;kind;color;objectIndex;depth;normal;deviation;intensity;outline;_meshes=new Map;constructor(e,t,n,o,r,i,a,s,l,c){this.gl=e,this.webGLExtensions=t,this.kind=n,this.color=o,this.objectIndex=r,this.depth=i,this.normal=a,this.deviation=s,this.intensity=l,this.outline=c}createMesh(e,t,n,o,r,i,a,s,l){const c=new U(this.gl,this.webGLExtensions,n,t,o,r,i,a,s,l);this._meshes.set(e,c)}updateMesh(e,t){const n=this._meshes.get(e);if(n){const{visible:e,modelWorldMatrix:o,uniforms:r,drawElements:i}=t;void 0!==e&&(n.visible=e),o&&(n.modelWorldMatrix=o),r&&(n.uniforms=r),i&&(n.drawElements=i)}}deleteMesh(e){const t=this._meshes.get(e);t&&(this._meshes.delete(e),t.dispose())}update(e,t){e&&this.color.updateUniforms(e),t&&this.color.updateTextureReferences(t)}get count(){return this._meshes.size}get meshes(){return this._meshes.values()}dispose(){for(const e of this.meshes)e.dispose();this._meshes.clear()}}function B(e,t,n){const o=e.createShader(e[t]);if(!o)throw new Error("WebGL Shader could not be created.");if(e.shaderSource(o,n),e.compileShader(o),!e.getShaderParameter(o,35713)){const r=t.split("_")[0].toLocaleLowerCase(),i=e.getShaderInfoLog(o);throw n.split("\r\n"),new Error(`: Failed to compile glsl ${r} shader!\r\n${i}`)}return o}function G(e,t){const n=B(e,"VERTEX_SHADER",t.vertex),o=B(e,"FRAGMENT_SHADER",t.fragment),r=e.createProgram();if(!r)throw new Error("Could not create WebGL shader program!");if(e.attachShader(r,n),e.attachShader(r,o),e.linkProgram(r),e.detachShader(r,n),e.detachShader(r,o),e.deleteShader(n),e.deleteShader(o),!e.getProgramParameter(r,35714))throw new Error(`: Failed to compile link shaders!\r\n${e.getProgramInfoLog(r)}`);return r}const z={bool:function(e,t,n){e.uniform1f(t,n?1:0)},float:function(e,t,n){e.uniform1f(t,n)},int:function(e,t,n){e.uniform1i(t,n)},vec2:function(e,t,n){e.uniform2fv(t,n)},ivec2:function(e,t,n){e.uniform2iv(t,n)},vec3:function(e,t,n){e.uniform3fv(t,n)},ivec3:function(e,t,n){e.uniform3iv(t,n)},vec4:function(e,t,n){e.uniform4fv(t,n)},ivec4:function(e,t,n){e.uniform4iv(t,n)},mat2:function(e,t,n){e.uniformMatrix2fv(t,!1,n)},mat3:function(e,t,n){e.uniformMatrix3fv(t,!1,n)},mat4:function(e,t,n){e.uniformMatrix4fv(t,!1,n)}};function j(e,t,n){const o={};for(const r of Reflect.ownKeys(n)){if("string"!=typeof r)continue;const i=n[r];if(!i)continue;const[a,s,l]=i,c=e.getUniformLocation(t,a);if(c){const e=z[s];let t;o[r]={location:c,setter:e,defaultValue:l,currentValue:t}}}return{reset(){for(const e in o){const t=o[e];t.currentValue=t.defaultValue}},*check(){for(const e in o)null==o[e].currentValue&&(yield e)},set:t=>{for(const n in t)if(n in o){const r=o[n],{location:i,setter:a,defaultValue:s}=r,l=t[n]??s;void 0!==l&&i&&(a(e,i,l),r.currentValue=l)}}}}const H={type:3553,10240:9729,10241:9986,10242:10497,10243:10497},k={3042:!1,32773:new Float32Array([0,0,0,0]),32970:0,32968:0,34877:32774,32777:32774,32971:1,32969:1,2884:!1,2885:1029,2886:2305,2929:!1,2932:513,2930:!0,2928:new Float32Array([0,1]),3024:!0,32823:!1,32824:0,10752:0,32926:!1,32928:!1,32938:1,32939:!1,2960:!1,2962:519,2963:2147483647,2967:0,34816:519,36004:2147483647,36003:0};function W(e,t,n){function o(t){const o=n[t];return o?e.enable(t):e.disable(t),o}function r(o,...r){for(let i of r)if(t[i]!=n[i]){const t=r.map((e=>n[e]));o.apply(e,t);break}}o(3042),r((t=>{e.blendColor(...t)}),32773),r(e.blendEquationSeparate,32777,34877),r(e.blendFuncSeparate,32969,32968,32971,32970),o(2884),r(e.cullFace,2885),r(e.frontFace,2886),o(2929),r(e.depthFunc,2932),r(e.depthMask,2930),r((t=>e.depthRange(...t)),2928),o(3024),o(32823),r(e.polygonOffset,32824,10752),o(32926),o(32928),r(e.sampleCoverage,32938,32939),o(2960),r(((t,n,o)=>e.stencilFuncSeparate(e.FRONT,t,n,o)),2962,2967,2963),r(((t,n,o)=>e.stencilFuncSeparate(e.BACK,t,n,o)),34816,36003,36004)}function X(e,t){const n=[10240,10241,10242,10243],{type:o}=t;for(const r of n){const n=t[r];n&&e.texParameteri(o,r,n)}}function q(e){return!(e instanceof WebGLRenderingContext)}function Z(e){switch(e){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 33635:case 32819:case 32820:case 5131:case 36193:return Uint16Array;case 5125:case 34042:case 35902:case 33640:case 35899:return Uint32Array;case 5124:return Int32Array;case 5126:return Float32Array}throw new Error(`Unknown buffer type: ${e}!`)}class Y{u;f;constructor(){this.f=new Float32Array(1),this.u=new Uint32Array(this.f.buffer)}}function J(e){const t=260046848,n=new Y;n.u[0]=113<<23;const o=new Y;o.u[0]=(32767&e)<<13;const r=t&o.u[0];return o.u[0]+=112<<23,r===t?o.u[0]+=112<<23:0==r&&(o.u[0]+=1<<23,o.f[0]-=n.f[0]),o.u[0]|=(32768&e)<<16,o.f[0]}class ${gl;extensions;program;defaultUniforms;uniforms;attributes;textureSlots;vertexLayout;textures;renderOrder;constructor(e,t,n){this.gl=e,this.extensions=t;const{shaders:o,vertexLayout:r,vertexSemanticNames:i,uniforms:a,webGL2:s}=n,l=[...o.flags??[]],{conditionalFlags:c}=o;if(c)for(const e in c){const n=e;if(t[n]){const e=c[n];e&&l.push(e)}}this.renderOrder=n.renderOrder??0;const f=function(e,t){let n=`#version ${e}\n`;for(const e of t)n+=`#define ${e}\n`;return n}(q(e)&&s?"300 es":"100",l),u=f+o.vertex,d=f+o.fragment,m={};for(const e in n.uniforms){const[t,o,r]=n.uniforms[e];void 0!==r&&Reflect.set(m,e,r)}this.defaultUniforms=m;const{textureSlots:p,images:x}=n,v={};if(p)for(let e=0;e<p.length;e++){const t=p[e],{textureSemantic:n,shaderUniform:o}=t;v[n]=[o,"int"]}if(x){const t={};for(let n in x){const o=x[n],r=e.createTexture();e.bindTexture(3553,r),e.texImage2D(3553,0,6408,6408,5121,o),e.bindTexture(3553,null),t[n]=r}e.bindTexture(3553,null),this.textures=t}const h=G(e,{vertex:u,fragment:d});this.uniforms=j(e,h,{...a,...v}),this.attributes=function(e,t,n,o){const r=function(e,t,n,o){const{stride:r}=n,i=[];for(const{semantic:a,components:s,type:l,normalize:c,byteOffset:f,defaultValue:u}of n.attributes){const n=o[a],d=n?e.getAttribLocation(t,n):void 0;null!=d&&-1!=d&&i.push({index:d,components:s,type:l,normalize:c,stride:r,byteOffset:f,defaultValue:u})}return i}(e,t,n,o);return{set:()=>{for(const{index:t,components:n,type:o,normalize:i,stride:a,byteOffset:s,defaultValue:l}of r){if(void 0!==l)if("number"==typeof l)e.vertexAttrib1f(t,l);else{const n=`vertexAttrib${l.length}fv`;e[n](t,l)}e.vertexAttribPointer(t,n,o,i,a,s),e.enableVertexAttribArray(t)}},reset:()=>{for(const{index:t}of r)e.disableVertexAttribArray(t)}}}(e,h,r,i),this.textureSlots=n.textureSlots??[],this.program=h,this.vertexLayout=r}}class K{gl;program;vertexLayout;renderOrder;uniformValues;textureUniforms={};attributes;uniforms;textureSlots;textureReferences;state=k;constructor(e,t,n){this.gl=e.gl,this.program=e.program,this.vertexLayout=e.vertexLayout,this.renderOrder=e.renderOrder,this.uniforms=e.uniforms,this.attributes=e.attributes,this.uniformValues={...e.defaultUniforms,...t};const{textureSlots:o}=e;for(let e=0;e<o.length;e++)this.textureUniforms[o[e].textureSemantic]=e;this.textureSlots=e.textureSlots,this.textureReferences=n??{}}get isAlpha(){return!0===this.state[3042]}updateUniforms(e){Object.assign(this.uniformValues,e)}updateTextureReferences(e){Object.assign(this.textureReferences,e)}applyShaders(){const{gl:e,program:t}=this;e.useProgram(t)}shouldRender;computeUniforms;computeMeshUniforms;apply(e){if(this.shouldRender&&0==this.shouldRender(e))return!1;this.applyShaders();const{uniforms:t}=this;if(t.set(e.cameraUniforms),t.set(e.sceneUniforms),t.set(this.uniformValues),this.computeUniforms){const n=this.computeUniforms(e);t.set(n)}return e.currentState=this.applyState(e.currentState),t.set(this.textureUniforms),this.applyTextures(e.textures,e.sceneTextures),!0}applyMeshUniforms(e,t){const{uniforms:n}=this;if(t.uniforms&&n.set(t.uniforms),this.computeMeshUniforms){const o=this.computeMeshUniforms(e,t);n.set(o)}if(t.textures.length>0){const{gl:n,textureSlots:o}=this;for(const r of t.textures){const{semantics:t,textureIndex:i}=r,a=o.map(((e,t)=>({s:e,i:t}))).filter((e=>e.s.textureSemantic===t))[0];if(!a)continue;let{samplerState:s}=a.s;const l=e.textures.getTexture(i);if(!l)continue;const{texture:c,samplerOverrides:f}=l;f&&(s={...s,...f}),c&&(n.activeTexture(33984+a.i),n.bindTexture(s.type,c),X(n,s))}}}cleanup(e){const{gl:t,textureSlots:n,attributes:o}=this;o.reset();for(let e=0;e<n.length;e++){let{samplerState:o}=n[e];t.activeTexture(33984+e),t.bindTexture(o.type,null)}return t.activeTexture(33984),!1}applyTextures(e,t){const{gl:n,textureSlots:o}=this;let r=!0;for(let i=0;i<o.length;i++){let{textureSemantic:a,samplerState:s}=o[i];const l=this.textureReferences[a]??t[a],c=void 0!==l?e.getTexture(l):void 0;let f=null;if(c){f=c.texture;const{samplerOverrides:e}=c;e&&(s={...s,...e})}f?(n.activeTexture(33984+i),n.bindTexture(s.type,f),X(n,s)):r=!1}return r}applyAttributes(){const{attributes:e}=this;e.set()}applyState(e){const{gl:t,state:n}=this;return W(t,e,n),n}}function Q(e){switch(e){case 5120:case 5121:return 1;case 5122:case 5123:return 2;case 5126:return 4}}function ee(e){let t=0;const n=[];for(const o of e){const{semantic:e}=o,r=o.type??5126,i=o.components??1,a={semantic:e,components:i,type:r,normalize:o.normalize??!1,byteOffset:t,defaultValue:o.defaultValue};t+=Q(r)*i,n.push(a)}return{attributes:n,stride:t}}const te=ee([{semantic:0,type:5126,components:2,normalize:!1}]);class ne extends K{constructor(e,t,n){super(e,t,n)}state={...k,3024:!1,2929:!0,2930:!1,2932:515}}(ne||(ne={})).contextData={shaders:{vertex:"precision highp float;\n#if __VERSION__ == 300\n#define attribute in\n#define varying out\n#endif\nattribute vec2 aPosition;uniform mat4 uViewClipMatrix;uniform mat3 uViewWorldMatrixNormal;varying vec3 vDir;void main(){gl_Position=vec4(aPosition.x,aPosition.y,1.0,1.0);vec3 dirVS=vec3(aPosition.x/uViewClipMatrix[0][0],aPosition.y/uViewClipMatrix[1][1],-1.0);vDir=uViewWorldMatrixNormal*dirVS;}",fragment:"precision highp float;uniform samplerCube texEnvmap;uniform mat4 uViewClipMatrix;\n#if __VERSION__ == 300\n#define attribute in\n#define varying in\n#define texture2D texture\n#define textureCube texture\n#define textureCubeLodEXT textureLod\nlayout(location=0)out vec4 fragColor;layout(location=1)out vec4 fragNormal;layout(location=2)out vec4 fragDepth;\n#else\n#define fragColor gl_FragColor\n#endif\nvarying vec3 vDir;const float GAMMA=2.2;const float INV_GAMMA=1.0/GAMMA;vec3 linearTosRGB(vec3 color){return pow(color,vec3(INV_GAMMA));}vec3 sRGBToLinear(vec3 srgbIn){return vec3(pow(srgbIn.xyz,vec3(GAMMA)));}vec3 toneMapACES_Narkowicz(vec3 color){const float A=2.51;const float B=0.03;const float C=2.43;const float D=0.59;const float E=0.14;return clamp((color*(A*color+B))/(color*(C*color+D)+E),0.0,1.0);}vec3 RRTAndODTFit(vec3 color){vec3 a=color*(color+0.0245786)-0.000090537;vec3 b=color*(0.983729*color+0.4329510)+0.238081;return a/b;}void main(){vec3 color;if(uViewClipMatrix[3][3]==0.0){color=textureCube(texEnvmap,normalize(vDir)).rgb;}else{color=vec3(0.5);}fragColor=vec4(color,1.0);\n#if __VERSION__ == 300\nfragNormal=vec4(1.0,1.0,0.0,0.0);fragDepth=vec4(100000.0,100000.0,100000.0,0.0);\n#endif\n}",flags:[]},vertexLayout:te,vertexSemanticNames:{0:"aPosition"},uniforms:{viewWorldNormalMatrix:["uViewWorldMatrixNormal","mat3"],viewClipMatrix:["uViewClipMatrix","mat4"]},textureSlots:[{textureSemantic:"background",shaderUniform:"texEnvmap",samplerState:{type:34067,10240:9729,10241:9729,10242:33071,10243:33071}}],renderOrder:-10,webGL1:!0,webGL2:!0};const oe=ee([{semantic:0,type:5126,components:3,normalize:!1}]);class re extends K{modelClipMatrix=b();constructor(e,t){super(e,t)}state={...k,2884:!0,3024:!1,2929:!1,2930:!1,2932:519,3042:!0,32969:770,32968:1,32971:1,32970:1};computeUniforms=e=>{const{modelClipMatrix:t}=this,{width:n,height:o}=e.cameraUniforms,r=1.8815558201167732,i=Math.hypot(12.717486682726303,r),a=.2*Math.hypot(n,o),s=2*a/i/n,l=2*a/i/o,c=a/i*.1*.5/r;return t[0]=s,t[5]=l,t[10]=c,t[12]=1-1*s,t[13]=1*l-1,t[14]=.5*c,{modelClipMatrix:t}}}(re||(re={})).contextData={shaders:{vertex:"precision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying out\n#endif\nattribute vec3 aPosition;uniform mat4 uModelClipMatrix;uniform vec4 uColor;varying float vElevation;void main(){vec4 p=uModelClipMatrix*vec4(aPosition,1.0);vElevation=p.z;gl_Position=vec4(p.xy,0.0,1.0);}",fragment:"precision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying in\nlayout(location=0)out vec4 fragColor;layout(location=1)out vec4 fragNormal;layout(location=2)out vec4 fragDepth;\n#else\n#define fragColor gl_FragColor\n#endif\nuniform mat4 uModelClipMatrix;uniform vec4 uColor;varying float vElevation;void main(){float a=clamp(vElevation,0.0,1.0);fragColor=vec4(uColor.rgb,a);\n#if __VERSION__ == 300\nfragNormal=vec4(0.0);fragDepth=vec4(0.0);\n#endif\n}",flags:[]},vertexLayout:oe,vertexSemanticNames:{0:"aPosition"},uniforms:{modelClipMatrix:["uModelClipMatrix","mat4"],color:["uColor","vec4"]},renderOrder:10,webGL1:!0,webGL2:!0};const ie="\n#if __VERSION__ == 300\n#define attribute in\n#define varying out\n#endif\nattribute vec4 aPosition;attribute vec3 aNormal;attribute vec4 aColor;attribute vec2 aTexcoord0;uniform mat4 uModelClipMatrix;uniform mat3 uModelViewMatrixNormal;varying vec3 normal;void main(){gl_Position=uModelClipMatrix*aPosition;normal=uModelViewMatrixNormal*aNormal;}",ae="precision lowp float;uniform lowp vec3 uColor;uniform float uOpacity;\n#if __VERSION__ == 300\n#define attribute in\n#define varying in\n#define texture2D texture\n#define textureCube texture\n#define textureCubeLodEXT textureLod\nlayout(location=0)out vec4 fragColor;layout(location=1)out vec4 fragNormal;layout(location=2)out vec4 fragDepth;\n#else\n#define fragColor gl_FragColor\n#endif\nvoid main(){\n#ifdef USE_OPACITY\nfloat opacity=uOpacity;\n#else\nfloat opacity=1.0;\n#endif\nfragColor=vec4(uColor.x,uColor.y,uColor.z,opacity);\n#if __VERSION__ == 300\nfragNormal=vec4(1.0,1.0,0.0,0.0);fragDepth=vec4(100000.0,100000.0,100000.0,0.0);\n#endif\n}",se=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:1,type:5126,components:3,normalize:!1},{semantic:4,type:5126,components:2,normalize:!1}]),le={0:"aPosition",1:"aNormal"},ce={modelClipMatrix:["uModelClipMatrix","mat4"],modelViewNormalMatrix:["uModelViewMatrixNormal","mat3"],color:["uColor","vec3"]},fe={...ce,opacity:["uOpacity","float",1]};class ue extends K{constructor(e,t){super(e,t)}cameraUniforms={modelWorldMatrix:b(),modelClipMatrix:b(),modelViewMatrix:b()};computeMeshUniforms=(e,t)=>{const{cameraUniforms:n}=e,{modelWorldMatrix:o,modelClipMatrix:r,modelViewMatrix:i}=this.cameraUniforms;return t.modelWorldMatrix?(E(o,t.modelWorldMatrix),D(r,n.worldClipMatrix,o),D(i,n.worldViewMatrix,o)):(E(o,n.modelWorldMatrix),E(r,n.modelClipMatrix),E(i,n.modelViewMatrix)),this.cameraUniforms};state={...k,3024:!1,2929:!0,2932:519}}(ue||(ue={})).contextData={shaders:{vertex:ie,fragment:ae,flags:[]},webGL1:!0,webGL2:!0,vertexLayout:se,vertexSemanticNames:le,uniforms:ce};class de extends ue{constructor(e,t){super(e,t)}state={...k,3024:!1,2929:!0}}(de||(de={})).contextData={shaders:{vertex:ie,fragment:ae,flags:[]},webGL1:!0,webGL2:!0,vertexLayout:se,vertexSemanticNames:le,uniforms:ce};class me extends K{constructor(e,t){super(e,t)}state={...k,2884:!1,2929:!0,2930:!1,3024:!1,3042:!0,32969:770,32968:771}}(me||(me={})).contextData={shaders:{vertex:ie,fragment:ae,flags:["USE_OPACITY"]},webGL1:!0,webGL2:!0,vertexLayout:se,vertexSemanticNames:le,uniforms:fe};const pe="precision highp float;precision highp int;\n#ifdef USE_TEXTURES\nvarying vec2 vTextureCoord;\n#endif\nattribute vec4 aPosition;attribute vec3 aNormal;attribute vec2 aTexcoord0;uniform mat4 uModelViewMatrix;uniform mat3 uModelViewMatrixNormal;uniform mat4 uProjectionMatrix;varying vec3 vNormal;varying vec3 vViewPosition;void main(){vec4 mvPosition=uModelViewMatrix*aPosition;vViewPosition=-mvPosition.xyz;gl_Position=uProjectionMatrix*mvPosition;vNormal=uModelViewMatrixNormal*aNormal;\n#ifdef USE_TEXTURES\nvTextureCoord=aTexcoord0;\n#endif\n}",xe="precision highp float;precision highp int;\n#ifdef USE_TEXTURES\nvarying vec2 vTextureCoord;uniform sampler2D texDiffuse;\n#endif\nuniform vec3 uDiffuse;uniform vec3 uEmissive;uniform vec3 uSpecular;uniform float uShininess;\n#ifdef USE_OPACITY\nuniform float uOpacity;\n#else\nconst float uOpacity=1.0;\n#endif\nuniform mat3 uWorldViewNormalMatrix;varying vec3 vViewPosition;varying vec3 vNormal;const float roughness=1.0;const float albedo=0.95;const float specularScale=0.65;float phongSpecular(vec3 lightDirection,vec3 viewDirection,vec3 surfaceNormal,float shininess){vec3 R=-reflect(lightDirection,surfaceNormal);return pow(max(0.0,dot(viewDirection,R)),shininess);}\n#define PI 3.14159265\nfloat orenNayarDiffuse(vec3 lightDirection,vec3 viewDirection,vec3 surfaceNormal,float roughness,float albedo){float LdotV=dot(lightDirection,viewDirection);float NdotL=dot(lightDirection,surfaceNormal);float NdotV=dot(surfaceNormal,viewDirection);float s=LdotV-NdotL*NdotV;float t=mix(1.0,max(NdotL,NdotV),step(0.0,s));float sigma2=roughness*roughness;float A=1.0+sigma2*(albedo/(sigma2+0.13)+0.5/(sigma2+0.33));float B=0.45*sigma2/(sigma2+0.09);return albedo*max(0.0,NdotL)*(A+B*s/t)/PI;}struct Light{vec3 direction;vec3 color;vec3 ambient;};Light light=Light(vec3(1,1,1),vec3(1,1,1),vec3(0.1,0.1,0.1));void main(){vec3 lightVector=uWorldViewNormalMatrix*light.direction;vec3 color=vec3(0.0);vec3 L=normalize(lightVector);vec3 V=normalize(vViewPosition);vec3 N=normalize(vNormal);vec3 specular=uSpecular*phongSpecular(L,V,N,uShininess);vec3 diffuse=light.color*orenNayarDiffuse(L,V,N,roughness,albedo);vec3 ambient=light.ambient;\n#ifdef USE_TEXTURES\nvec3 diffuseColor=texture2D(texDiffuse,vTextureCoord).xyz*uDiffuse;\n#else\nvec3 diffuseColor=uDiffuse;\n#endif\ncolor+=diffuseColor*(diffuse+ambient)+specular;gl_FragColor.rgb=color;gl_FragColor.a=uOpacity;}",ve=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:1,type:5126,components:3,normalize:!1},{semantic:4,type:5126,components:2,normalize:!1}]),he={0:"aPosition",1:"aNormal"},ge={...he,4:"aTexcoord0"},_e={modelViewMatrix:["uModelViewMatrix","mat4"],modelViewNormalMatrix:["uModelViewMatrixNormal","mat3"],viewClipMatrix:["uProjectionMatrix","mat4"],worldViewNormalMatrix:["uWorldViewNormalMatrix","mat3"],diffuseColor:["uDiffuse","vec3"],specularColor:["uSpecular","vec3",[.1,.1,.1]],shininess:["uShininess","float",20]},be={..._e,diffuseTexture:["texDiffuse","int",0]},Ee={..._e,opacity:["uOpacity","float",1]},Ce={...Ee,diffuseTexture:["texDiffuse","int",0]};class Re extends K{constructor(e,t){super(e,t)}state={...k,2884:!0,3024:!1,2929:!0}}(Re||(Re={})).contextData={shaders:{vertex:pe,fragment:xe,flags:[]},vertexLayout:ve,vertexSemanticNames:he,uniforms:_e};class De extends K{constructor(e,t,n){super(e,t,n)}state={...k,3024:!1,2929:!0}}(De||(De={})).contextData={shaders:{vertex:pe,fragment:xe,flags:["USE_TEXTURES"]},vertexLayout:ve,vertexSemanticNames:ge,uniforms:be,textureSlots:[{textureSemantic:"diffuse",shaderUniform:"texDiffuse",samplerState:H}]};class Ne extends K{constructor(e,t){super(e,t)}state={...k,2884:!1,2929:!0,2930:!1,3024:!1,3042:!0,32969:770,32968:771}}(Ne||(Ne={})).contextData={shaders:{vertex:pe,fragment:xe,flags:["USE_OPACITY"]},vertexLayout:ve,vertexSemanticNames:he,uniforms:Ee};class Me extends K{constructor(e,t,n){super(e,t,n)}state={...k,2884:!1,2929:!0,2930:!1,3024:!1,3042:!0,32969:770,32968:771}}(Me||(Me={})).contextData={shaders:{vertex:pe,fragment:xe,flags:["USE_OPACITY","USE_TEXTURES"]},vertexLayout:ve,vertexSemanticNames:ge,uniforms:Ce,textureSlots:[{textureSemantic:"diffuse",shaderUniform:"texDiffuse",samplerState:H}]};const Se="precision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying out\n#endif\nattribute vec4 aPosition;attribute vec3 aNormal;attribute vec4 aTangent;attribute vec2 aTextureCoord0;attribute vec2 aTextureCoord1;attribute vec4 aColor0;uniform mat4 uModelClipMatrix;uniform mat3 uModelWorldNormalMatrix;uniform vec3 uCameraPosMS;uniform vec4 uBaseColorFactor;uniform float uBaseColorUVSet;uniform float uAlphaCutoff;uniform sampler2D texBaseColor;uniform float uRoughnessFactor;uniform float uMetallicFactor;uniform float uMetallicRoughnessUVSet;uniform sampler2D texMetallicRoughness;uniform float uNormalScale;uniform float uNormalUVSet;uniform sampler2D texNormal;uniform float uOcclusionStrength;uniform float uOcclusionUVSet;uniform sampler2D texOcclusion;uniform vec3 uEmissiveFactor;uniform float uEmissiveUVSet;uniform sampler2D texEmissive;uniform vec3 uSunDir;uniform float uSunBrightness;uniform float uAmbientLight;uniform float uExposure;uniform float uMipCount;uniform samplerCube texIrradiance;uniform samplerCube texRadiance;uniform sampler2D texGGXLUT;varying vec3 vToCamera;varying mat3 vTBN;varying vec2 vTextureCoord0;varying vec2 vTextureCoord1;varying vec4 vColor0;void main(){gl_Position=uModelClipMatrix*aPosition;vToCamera=uModelWorldNormalMatrix*(uCameraPosMS-aPosition.xyz);vec3 normalWS=uModelWorldNormalMatrix*aNormal;vec3 tangentWS=uModelWorldNormalMatrix*aTangent.xyz;vec3 bitangentWS=cross(normalWS,tangentWS)*aTangent.w;vTBN=mat3(tangentWS,bitangentWS,normalWS);vTextureCoord0=aTextureCoord0;vTextureCoord1=aTextureCoord1;vColor0=aColor0;}",ye="#if __VERSION__ != 300\n#extension GL_OES_standard_derivatives: enable\n#extension GL_EXT_shader_texture_lod : enable\n#endif\nprecision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying in\n#define texture2D texture\n#define textureCube texture\n#define textureCubeLodEXT textureLod\n#define gl_FragColor fragColor\nlayout(location=0)out vec4 fragColor;layout(location=1)out vec4 fragNormal;layout(location=2)out vec4 fragDepth;\n#endif\nuniform mat4 uModelClipMatrix;uniform mat3 uModelWorldNormalMatrix;uniform vec3 uCameraPosMS;uniform vec4 uBaseColorFactor;uniform float uBaseColorUVSet;uniform float uAlphaCutoff;uniform sampler2D texBaseColor;uniform float uRoughnessFactor;uniform float uMetallicFactor;uniform float uMetallicRoughnessUVSet;uniform sampler2D texMetallicRoughness;uniform float uNormalScale;uniform float uNormalUVSet;uniform sampler2D texNormal;uniform float uOcclusionStrength;uniform float uOcclusionUVSet;uniform sampler2D texOcclusion;uniform vec3 uEmissiveFactor;uniform float uEmissiveUVSet;uniform sampler2D texEmissive;uniform vec3 uSunDir;uniform float uSunBrightness;uniform float uAmbientLight;uniform float uExposure;uniform float uMipCount;uniform samplerCube texIrradiance;uniform samplerCube texRadiance;uniform sampler2D texGGXLUT;varying vec3 vToCamera;varying mat3 vTBN;varying vec2 vTextureCoord0;varying vec2 vTextureCoord1;varying vec4 vColor0;const float M_PI=3.141592653589793;vec3 F_Schlick(vec3 f0,vec3 f90,float VdotH){return f0+(f90-f0)*pow(clamp(1.0-VdotH,0.0,1.0),5.0);}float V_GGX(float NdotL,float NdotV,float alphaRoughness){float alphaRoughnessSq=alphaRoughness*alphaRoughness;float GGXV=NdotL*sqrt(NdotV*NdotV*(1.0-alphaRoughnessSq)+alphaRoughnessSq);float GGXL=NdotV*sqrt(NdotL*NdotL*(1.0-alphaRoughnessSq)+alphaRoughnessSq);float GGX=GGXV+GGXL;if(GGX>0.0){return 0.5/GGX;}return 0.0;}float D_GGX(float NdotH,float alphaRoughness){float alphaRoughnessSq=alphaRoughness*alphaRoughness;float f=(NdotH*NdotH)*(alphaRoughnessSq-1.0)+1.0;return alphaRoughnessSq/(M_PI*f*f);}vec3 BRDF_lambertian(vec3 f0,vec3 f90,vec3 diffuseColor,float VdotH){return(1.0-F_Schlick(f0,f90,VdotH))*(diffuseColor/M_PI);}vec3 BRDF_specularGGX(vec3 f0,vec3 f90,float alphaRoughness,float VdotH,float NdotL,float NdotV,float NdotH){vec3 F=F_Schlick(f0,f90,VdotH);float Vis=V_GGX(NdotL,NdotV,alphaRoughness);float D=D_GGX(NdotH,alphaRoughness);return F*Vis*D;}const float GAMMA=2.2;const float INV_GAMMA=1.0/GAMMA;vec3 linearTosRGB(vec3 color){return pow(color,vec3(INV_GAMMA));}vec3 sRGBToLinear(vec3 srgbIn){return vec3(pow(srgbIn.xyz,vec3(GAMMA)));}vec3 toneMapACES_Narkowicz(vec3 color){const float A=2.51;const float B=0.03;const float C=2.43;const float D=0.59;const float E=0.14;return clamp((color*(A*color+B))/(color*(C*color+D)+E),0.0,1.0);}vec3 RRTAndODTFit(vec3 color){vec3 a=color*(color+0.0245786)-0.000090537;vec3 b=color*(0.983729*color+0.4329510)+0.238081;return a/b;}const float maxHDR=16.0;vec3 rgbmToFloat(vec4 rgbe){return rgbe.rgb*rgbe.a*maxHDR;}float clampedDot(vec3 x,vec3 y){return clamp(dot(x,y),0.0,1.0);}struct NormalInfo{vec3 ng;vec3 n;vec3 t;vec3 b;};NormalInfo getNormalInfo(vec3 v){vec2 UV=uNormalUVSet<1.0 ? vTextureCoord0 : vTextureCoord1;vec3 uv_dx=dFdx(vec3(UV,0.0));vec3 uv_dy=dFdy(vec3(UV,0.0));vec3 t_=(uv_dy.t*dFdx(v)-uv_dx.t*dFdy(v))/(uv_dx.s*uv_dy.t-uv_dy.s*uv_dx.t);vec3 n,t,b,ng;ng=normalize(vTBN[2]);t=normalize(t_-ng*dot(ng,t_));b=cross(ng,t);float facing=step(0.0,dot(v,ng))*2.0-1.0;t*=facing;b*=facing;ng*=facing;if(uNormalUVSet>=0.0){n=texture2D(texNormal,UV).rgb*2.0-vec3(1.0);n*=vec3(uNormalScale,uNormalScale,1.0);n=mat3(t,b,ng)*normalize(n);}else{n=ng;}NormalInfo info;info.ng=ng;info.t=t;info.b=b;info.n=n;return info;}struct MaterialInfo{float perceptualRoughness;vec3 f0;float alphaRoughness;vec3 albedoColor;vec3 f90;float metallic;vec3 n;vec3 baseColor;};MaterialInfo getMetallicRoughnessInfo(MaterialInfo info,float f0_ior){info.metallic=uMetallicFactor;info.perceptualRoughness=uRoughnessFactor;if(uMetallicRoughnessUVSet>=0.0){vec2 uv=uMetallicRoughnessUVSet<1.0 ? vTextureCoord0 : vTextureCoord1;vec4 mrSample=texture2D(texMetallicRoughness,uv);info.perceptualRoughness*=mrSample.g;info.metallic*=mrSample.b;}vec3 f0=vec3(f0_ior);info.albedoColor=mix(info.baseColor.rgb*(vec3(1.0)-f0),vec3(0),info.metallic);info.f0=mix(f0,info.baseColor.rgb,info.metallic);return info;}vec3 getIBLRadianceGGX(vec3 n,vec3 v,float perceptualRoughness,vec3 specularColor){float NdotV=clampedDot(n,v);vec3 reflection=normalize(reflect(-v,n));vec2 brdfSamplePoint=clamp(vec2(NdotV,perceptualRoughness),vec2(0.0,0.0),vec2(1.0,1.0));vec2 brdf=texture2D(texGGXLUT,brdfSamplePoint).rg;float lod=clamp(perceptualRoughness*float(uMipCount),0.0,float(uMipCount));vec4 specularSample=textureCubeLodEXT(texRadiance,reflection,lod);vec3 specularLight=specularSample.rgb;return specularLight*(specularColor*brdf.x+brdf.y);}vec3 getIBLRadianceLambertian(vec3 n,vec3 diffuseColor){vec3 diffuseLight=textureCube(texIrradiance,n).rgb;return diffuseLight*diffuseColor;}void main(){vec4 baseColor=uBaseColorFactor*vColor0;vec3 color=baseColor.rgb;if(uBaseColorUVSet>=0.0){vec2 uv=uBaseColorUVSet<1.0 ? vTextureCoord0 : vTextureCoord1;vec4 bc=texture2D(texBaseColor,uv);baseColor*=vec4(sRGBToLinear(bc.rgb),bc.a);}if(baseColor.a<uAlphaCutoff)discard;vec3 v=normalize(vToCamera);NormalInfo normalInfo=getNormalInfo(v);vec3 n=normalInfo.n;vec3 l=normalize(uSunDir);vec3 h=normalize(l+v);MaterialInfo materialInfo;materialInfo.baseColor=baseColor.rgb;float ior=1.5;float f0_ior=0.04;materialInfo=getMetallicRoughnessInfo(materialInfo,f0_ior);materialInfo.perceptualRoughness=clamp(materialInfo.perceptualRoughness,0.0,1.0);materialInfo.metallic=clamp(materialInfo.metallic,0.0,1.0);materialInfo.alphaRoughness=materialInfo.perceptualRoughness*materialInfo.perceptualRoughness;float reflectance=max(max(materialInfo.f0.r,materialInfo.f0.g),materialInfo.f0.b);materialInfo.f90=vec3(clamp(reflectance*50.0,0.0,1.0));materialInfo.n=n;vec3 f_specular=vec3(0.0);vec3 f_diffuse=vec3(0.0);vec3 f_emissive=vec3(0.0);f_specular+=getIBLRadianceGGX(n,v,materialInfo.perceptualRoughness,materialInfo.f0);f_diffuse+=getIBLRadianceLambertian(n,materialInfo.albedoColor);float NdotL=clampedDot(n,l);float NdotV=clampedDot(n,v);float NdotH=clampedDot(n,h);float LdotH=clampedDot(l,h);float VdotH=clampedDot(v,h);vec3 intensity=vec3(uSunBrightness);if(NdotL>0.0||NdotV>0.0){f_specular+=intensity*NdotL*BRDF_specularGGX(materialInfo.f0,materialInfo.f90,materialInfo.alphaRoughness,VdotH,NdotL,NdotV,NdotH);f_diffuse+=intensity*NdotL*BRDF_lambertian(materialInfo.f0,materialInfo.f90,materialInfo.albedoColor,VdotH);}f_emissive=uEmissiveFactor;if(uEmissiveUVSet>=0.0){vec2 uv=uEmissiveUVSet<1.0 ? vTextureCoord0 : vTextureCoord1;f_emissive*=sRGBToLinear(texture2D(texEmissive,uv).rgb);}\n#if !defined(UNLIT)\ncolor=(f_emissive+f_diffuse+f_specular)+uAmbientLight*materialInfo.albedoColor;\n#else\ncolor=baseColor.rgb;\n#endif\nif(uOcclusionUVSet>=0.0){vec2 uv=uOcclusionUVSet<1.0 ? vTextureCoord0 : vTextureCoord1;float ao=texture2D(texOcclusion,uv).r;color=mix(color,color*ao,uOcclusionStrength);}gl_FragColor.rgb=color;gl_FragColor.a=baseColor.a;\n#if __VERSION__ == 300\nfragNormal=vec4(1.0,1.0,0.0,0.0);fragDepth=vec4(0.0);\n#endif\n}",Te=function(){const e=S(0,1,0);return function(t){if(t){const a=t.inclination*Math.PI/360,s=t.azimuth*Math.PI/360;n=e,o=Math.cos(a)*Math.sin(s),r=Math.sin(a),i=Math.cos(a)*-Math.cos(s),n[0]=o,n[1]=r,n[2]=i}var n,o,r,i;return e}}(),we=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:1,type:5126,components:3,normalize:!1},{semantic:2,type:5126,components:4,normalize:!1},{semantic:4,type:5126,components:2,normalize:!1},{semantic:5,type:5126,components:2,normalize:!1},{semantic:12,type:5126,components:4,normalize:!1,defaultValue:[1,1,1,1]}]),Le=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:4,type:5126,components:2,normalize:!1},{semantic:12,type:5126,components:4,normalize:!1,defaultValue:[1,1,1,1]}]),Ie={0:"aPosition",1:"aNormal",2:"aTangent",4:"aTextureCoord0",5:"aTextureCoord1",12:"aColor0"},Oe={modelClipMatrix:["uModelClipMatrix","mat4"],modelWorldNormalMatrix:["uModelWorldNormalMatrix","mat3"],cameraPosMS:["uCameraPosMS","vec3"],baseColorFactor:["uBaseColorFactor","vec4"],roughnessFactor:["uRoughnessFactor","float"],metallicFactor:["uMetallicFactor","float"],normalScale:["uNormalScale","float"],occlusionStrength:["uOcclusionStrength","float"],emissiveFactor:["uEmissiveFactor","vec3"],alphaCutoff:["uAlphaCutoff","float"],baseColorUVSet:["uBaseColorUVSet","float"],metallicRoughnessUVSet:["uMetallicRoughnessUVSet","float"],normalUVSet:["uNormalUVSet","float"],occlusionUVSet:["uOcclusionUVSet","float"],emissiveUVSet:["uEmissiveUVSet","float"],exposure:["uExposure","float"],sunDirection:["uSunDir","vec3"],sunBrightness:["uSunBrightness","float"],ambientLight:["uAmbientLight","float"],mipCount:["uMipCount","float",7]},Ve=[{textureSemantic:"albedo",shaderUniform:"texBaseColor",samplerState:H},{textureSemantic:"metallic+roughness",shaderUniform:"texMetallicRoughness",samplerState:H},{textureSemantic:"normal",shaderUniform:"texNormal",samplerState:H},{textureSemantic:"occlusion",shaderUniform:"texOcclusion",samplerState:H},{textureSemantic:"emissive",shaderUniform:"texEmissive",samplerState:H},{textureSemantic:"irradiance",shaderUniform:"texIrradiance",samplerState:{type:34067,10240:9729,10241:9729,10242:33071,10243:33071}},{textureSemantic:"radiance",shaderUniform:"texRadiance",samplerState:{type:34067,10240:9729,10241:9987,10242:33071,10243:33071}},{textureSemantic:"ggx_lut",shaderUniform:"texGGXLUT",samplerState:{type:3553,10240:9729,10241:9729,10242:33071,10243:33071}}];class Pe extends K{viewModelMatrix=b();cameraUniforms={modelClipMatrix:b(),modelWorldNormalMatrix:g(),cameraPosMS:M()};constructor(e,t,n){super(e,t,n)}computeUniforms=e=>{const{settings:t,textures:n,sceneTextures:o}=e,r=t.light.sun?.brightness??0,i=Te(t.light.sun?.position),a=t.light.ambient?.brightness??0,s=Math.pow(2,t.exposure??0),{cameraPosMS:l}=this.cameraUniforms,c=this.textureReferences.radiance??o.radiance,f=void 0!==c?n.getTexture(c):void 0;return{exposure:s,sunBrightness:r,sunDirection:i,ambientLight:a,cameraPosMS:l,mipCount:f?f.mips:1}};computeMeshUniforms=(e,t)=>{const{cameraUniforms:n}=e,o=t.modelWorldMatrix??n.modelWorldMatrix,{modelClipMatrix:r,modelWorldNormalMatrix:i,cameraPosMS:a}=this.cameraUniforms;D(r,n.worldClipMatrix,o),_(i,o);const{viewModelMatrix:s}=this;var l,c;return D(s,n.worldViewMatrix,o),R(s,s),c=s,(l=a)[0]=c[12],l[1]=c[13],l[2]=c[14],this.cameraUniforms};state={...k,2884:!1,3024:!1,2929:!0}}(Pe||(Pe={})).contextData={shaders:{vertex:Se,fragment:ye,flags:[]},vertexLayout:we,vertexSemanticNames:Ie,uniforms:Oe,textureSlots:Ve,webGL1:!0,webGL2:!0};class Ae extends Pe{constructor(e,t,n){super(e,t,n)}}(Ae||(Ae={})).contextData={shaders:{vertex:Se,fragment:ye,flags:["UNLIT"]},vertexLayout:Le,vertexSemanticNames:Ie,uniforms:Oe,textureSlots:Ve,webGL1:!0,webGL2:!0};class Ue extends Pe{constructor(e,t,n){super(e,t,n)}state={...k,2884:!1,3024:!1,2929:!0,2930:!1,3042:!0,32969:770,32971:1,32968:771,32970:1,2932:515}}(Ue||(Ue={})).contextData={shaders:{vertex:Se,fragment:ye,flags:[]},vertexLayout:we,vertexSemanticNames:Ie,uniforms:Oe,textureSlots:Ve,renderOrder:1,webGL1:!0,webGL2:!0};class Fe extends Ue{constructor(e,t,n){super(e,t,n)}}(Fe||(Fe={})).contextData={shaders:{vertex:Se,fragment:ye,flags:["UNLIT"]},vertexLayout:Le,vertexSemanticNames:Ie,uniforms:Oe,textureSlots:Ve,renderOrder:1,webGL1:!0,webGL2:!0};class Be extends Pe{constructor(e,t,n){super(e,t,n)}state={...k,3024:!1,2929:!0,2930:!0,2932:515}}(Be||(Be={})).contextData={shaders:{vertex:Se,fragment:ye,flags:["POINTS"]},vertexLayout:we,vertexSemanticNames:Ie,uniforms:Oe};const Ge=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:12,type:5126,components:3,normalize:!1,defaultValue:[1,1,1,1]}]);class ze extends K{cameraUniforms={modelClipMatrix:b()};constructor(e,t,n){super(e,t,n)}computeMeshUniforms=(e,t)=>{const{cameraUniforms:n}=e,o=t.modelWorldMatrix??n.modelWorldMatrix,{modelClipMatrix:r}=this.cameraUniforms;return D(r,n.worldClipMatrix,o),this.cameraUniforms};state={...k,3024:!1,2929:!0,2930:!0}}(ze||(ze={})).contextData={shaders:{vertex:"precision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying out\n#endif\nattribute vec4 aPosition;attribute vec4 aColor0;uniform mat4 uModelClipMatrix;varying vec4 vColor0;void main(){gl_Position=uModelClipMatrix*aPosition;gl_PointSize=1.0;vColor0=aColor0;}",fragment:"precision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying in\n#define gl_FragColor fragColor\nlayout(location=0)out vec4 fragColor;layout(location=1)out vec4 fragNormal;layout(location=2)out vec4 fragDepth;\n#endif\nuniform mat4 uModelClipMatrix;varying vec4 vColor0;void main(){gl_FragColor=vColor0;\n#if __VERSION__ == 300\nfragNormal=vec4(1.0,1.0,0.0,0.0);fragDepth=vec4(0.0);\n#endif\n}",flags:[]},webGL1:!0,webGL2:!0,vertexLayout:Ge,vertexSemanticNames:{0:"aPosition",12:"aColor0"},uniforms:{modelClipMatrix:["uModelClipMatrix","mat4"]}};const je="precision highp float;precision highp int;\n#ifdef USE_TEXTURES\nvarying vec2 vTextureCoord;\n#endif\nattribute vec4 aPosition;attribute vec3 aNormal;attribute vec2 aTexcoord0;uniform mat4 uModelViewMatrix;uniform mat3 uModelViewMatrixNormal;uniform mat4 uProjectionMatrix;varying vec3 vNormal;varying vec3 vViewPosition;void main(){vec4 mvPosition=uModelViewMatrix*aPosition;vViewPosition=-mvPosition.xyz;gl_Position=uProjectionMatrix*mvPosition;vNormal=uModelViewMatrixNormal*aNormal;\n#ifdef USE_TEXTURES\nvTextureCoord=aTexcoord0;\n#endif\n}",He="precision highp float;precision highp int;\n#ifdef USE_TEXTURES\nvarying vec2 vTextureCoord;uniform sampler2D texColor;\n#endif\nuniform vec3 uColor;uniform vec3 uEmissive;uniform float uRoughness;uniform float uMetalness;\n#ifdef USE_OPACITY\nuniform float uOpacity;\n#else\nconst float uOpacity=1.0;\n#endif\n#ifdef USE_CLEARCOAT\nuniform float uClearCoat;uniform float uClearCoatRoughness;\n#endif\n#ifdef USE_SHEEN\nuniform vec3 uSheen;\n#endif\nuniform mat3 uWorldViewNormalMatrix;varying vec3 vViewPosition;varying vec3 vNormal;struct Light{vec3 direction;vec3 color;vec3 ambient;};Light light=Light(vec3(3,1,2),vec3(1,1,1),vec3(0.1,0.1,0.1));\n#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2(const in float x){return x*x;}float pow3(const in float x){return x*x*x;}float pow4(const in float x){float x2=x*x;return x2*x2;}float average(const in vec3 color){return dot(color,vec3(0.3333));}highp float rand(const in vec2 uv){const highp float a=12.9898,b=78.233,c=43758.5453;highp float dt=dot(uv.xy,vec2(a,b)),sn=mod(dt,PI);return fract(sin(sn)*c);}\n#ifdef HIGH_PRECISION\nfloat precisionSafeLength(vec3 v){return length(v);}\n#else\nfloat max3(vec3 v){return max(max(v.x,v.y),v.z);}float precisionSafeLength(vec3 v){float maxComponent=max3(abs(v));return length(v/maxComponent)*maxComponent;}\n#endif\nstruct IncidentLight{vec3 color;vec3 direction;bool visible;};struct ReflectedLight{vec3 directDiffuse;vec3 directSpecular;vec3 indirectDiffuse;vec3 indirectSpecular;};struct GeometricContext{vec3 position;vec3 normal;vec3 viewDir;vec3 clearcoatNormal;};vec3 transformDirection(in vec3 dir,in mat4 matrix){return normalize((matrix*vec4(dir,0.0)).xyz);}vec3 inverseTransformDirection(in vec3 dir,in mat4 matrix){return normalize((vec4(dir,0.0)*matrix).xyz);}vec3 projectOnPlane(in vec3 point,in vec3 pointOnPlane,in vec3 planeNormal){float distance=dot(planeNormal,point-pointOnPlane);return-distance*planeNormal+point;}float sideOfPlane(in vec3 point,in vec3 pointOnPlane,in vec3 planeNormal){return sign(dot(point-pointOnPlane,planeNormal));}vec3 linePlaneIntersect(in vec3 pointOnLine,in vec3 lineDirection,in vec3 pointOnPlane,in vec3 planeNormal){return lineDirection*(dot(planeNormal,pointOnPlane-pointOnLine)/dot(planeNormal,lineDirection))+pointOnLine;}mat3 transposeMat3(const in mat3 m){mat3 tmp;tmp[0]=vec3(m[0].x,m[1].x,m[2].x);tmp[1]=vec3(m[0].y,m[1].y,m[2].y);tmp[2]=vec3(m[0].z,m[1].z,m[2].z);return tmp;}float linearToRelativeLuminance(const in vec3 color){vec3 weights=vec3(0.2126,0.7152,0.0722);return dot(weights,color.rgb);}bool isPerspectiveMatrix(mat4 m){return m[2][3]==-1.0;}vec2 integrateSpecularBRDF(const in float dotNV,const in float roughness){const vec4 c0=vec4(-1,-0.0275,-0.572,0.022);const vec4 c1=vec4(1,0.0425,1.04,-0.04);vec4 r=roughness*c0+c1;float a004=min(r.x*r.x,exp2(-9.28*dotNV))*r.x+r.y;return vec2(-1.04,1.04)*a004+r.zw;}float punctualLightIntensityToIrradianceFactor(const in float lightDistance,const in float cutoffDistance,const in float decayExponent){float distanceFalloff=1.0/max(pow(lightDistance,decayExponent),0.01);if(cutoffDistance>0.0){distanceFalloff*=pow2(saturate(1.0-pow4(lightDistance/cutoffDistance)));}return distanceFalloff;}vec3 BRDF_Diffuse_Lambert(const in vec3 diffuseColor){return RECIPROCAL_PI*diffuseColor;}vec3 F_Schlick(const in vec3 specularColor,const in float dotLH){float fresnel=exp2((-5.55473*dotLH-6.98316)*dotLH);return(1.0-specularColor)*fresnel+specularColor;}vec3 F_Schlick_RoughnessDependent(const in vec3 F0,const in float dotNV,const in float roughness){float fresnel=exp2((-5.55473*dotNV-6.98316)*dotNV);vec3 Fr=max(vec3(1.0-roughness),F0)-F0;return Fr*fresnel+F0;}float G_GGX_Smith(const in float alpha,const in float dotNL,const in float dotNV){float a2=pow2(alpha);float gl=dotNL+sqrt(a2+(1.0-a2)*pow2(dotNL));float gv=dotNV+sqrt(a2+(1.0-a2)*pow2(dotNV));return 1.0/(gl*gv);}float G_GGX_SmithCorrelated(const in float alpha,const in float dotNL,const in float dotNV){float a2=pow2(alpha);float gv=dotNL*sqrt(a2+(1.0-a2)*pow2(dotNV));float gl=dotNV*sqrt(a2+(1.0-a2)*pow2(dotNL));return 0.5/max(gv+gl,EPSILON);}float D_GGX(const in float alpha,const in float dotNH){float a2=pow2(alpha);float denom=pow2(dotNH)*(a2-1.0)+1.0;return RECIPROCAL_PI*a2/pow2(denom);}vec3 BRDF_Specular_GGX(const in IncidentLight incidentLight,const in vec3 viewDir,const in vec3 normal,const in vec3 specularColor,const in float roughness){float alpha=pow2(roughness);vec3 halfDir=normalize(incidentLight.direction+viewDir);float dotNL=saturate(dot(normal,incidentLight.direction));float dotNV=saturate(dot(normal,viewDir));float dotNH=saturate(dot(normal,halfDir));float dotLH=saturate(dot(incidentLight.direction,halfDir));vec3 F=F_Schlick(specularColor,dotLH);float G=G_GGX_SmithCorrelated(alpha,dotNL,dotNV);float D=D_GGX(alpha,dotNH);return F*(G*D);}vec2 LTC_Uv(const in vec3 N,const in vec3 V,const in float roughness){const float LUT_SIZE=64.0;const float LUT_SCALE=(LUT_SIZE-1.0)/LUT_SIZE;const float LUT_BIAS=0.5/LUT_SIZE;float dotNV=saturate(dot(N,V));vec2 uv=vec2(roughness,sqrt(1.0-dotNV));uv=uv*LUT_SCALE+LUT_BIAS;return uv;}float LTC_ClippedSphereFormFactor(const in vec3 f){float l=length(f);return max((l*l+f.z)/(l+1.0),0.0);}vec3 LTC_EdgeVectorFormFactor(const in vec3 v1,const in vec3 v2){float x=dot(v1,v2);float y=abs(x);float a=0.8543985+(0.4965155+0.0145206*y)*y;float b=3.4175940+(4.1616724+y)*y;float v=a/b;float theta_sintheta=(x>0.0)? v : 0.5*inversesqrt(max(1.0-x*x,1e-7))-v;return cross(v1,v2)*theta_sintheta;}vec3 LTC_Evaluate(const in vec3 N,const in vec3 V,const in vec3 P,const in mat3 mInv,const in vec3 rectCoords[4]){vec3 v1=rectCoords[1]-rectCoords[0];vec3 v2=rectCoords[3]-rectCoords[0];vec3 lightNormal=cross(v1,v2);if(dot(lightNormal,P-rectCoords[0])<0.0)return vec3(0.0);vec3 T1,T2;T1=normalize(V-N*dot(V,N));T2=-cross(N,T1);mat3 mat=mInv*transposeMat3(mat3(T1,T2,N));vec3 coords[4];coords[0]=mat*(rectCoords[0]-P);coords[1]=mat*(rectCoords[1]-P);coords[2]=mat*(rectCoords[2]-P);coords[3]=mat*(rectCoords[3]-P);coords[0]=normalize(coords[0]);coords[1]=normalize(coords[1]);coords[2]=normalize(coords[2]);coords[3]=normalize(coords[3]);vec3 vectorFormFactor=vec3(0.0);vectorFormFactor+=LTC_EdgeVectorFormFactor(coords[0],coords[1]);vectorFormFactor+=LTC_EdgeVectorFormFactor(coords[1],coords[2]);vectorFormFactor+=LTC_EdgeVectorFormFactor(coords[2],coords[3]);vectorFormFactor+=LTC_EdgeVectorFormFactor(coords[3],coords[0]);float result=LTC_ClippedSphereFormFactor(vectorFormFactor);/*float len=length(vectorFormFactor);float z=vectorFormFactor.z/len;const float LUT_SIZE=64.0;const float LUT_SCALE=(LUT_SIZE-1.0)/LUT_SIZE;const float LUT_BIAS=0.5/LUT_SIZE;vec2 uv=vec2(z*0.5+0.5,len);uv=uv*LUT_SCALE+LUT_BIAS;float scale=texture2D(ltc_2,uv).w;float result=len*scale;*/return vec3(result);}vec3 BRDF_Specular_GGX_Environment(const in vec3 viewDir,const in vec3 normal,const in vec3 specularColor,const in float roughness){float dotNV=saturate(dot(normal,viewDir));vec2 brdf=integrateSpecularBRDF(dotNV,roughness);return specularColor*brdf.x+brdf.y;}void BRDF_Specular_Multiscattering_Environment(const in GeometricContext geometry,const in vec3 specularColor,const in float roughness,inout vec3 singleScatter,inout vec3 multiScatter){float dotNV=saturate(dot(geometry.normal,geometry.viewDir));vec3 F=F_Schlick_RoughnessDependent(specularColor,dotNV,roughness);vec2 brdf=integrateSpecularBRDF(dotNV,roughness);vec3 FssEss=F*brdf.x+brdf.y;float Ess=brdf.x+brdf.y;float Ems=1.0-Ess;vec3 Favg=specularColor+(1.0-specularColor)*0.047619;vec3 Fms=FssEss*Favg/(1.0-Ems*Favg);singleScatter+=FssEss;multiScatter+=Fms*Ems;}float G_BlinnPhong_Implicit(){return 0.25;}float D_BlinnPhong(const in float shininess,const in float dotNH){return RECIPROCAL_PI*(shininess*0.5+1.0)*pow(dotNH,shininess);}vec3 BRDF_Specular_BlinnPhong(const in IncidentLight incidentLight,const in GeometricContext geometry,const in vec3 specularColor,const in float shininess){vec3 halfDir=normalize(incidentLight.direction+geometry.viewDir);float dotNH=saturate(dot(geometry.normal,halfDir));float dotLH=saturate(dot(incidentLight.direction,halfDir));vec3 F=F_Schlick(specularColor,dotLH);float G=G_BlinnPhong_Implicit();float D=D_BlinnPhong(shininess,dotNH);return F*(G*D);}float GGXRoughnessToBlinnExponent(const in float ggxRoughness){return(2.0/pow2(ggxRoughness+0.0001)-2.0);}float BlinnExponentToGGXRoughness(const in float blinnExponent){return sqrt(2.0/(blinnExponent+2.0));}float D_Charlie(float roughness,float NoH){float invAlpha=1.0/roughness;float cos2h=NoH*NoH;float sin2h=max(1.0-cos2h,0.0078125);return(2.0+invAlpha)*pow(sin2h,invAlpha*0.5)/(2.0*PI);}float V_Neubelt(float NoV,float NoL){return saturate(1.0/(4.0*(NoL+NoV-NoL*NoV)));}vec3 BRDF_Specular_Sheen(const in float roughness,const in vec3 L,const in GeometricContext geometry,vec3 specularColor){vec3 N=geometry.normal;vec3 V=geometry.viewDir;vec3 H=normalize(V+L);float dotNH=saturate(dot(N,H));return specularColor*D_Charlie(roughness,dotNH)*V_Neubelt(dot(N,V),dot(N,L));}struct PhysicalMaterial{vec3 diffuseColor;float specularRoughness;vec3 specularColor;\n#ifdef USE_CLEARCOAT\nfloat clearcoat;float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\nvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox(const in float roughness,const in float dotNL){return DEFAULT_SPECULAR_COEFFICIENT+(1.0-DEFAULT_SPECULAR_COEFFICIENT)*(pow(1.0-dotNL,5.0)*pow(1.0-roughness,2.0));}void RE_Direct_Physical(const in IncidentLight directLight,const in GeometricContext geometry,const in PhysicalMaterial material,inout ReflectedLight reflectedLight){float dotNL=saturate(dot(geometry.normal,directLight.direction));vec3 irradiance=dotNL*directLight.color;irradiance*=PI;\n#ifdef USE_CLEARCOAT\nfloat ccDotNL=saturate(dot(geometry.clearcoatNormal,directLight.direction));vec3 ccIrradiance=ccDotNL*directLight.color;ccIrradiance*=PI;float clearcoatDHR=material.clearcoat*clearcoatDHRApprox(material.clearcoatRoughness,ccDotNL);reflectedLight.directSpecular+=ccIrradiance*material.clearcoat*BRDF_Specular_GGX(directLight,geometry.viewDir,geometry.clearcoatNormal,vec3(DEFAULT_SPECULAR_COEFFICIENT),material.clearcoatRoughness);\n#else\nfloat clearcoatDHR=0.0;\n#endif\n#ifdef USE_SHEEN\nreflectedLight.directSpecular+=(1.0-clearcoatDHR)*irradiance*BRDF_Specular_Sheen(material.specularRoughness,directLight.direction,geometry,material.sheenColor);\n#else\nreflectedLight.directSpecular+=(1.0-clearcoatDHR)*irradiance*BRDF_Specular_GGX(directLight,geometry.viewDir,geometry.normal,material.specularColor,material.specularRoughness);\n#endif\nreflectedLight.directDiffuse+=(1.0-clearcoatDHR)*irradiance*BRDF_Diffuse_Lambert(material.diffuseColor);}void RE_IndirectDiffuse_Physical(const in vec3 irradiance,const in GeometricContext geometry,const in PhysicalMaterial material,inout ReflectedLight reflectedLight){reflectedLight.indirectDiffuse+=irradiance*BRDF_Diffuse_Lambert(material.diffuseColor);}void RE_IndirectSpecular_Physical(const in vec3 radiance,const in vec3 irradiance,const in vec3 clearcoatRadiance,const in GeometricContext geometry,const in PhysicalMaterial material,inout ReflectedLight reflectedLight){\n#ifdef USE_CLEARCOAT\nfloat ccDotNV=saturate(dot(geometry.clearcoatNormal,geometry.viewDir));reflectedLight.indirectSpecular+=clearcoatRadiance*material.clearcoat*BRDF_Specular_GGX_Environment(geometry.viewDir,geometry.clearcoatNormal,vec3(DEFAULT_SPECULAR_COEFFICIENT),material.clearcoatRoughness);float ccDotNL=ccDotNV;float clearcoatDHR=material.clearcoat*clearcoatDHRApprox(material.clearcoatRoughness,ccDotNL);\n#else\nfloat clearcoatDHR=0.0;\n#endif\nfloat clearcoatInv=1.0-clearcoatDHR;vec3 singleScattering=vec3(0.0);vec3 multiScattering=vec3(0.0);vec3 cosineWeightedIrradiance=irradiance*RECIPROCAL_PI;BRDF_Specular_Multiscattering_Environment(geometry,material.specularColor,material.specularRoughness,singleScattering,multiScattering);vec3 diffuse=material.diffuseColor*(1.0-(singleScattering+multiScattering));reflectedLight.indirectSpecular+=clearcoatInv*radiance*singleScattering;reflectedLight.indirectSpecular+=multiScattering*cosineWeightedIrradiance;reflectedLight.indirectDiffuse+=diffuse*cosineWeightedIrradiance;}\n#define RE_Direct RE_Direct_Physical\n#define RE_IndirectDiffuse RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion(const in float dotNV,const in float ambientOcclusion,const in float roughness){return saturate(pow(dotNV+ambientOcclusion,exp2(-16.0*roughness-1.0))-1.0+ambientOcclusion);}void main(){vec3 lightVector=uWorldViewNormalMatrix*light.direction;vec3 L=normalize(lightVector);vec3 V=normalize(vViewPosition);vec3 normal=normalize(vNormal);vec4 diffuseColor=vec4(uColor,uOpacity);\n#ifdef USE_TEXTURES\ndiffuseColor*=texture2D(texColor,vTextureCoord);\n#endif\nReflectedLight reflectedLight=ReflectedLight(vec3(0.0),vec3(0.0),vec3(0.0),vec3(0.0));vec3 totalEmissiveRadiance=uEmissive;PhysicalMaterial material;material.diffuseColor=diffuseColor.rgb*(1.0-uMetalness);material.specularRoughness=clamp(uRoughness,0.04,1.0);material.specularColor=mix(vec3(MAXIMUM_SPECULAR_COEFFICIENT),diffuseColor.rgb,uMetalness);\n#ifdef USE_CLEARCOAT\nmaterial.clearcoat=saturate(uClearCoat);material.clearcoatRoughness=clamp(uClearCoatRoughness,0.04,1.0);\n#endif\n#ifdef USE_SHEEN\nmaterial.sheenColor=uSheen;\n#endif\nGeometricContext geometry;geometry.position=-vViewPosition;geometry.normal=normal;geometry.viewDir=normalize(vViewPosition);geometry.clearcoatNormal=normal;IncidentLight directLight;directLight.color=light.color;directLight.direction=L;directLight.visible=true;RE_Direct(directLight,geometry,material,reflectedLight);vec3 iblIrradiance=vec3(0.0);vec3 irradiance=light.ambient*PI;vec3 radiance=vec3(0.0);vec3 clearcoatRadiance=vec3(0.0);RE_IndirectDiffuse(irradiance,geometry,material,reflectedLight);RE_IndirectSpecular(radiance,iblIrradiance,clearcoatRadiance,geometry,material,reflectedLight);gl_FragColor.rgb=reflectedLight.directDiffuse+reflectedLight.indirectDiffuse+reflectedLight.directSpecular+reflectedLight.indirectSpecular+totalEmissiveRadiance;gl_FragColor.a=uOpacity;}",ke=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:1,type:5126,components:3,normalize:!1},{semantic:4,type:5126,components:2,normalize:!1}]),We={0:"aPosition",1:"aNormal"},Xe={...We,4:"aTexcoord0"},qe={modelViewMatrix:["uModelViewMatrix","mat4"],modelViewNormalMatrix:["uModelViewMatrixNormal","mat3"],viewClipMatrix:["uProjectionMatrix","mat4"],worldViewNormalMatrix:["uWorldViewNormalMatrix","mat3"],color:["uColor","vec3"],emissiveColor:["uEmissive","vec3",[0,0,0]],roughness:["uRoughness","float",1],metalness:["uMetalness","float",0]},Ze={...qe,clearCoat:["uClearCoat","float",0],clearCoatRoughness:["uClearCoatRoughness","float",1]},Ye={...qe,sheenColor:["uSheen","vec3",[0,0,0]]},Je={...Ze,sheenColor:["uSheen","vec3",[0,0,0]]},$e={...qe,colorTexture:["texColor","int",0]},Ke={...Ze,colorTexture:["texColor","int",0]},Qe={...Ye,colorTexture:["texColor","int",0]},et={...Je,colorTexture:["texColor","int",0]},tt={...qe,opacity:["uOpacity","float",1]},nt={...Ze,opacity:["uOpacity","float",1]},ot={...Ye,opacity:["uOpacity","float",1]},rt={...Je,opacity:["uOpacity","float",1]},it={...tt,colorTexture:["texColor","int",0]},at={...nt,colorTexture:["texColor","int",0]},st={...ot,colorTexture:["texColor","int",0]},lt={...rt,colorTexture:["texColor","int",0]};class ct extends K{modelViewUniforms={modelViewMatrix:b(),modelViewNormalMatrix:g()};constructor(e,t,n){super(e,t,n)}computeMeshUniforms=(e,t)=>{const{modelViewUniforms:n}=this;if(t.uniforms){const o=t.uniforms.modelWorldMatrix;if(o){const{cameraUniforms:t}=e,{modelViewMatrix:r,modelViewNormalMatrix:i}=n;D(r,t.modelViewMatrix,o),_(i,r)}}return n}}class ft extends ct{constructor(e,t){super(e,t)}state={...k,2884:!0,3024:!1,2929:!0}}(ft||(ft={})).contextData={shaders:{vertex:je,fragment:He,flags:[]},vertexLayout:ke,vertexSemanticNames:We,uniforms:qe};class ut extends ct{constructor(e,t,n){super(e,t,n)}state={...k,3024:!1,2929:!0}}(ut||(ut={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_TEXTURES"]},vertexLayout:ke,vertexSemanticNames:Xe,uniforms:$e,textureSlots:[{textureSemantic:"diffuse",shaderUniform:"texColor",samplerState:H}]};class dt extends ct{constructor(e,t){super(e,t)}state={...k,2884:!1,2929:!0,2930:!1,3024:!1,3042:!0,32969:770,32968:771}}(dt||(dt={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_OPACITY"]},vertexLayout:ke,vertexSemanticNames:We,uniforms:tt};class mt extends ct{constructor(e,t,n){super(e,t,n)}state={...k,2884:!1,2929:!0,2930:!1,3024:!1,3042:!0,32969:770,32968:771}}(mt||(mt={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_OPACITY","USE_TEXTURES"]},vertexLayout:ke,vertexSemanticNames:Xe,uniforms:it,textureSlots:[{textureSemantic:"diffuse",shaderUniform:"texColor",samplerState:H}]};class pt extends ct{constructor(e,t){super(e,t)}state={...k,2884:!0,3024:!1,2929:!0}}(pt||(pt={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_CLEARCOAT"]},vertexLayout:ke,vertexSemanticNames:We,uniforms:Ze};class xt extends ct{constructor(e,t,n){super(e,t,n)}state={...k,3024:!1,2929:!0}}(xt||(xt={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_TEXTURES","USE_CLEARCOAT"]},vertexLayout:ke,vertexSemanticNames:Xe,uniforms:Ke,textureSlots:[{textureSemantic:"diffuse",shaderUniform:"texColor",samplerState:H}]};class vt extends ct{constructor(e,t){super(e,t)}state={...k,2884:!1,2929:!0,2930:!1,3024:!1,3042:!0,32969:770,32968:771}}(vt||(vt={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_OPACITY","USE_CLEARCOAT"]},vertexLayout:ke,vertexSemanticNames:We,uniforms:nt};class ht extends ct{constructor(e,t,n){super(e,t,n)}state={...k,2884:!1,2929:!0,2930:!1,3024:!1,3042:!0,32969:770,32968:771}}(ht||(ht={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_OPACITY","USE_TEXTURES","USE_CLEARCOAT"]},vertexLayout:ke,vertexSemanticNames:Xe,uniforms:at,textureSlots:[{textureSemantic:"diffuse",shaderUniform:"texColor",samplerState:H}]};class gt extends ct{constructor(e,t){super(e,t)}state={...k,2884:!0,3024:!1,2929:!0}}(gt||(gt={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_SHEEN"]},vertexLayout:ke,vertexSemanticNames:We,uniforms:Ye};class _t extends ct{constructor(e,t,n){super(e,t,n)}state={...k,3024:!1,2929:!0}}(_t||(_t={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_TEXTURES","USE_SHEEN"]},vertexLayout:ke,vertexSemanticNames:Xe,uniforms:Qe,textureSlots:[{textureSemantic:"diffuse",shaderUniform:"texColor",samplerState:H}]};class bt extends ct{constructor(e,t){super(e,t)}state={...k,2884:!1,2929:!0,2930:!1,3024:!1,3042:!0,32969:770,32968:771}}(bt||(bt={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_OPACITY","USE_SHEEN"]},vertexLayout:ke,vertexSemanticNames:We,uniforms:ot};class Et extends ct{constructor(e,t,n){super(e,t,n)}state={...k,2884:!1,2929:!0,2930:!1,3024:!1,3042:!0,32969:770,32968:771}}(Et||(Et={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_OPACITY","USE_TEXTURES","USE_SHEEN"]},vertexLayout:ke,vertexSemanticNames:Xe,uniforms:st,textureSlots:[{textureSemantic:"diffuse",shaderUniform:"texColor",samplerState:H}]};class Ct extends ct{constructor(e,t){super(e,t)}state={...k,2884:!0,3024:!1,2929:!0}}(Ct||(Ct={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_CLEARCOAT","USE_SHEEN"]},vertexLayout:ke,vertexSemanticNames:We,uniforms:Je};class Rt extends ct{constructor(e,t,n){super(e,t,n)}state={...k,3024:!1,2929:!0}}(Rt||(Rt={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_TEXTURES","USE_CLEARCOAT","USE_SHEEN"]},vertexLayout:ke,vertexSemanticNames:Xe,uniforms:et,textureSlots:[{textureSemantic:"diffuse",shaderUniform:"texColor",samplerState:H}]};class Dt extends ct{constructor(e,t){super(e,t)}state={...k,2884:!1,2929:!0,2930:!1,3024:!1,3042:!0,32969:770,32968:771}}(Dt||(Dt={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_OPACITY","USE_CLEARCOAT","USE_SHEEN"]},vertexLayout:ke,vertexSemanticNames:We,uniforms:rt};class Nt extends ct{constructor(e,t,n){super(e,t,n)}state={...k,2884:!1,2929:!0,2930:!1,3024:!1,3042:!0,32969:770,32968:771}}(Nt||(Nt={})).contextData={shaders:{vertex:je,fragment:He,flags:["USE_OPACITY","USE_TEXTURES","USE_CLEARCOAT","USE_SHEEN"]},vertexLayout:ke,vertexSemanticNames:Xe,uniforms:lt,textureSlots:[{textureSemantic:"diffuse",shaderUniform:"texColor",samplerState:H}]};const Mt="precision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying out\n#define texture2D texture\n#else\n#if defined(RENDER_COLOR)\n#undef RENDER_NORMAL\n#undef RENDER_DEPTH\n#endif\n#endif\nattribute vec4 aPosition;attribute vec3 aNormal;attribute vec2 aTexcoord0;attribute vec3 aTexcoord1;const int MaxClippingPlanes=6;uniform mat4 uModelClipMatrix;uniform mat4 uModelWorldMatrix;uniform mat4 uModelViewMatrix;uniform mat3 uModelWorldMatrixNormal;uniform mat3 uModelViewMatrixNormal;uniform mat3 uViewWorldMatrixNormal;uniform float uNumMaterials;uniform vec2 uObjectInfoTextureSize;uniform float uOctantMask;uniform vec4 uClippingPlanes[MaxClippingPlanes];uniform float uNumClippingPlanes;uniform bool uClipInside;uniform vec3 uSunDir;uniform float uSunBrightness;uniform float uAmbientLight;uniform vec4 uHeadlightColor;uniform float uHeadlightDistance;uniform float uElevationRangeMin,uElevationRangeMax;uniform float uMipCount;uniform float uOutlineEnabled;uniform vec4 uOutlineColor;uniform sampler2D texMaterialProperties;uniform sampler2D texObjectInfo;uniform sampler2D texColorMatrices;uniform sampler2D texElevationColors;uniform samplerCube texIrradiance;uniform samplerCube texEnvironment;varying vec3 vPositionVS;\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nvarying vec3 vObjectIndex;\n#else\nflat varying uint vObjectIndex;\n#endif\n#endif\n#if defined(RENDER_DEPTH) || defined(RENDER_OUTLINE)\nvarying float vLinearZ;\n#endif\n#if defined(RENDER_NORMAL)\nvarying vec3 vNormalVS;\n#endif\n#if defined(RENDER_COLOR)\nvarying vec3 vNormalWS;varying vec2 vTextureCoord0;\n#endif\n#if defined(RENDER_COLOR) || !defined(USE_ALPHA_BLEND)\nvarying float vObjectHighlight;varying vec2 vTextureCoord1;\n#endif\n#if defined(RENDER_ELEVATION)\nvarying float vElevationTexCoord;\n#endif\n#if __VERSION__ == 100\nfloat round(float value){return floor(value+0.5);}\n#endif\nbool bitTest(float bits,float bitValue){return mod(floor(bits/bitValue),2.0)==1.0;}void main(){\n#if defined(RENDER_ELEVATION)\nif(uElevationRangeMin>uElevationRangeMax)return;\n#endif\nfloat w=uObjectInfoTextureSize.x;float h=uObjectInfoTextureSize.y;vec2 objectInfoUV=vec2((mod(aTexcoord1.z,w)+0.5)/w,(floor(aTexcoord1.z/w)+0.5)/h);float octantBits=round(aTexcoord1.x);if(octantBits!=float(0xff)&&!bitTest(uOctantMask,octantBits))return;float objectHighlight=round(texture2D(texObjectInfo,objectInfoUV).x*255.0);bool hidden=objectHighlight==255.0;if(hidden)return;\n#if defined(RENDER_COLOR) || !defined(USE_ALPHA_BLEND)\nvObjectHighlight=objectHighlight;vTextureCoord1=vec2(aTexcoord1.x,(aTexcoord1.y+0.5)/uNumMaterials);\n#endif\ngl_Position=uModelClipMatrix*aPosition;vPositionVS=vec3(uModelViewMatrix*aPosition);\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nfloat objectIndex=aTexcoord1.z;float r=floor(mod(objectIndex/float(0x1),256.0))/255.0;float g=floor(mod(objectIndex/float(0x100),256.0))/255.0;float b=floor(mod(objectIndex/float(0x10000),256.0))/255.0;vObjectIndex=vec3(r,g,b);\n#else\nvObjectIndex=uint(aTexcoord1.z);\n#endif\n#endif\n#if defined(RENDER_DEPTH)\nvLinearZ=-vPositionVS.z;\n#endif\n#if defined(RENDER_NORMAL)\nvNormalVS=uModelViewMatrixNormal*aNormal;\n#endif\n#if defined(RENDER_COLOR)\nvNormalWS=uModelWorldMatrixNormal*aNormal;vTextureCoord0=aTexcoord0;\n#if defined(RENDER_ELEVATION)\nvElevationTexCoord=(uElevationRangeMin==uElevationRangeMax)? 0.0 :((uModelWorldMatrix*aPosition).y-uElevationRangeMin)/(uElevationRangeMax-uElevationRangeMin);\n#endif\n#endif\n}",St="#if __VERSION__ == 100\n#extension GL_OES_standard_derivatives: enable\n#extension GL_EXT_shader_texture_lod : enable\n#endif\nprecision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying in\n#define texture2D texture\n#define textureCube texture\n#define textureCubeLodEXT textureLod\n#if defined(RENDER_COLOR)\nlayout(location=0)out vec4 fragColor;\n#endif\n#if defined(RENDER_NORMAL)\nlayout(location=1)out vec4 fragNormal;\n#endif\n#if defined(RENDER_DEPTH)\nlayout(location=2)out vec4 fragDepth;\n#endif\n#if defined(RENDER_OBJECT_INDEX)\nlayout(location=0)out uvec4 fragObjectIndex;\n#endif\n#else\n#if defined(RENDER_COLOR)\n#undef RENDER_NORMAL\n#undef RENDER_DEPTH\n#endif\n#define fragColor gl_FragColor\n#define fragNormal gl_FragColor\n#define fragDepth gl_FragColor\n#define fragObjectIndex gl_FragColor\n#endif\nconst int MaxClippingPlanes=6;uniform mat4 uModelClipMatrix;uniform mat4 uModelWorldMatrix;uniform mat4 uModelViewMatrix;uniform mat3 uModelWorldMatrixNormal;uniform mat3 uModelViewMatrixNormal;uniform mat3 uViewWorldMatrixNormal;uniform float uNumMaterials;uniform vec2 uObjectInfoTextureSize;uniform float uOctantMask;uniform vec4 uClippingPlanes[MaxClippingPlanes];uniform float uNumClippingPlanes;uniform bool uClipInside;uniform vec3 uSunDir;uniform float uSunBrightness;uniform float uAmbientLight;uniform vec4 uHeadlightColor;uniform float uHeadlightDistance;uniform float uElevationRangeMin,uElevationRangeMax;uniform float uMipCount;uniform float uOutlineEnabled;uniform vec4 uOutlineColor;uniform sampler2D texMaterialProperties;uniform sampler2D texObjectInfo;uniform sampler2D texColorMatrices;uniform sampler2D texElevationColors;uniform samplerCube texIrradiance;uniform samplerCube texEnvironment;varying vec3 vPositionVS;\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nvarying vec3 vObjectIndex;\n#else\nflat varying uint vObjectIndex;\n#endif\n#endif\n#if defined(RENDER_DEPTH) || defined(RENDER_OUTLINE)\nvarying float vLinearZ;\n#endif\n#if defined(RENDER_NORMAL)\nvarying vec3 vNormalVS;\n#endif\n#if defined(RENDER_COLOR)\nvarying vec3 vNormalWS;varying vec2 vTextureCoord0;\n#endif\n#if defined(RENDER_COLOR) || !defined(USE_ALPHA_BLEND)\nvarying float vObjectHighlight;varying vec2 vTextureCoord1;\n#endif\n#if defined(RENDER_ELEVATION)\nvarying float vElevationTexCoord;\n#endif\n#if __VERSION__ == 100\nfloat round(float value){return floor(value+0.5);}\n#endif\nbool bitTest(float bits,float bitValue){return mod(floor(bits/bitValue),2.0)==1.0;}const float GAMMA=2.2;const float INV_GAMMA=1.0/GAMMA;vec3 linearTosRGB(vec3 color){return pow(color,vec3(INV_GAMMA));}vec3 sRGBToLinear(vec3 srgbIn){return vec3(pow(srgbIn.xyz,vec3(GAMMA)));}vec3 toneMapACES_Narkowicz(vec3 color){const float A=2.51;const float B=0.03;const float C=2.43;const float D=0.59;const float E=0.14;return clamp((color*(A*color+B))/(color*(C*color+D)+E),0.0,1.0);}vec3 RRTAndODTFit(vec3 color){vec3 a=color*(color+0.0245786)-0.000090537;vec3 b=color*(0.983729*color+0.4329510)+0.238081;return a/b;}vec4 floatToRgba(float texelFloat,bool littleEndian){int exponent=int(log2(abs(texelFloat))+1.0);texelFloat/=exp2(float(exponent));texelFloat=(texelFloat+1.0)*(256.0*256.0*256.0-1.0)/(2.0*256.0*256.0*256.0);vec4 encode=fract(texelFloat*vec4(1.0,256.0,256.0*256.0,256.0*256.0*256.0));vec4 res=vec4(encode.xyz-encode.yzw/256.0+1.0/512.0,(float(exponent)+127.5)/256.0);return littleEndian ? res : res.abgr;}float rgbaToFloat(vec4 pack,bool littleEndian){if(!littleEndian)pack=pack.abgr;int exponent=int(pack.w*256.0-127.0);float value=dot(pack.xyz,1.0/vec3(1.0,256.0,256.0*256.0));value=value*(2.0*256.0*256.0*256.0)/(256.0*256.0*256.0-1.0)-1.0;return value*exp2(float(exponent));}const float roughness=1.0;const float albedo=0.95;const float maxHDR=16.0;float phongSpecular(vec3 lightDirection,vec3 viewDirection,vec3 surfaceNormal,float shininess){vec3 R=-reflect(lightDirection,surfaceNormal);return pow(max(0.0,dot(viewDirection,R)),shininess);}\n#define PI 3.14159265\nfloat orenNayarDiffuse(vec3 lightDirection,vec3 viewDirection,vec3 surfaceNormal,float roughness,float albedo){float LdotV=dot(lightDirection,viewDirection);float NdotL=dot(lightDirection,surfaceNormal);float NdotV=dot(surfaceNormal,viewDirection);float s=LdotV-NdotL*NdotV;float t=mix(1.0,max(NdotL,NdotV),step(0.0,s));float sigma2=roughness*roughness;float A=1.0+sigma2*(albedo/(sigma2+0.13)+0.5/(sigma2+0.33));float B=0.45*sigma2/(sigma2+0.09);return albedo*max(0.0,NdotL)*(A+B*s/t)/PI;}const mat4 ditherThresholds=mat4(0.0/16.0,8.0/16.0,2.0/16.0,10.0/16.0,12.0/16.0,4.0/16.0,14.0/16.0,6.0/16.0,3.0/16.0,11.0/16.0,1.0/16.0,9.0/16.0,15.0/16.0,7.0/16.0,13.0/16.0,5.0/16.0);float dither(vec2 xy){float y=mod(xy.y,4.0);vec4 row;if(y<1.0)row=ditherThresholds[0];else if(y<2.0)row=ditherThresholds[1];else if(y<3.0)row=ditherThresholds[2];else row=ditherThresholds[3];float x=mod(xy.x,4.0);float threshold;if(x<1.0)threshold=row[0];else if(x<2.0)threshold=row[1];else if(x<3.0)threshold=row[2];else threshold=row[3];return threshold;}void main(){\n#if defined(RENDER_OUTLINE)\nfloat lzX=dFdx(vLinearZ)+vLinearZ;float lzY=dFdy(vLinearZ)+vLinearZ;if(!((vLinearZ<=0.&&lzX>0.)||(vLinearZ>=0.&&lzX<0.)||(vLinearZ<=0.&&lzY>0.)||(vLinearZ>=0.&&lzY<0.))){discard;}\n#endif\nvec4 vPVS=vec4(vPositionVS,1);bool inside=uNumClippingPlanes>0.0;int nc=int(uNumClippingPlanes);for(int i=0;i<MaxClippingPlanes;i++){if(!inside||i>=nc)break;inside=dot(vPVS,uClippingPlanes[i])<=0.0;}if(inside==uClipInside)discard;\n#if defined(RENDER_COLOR) || !defined(USE_ALPHA_BLEND)\n#if defined(RENDER_ELEVATION)\nvec4 diffuseOpacity=texture2D(texElevationColors,vec2(vElevationTexCoord,0.0));\n#else\nvec4 diffuseOpacity=texture2D(texMaterialProperties,vec2(vTextureCoord1.y,0.5/2.0));\n#endif\ndiffuseOpacity.rgb=sRGBToLinear(diffuseOpacity.rgb);float objectHighlight=round(vObjectHighlight);float u=(objectHighlight+0.5)/256.0;mat4 colorTransform;colorTransform[0]=texture2D(texColorMatrices,vec2(u,0.5/5.0));colorTransform[1]=texture2D(texColorMatrices,vec2(u,1.5/5.0));colorTransform[2]=texture2D(texColorMatrices,vec2(u,2.5/5.0));colorTransform[3]=texture2D(texColorMatrices,vec2(u,3.5/5.0));vec4 colorTranslation=texture2D(texColorMatrices,vec2(u,4.5/5.0));diffuseOpacity=colorTransform*diffuseOpacity+colorTranslation;\n#if !defined(USE_ALPHA_BLEND)\nif((diffuseOpacity.a-0.5/16.0)<dither(gl_FragCoord.xy))discard;\n#endif\n#endif\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nfragObjectIndex=vec4(vObjectIndex,0.0);\n#else\nfragObjectIndex=uvec4(vObjectIndex,0,0,0);\n#endif\n#endif\n#if defined(RENDER_DEPTH)\n#if __VERSION__ == 100\nfragDepth=floatToRgba(vLinearZ,true);\n#else\nfragDepth=vec4(vLinearZ,0,0,1);\n#endif\n#endif\n#if defined(RENDER_NORMAL)\nfragNormal=vec4(normalize(gl_FrontFacing ? vNormalVS :-vNormalVS),1);\n#endif\n#if defined(RENDER_COLOR)\nvec4 specularShininess=texture2D(texMaterialProperties,vec2(vTextureCoord1.y,1.5/2.0));specularShininess.rgb=sRGBToLinear(specularShininess.rgb);vec3 V=uViewWorldMatrixNormal*normalize(vPositionVS);vec3 N=normalize(gl_FrontFacing ? vNormalWS :-vNormalWS);vec3 irradiance=textureCube(texIrradiance,N).rgb;float perceptualRoughness=clamp((1.0-specularShininess.a),0.0,1.0);perceptualRoughness*=perceptualRoughness;float lod=perceptualRoughness*(uMipCount-1.0);vec3 reflection=textureCubeLodEXT(texEnvironment,reflect(V,N),lod).rgb;if(uSunBrightness>.0){vec3 L=uSunDir;if(specularShininess.a>0.0)reflection+=uSunBrightness*phongSpecular(L,-V,N,specularShininess.a*255.0)+uAmbientLight;irradiance+=uSunBrightness*orenNayarDiffuse(L,-V,N,roughness,albedo)+uAmbientLight;}else if(uAmbientLight>.0){if(specularShininess.a>0.0)reflection+=uAmbientLight;irradiance+=uAmbientLight;}if(uHeadlightColor.a>.0){float falloff=1.0-length(vPositionVS)/uHeadlightDistance;if(falloff>0.0){if(specularShininess.a>0.0)reflection+=uHeadlightColor.rgb*(phongSpecular(-V,V,N,specularShininess.a*255.0)*uHeadlightColor.a*falloff);irradiance+=uHeadlightColor.rgb*(orenNayarDiffuse(-V,V,N,roughness,albedo)*uHeadlightColor.a*falloff);}}vec3 color=diffuseOpacity.rgb*irradiance+specularShininess.rgb*reflection;\n#if defined(RENDER_OUTLINE)\nif(dot(uOutlineColor,uOutlineColor)==0.){color=diffuseOpacity.rgb;}else{color=uOutlineColor.rgb;diffuseOpacity.a=uOutlineColor.a;}\n#endif\nfragColor.rgb=color;\n#if defined(USE_ALPHA_BLEND)\nfragColor.a=diffuseOpacity.a;\n#else\nfragColor.a=1.0;\n#endif\n#endif\n}",yt=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:1,type:5126,components:3,normalize:!1},{semantic:4,type:5126,components:2,normalize:!1},{semantic:22,type:5126,components:3,normalize:!1}]),Tt={0:"aPosition",1:"aNormal",4:"aTexcoord0",22:"aTexcoord1"},wt={modelClipMatrix:["uModelClipMatrix","mat4"],modelWorldMatrix:["uModelWorldMatrix","mat4"],modelViewMatrix:["uModelViewMatrix","mat4"],modelWorldNormalMatrix:["uModelWorldMatrixNormal","mat3"],viewWorldNormalMatrix:["uViewWorldMatrixNormal","mat3"],modelViewNormalMatrix:["uModelViewMatrixNormal","mat3"],numMaterials:["uNumMaterials","float"],mipCount:["uMipCount","float"],objectInfoTextureSize:["uObjectInfoTextureSize","vec2"],octantMask:["uOctantMask","float",0],elevationRangeMin:["uElevationRangeMin","float",1],elevationRangeMax:["uElevationRangeMax","float",-1],clippingPlanes0:["uClippingPlanes[0]","vec4",w()],clippingPlanes1:["uClippingPlanes[1]","vec4",w()],clippingPlanes2:["uClippingPlanes[2]","vec4",w()],clippingPlanes3:["uClippingPlanes[3]","vec4",w()],clippingPlanes4:["uClippingPlanes[4]","vec4",w()],clippingPlanes5:["uClippingPlanes[5]","vec4",w()],numClippingPlanes:["uNumClippingPlanes","float"],clipInside:["uClipInside","bool"],headlightColor:["uHeadlightColor","vec4"],headlightDistance:["uHeadlightDistance","float"],sunDirection:["uSunDir","vec3"],sunBrightness:["uSunBrightness","float"],ambientLight:["uAmbientLight","float"],outlineEnabled:["uOutlineEnabled","float",0],outlineColor:["uOutlineColor","vec4",w()]},Lt={type:3553,10240:9728,10241:9728,10242:33071,10243:33071},It=[{textureSemantic:"material_properties",shaderUniform:"texMaterialProperties",samplerState:Lt},{textureSemantic:"object_info",shaderUniform:"texObjectInfo",samplerState:Lt},{textureSemantic:"color_matrix",shaderUniform:"texColorMatrices",samplerState:Lt},{textureSemantic:"elevation",shaderUniform:"texElevationColors",samplerState:Lt},{textureSemantic:"irradiance",shaderUniform:"texIrradiance",samplerState:{type:34067,10240:9729,10241:9729,10242:33071,10243:33071}},{textureSemantic:"radiance",shaderUniform:"texEnvironment",samplerState:{type:34067,10240:9729,10241:9987,10242:33071,10243:33071}}];class Ot extends K{cameraUniforms={modelWorldMatrix:b(),modelClipMatrix:b(),modelViewMatrix:b()};constructor(e,t,n){super(e,t,n)}isDoubleSided=e=>e.settings.advanced.doubleSided.opaque;computeUniforms=e=>{const{settings:t,cameraUniforms:n,textures:o,sceneTextures:r}=e,i=L(1,1,1,t.light.camera.brightness),a=t.light.camera?.distance??10;let s={},l=0,c=!0;if(t.clippingPlanes&&t.clippingPlanes.enabled){const e=[L(-1,0,0,t.clippingPlanes.bounds.min[0]),L(0,-1,0,t.clippingPlanes.bounds.min[1]),L(0,0,-1,t.clippingPlanes.bounds.min[2]),L(1,0,0,-t.clippingPlanes.bounds.max[0]),L(0,1,0,-t.clippingPlanes.bounds.max[1]),L(0,0,1,-t.clippingPlanes.bounds.max[2])],o=R(b(),n.worldViewMatrix);C(o,o);for(const t of e)V(t,t,o);for(let t=0;t<6;t++)s[`clippingPlanes${t}`]=e[t];l=6,c=t.clippingPlanes.inside}const{clippingVolume:f}=t;if(f.enabled){const e="intersection"==f.mode,t=[w(),w(),w(),w(),w(),w()],{planes:o}=f;l=Math.min(6,o.length);for(let n=0;n<l;n++)e?O(t[n],o[n]):I(t[n],o[n]);const r=R(b(),n.worldViewMatrix);C(r,r);for(const e of t)V(e,e,r);for(let e=0;e<6;e++)s[`clippingPlanes${e}`]=t[e];c=e}const u=t.light.sun?.brightness??0,d=Te(t.light.sun?.position),m=t.light.ambient?.brightness??0,p=this.textureReferences.radiance??r.radiance,x=void 0!==p?o.getTexture(p):void 0,v=x?x.mips:1;this.state={...this.state,2884:!this.isDoubleSided(e)};const h=e.settings.outline.enable?1:0,g=e.settings.outline.color??[0,0,0,0];return{headlightColor:i,headlightDistance:a,sunBrightness:u,sunDirection:d,ambientLight:m,...s,numClippingPlanes:l,clipInside:c,mipCount:v,outlineEnabled:h,outlineColor:g}};computeMeshUniforms=(e,t)=>{const{cameraUniforms:n}=e,{modelWorldMatrix:o,modelClipMatrix:r,modelViewMatrix:i}=this.cameraUniforms;return t.modelWorldMatrix?(E(o,t.modelWorldMatrix),D(r,n.worldClipMatrix,o),D(i,n.worldViewMatrix,o)):(E(o,n.modelWorldMatrix),E(r,n.modelClipMatrix),E(i,n.modelViewMatrix)),this.cameraUniforms};state={...k,3024:!1,2929:!0,2884:!0,2932:515}}!function(e){e.contextData={shaders:{vertex:Mt,fragment:St,flags:["RENDER_COLOR","RENDER_NORMAL","RENDER_DEPTH"]},webGL1:!0,webGL2:!0,vertexLayout:yt,vertexSemanticNames:Tt,uniforms:wt,textureSlots:It},e.objectIndexVariant="octree_pick",e.depthVariant="octree_depth",e.normalVariant="octree_normal",e.outlineVariant="octree_outline",e.isDoubleSided=function(e){throw new Error("Function not implemented.")}}(Ot||(Ot={}));class Vt extends Ot{constructor(e,t,n){super(e,t,n)}state={...k,3024:!1,2929:!0,2930:!1,2884:!0,3042:!0,32969:770,32971:1,32968:771,32970:1,2932:515};isDoubleSided=e=>e.settings.advanced.doubleSided.transparent}!function(e){e.contextData={shaders:{vertex:Mt,fragment:St,flags:["RENDER_COLOR","RENDER_NORMAL","RENDER_DEPTH","USE_ALPHA_BLEND"]},webGL1:!0,webGL2:!0,vertexLayout:yt,vertexSemanticNames:Tt,uniforms:wt,textureSlots:It,renderOrder:1},e.objectIndexVariant="octree_pick",e.depthVariant="octree_depth",e.normalVariant="octree_normal"}(Vt||(Vt={}));class Pt extends Ot{constructor(e,t,n){super(e,t,n)}isDoubleSided=e=>!0}!function(e){e.contextData={...Ot.contextData},e.objectIndexVariant="octree_ds_pick",e.depthVariant="octree_ds_depth",e.normalVariant="octree_ds_normal",e.outlineVariant="octree_ds_outline"}(Pt||(Pt={}));class At extends Vt{constructor(e,t,n){super(e,t,n)}isDoubleSided=e=>!0}!function(e){e.contextData={...Vt.contextData},e.objectIndexVariant="octree_ds_pick",e.depthVariant="octree_ds_depth",e.normalVariant="octree_ds_normal"}(At||(At={}));class Ut extends Ot{constructor(e,t,n){super(e,t,n)}}(Ut||(Ut={})).contextData={...Ot.contextData,shaders:{...Ot.contextData.shaders,flags:["RENDER_OBJECT_INDEX"]},webGL1:!0,webGL2:"OffscreenCanvas"in self};class Ft extends Ot{constructor(e,t,n){super(e,t,n)}}(Ft||(Ft={})).contextData={...Ot.contextData,shaders:{...Ot.contextData.shaders,flags:["RENDER_DEPTH"]},webGL1:!0,webGL2:!0};class Bt extends Ot{constructor(e,t,n){super(e,t,n)}}(Bt||(Bt={})).contextData={...Ot.contextData,shaders:{...Ot.contextData.shaders,flags:["RENDER_NORMAL"]},webGL1:!0,webGL2:!0};class Gt extends Ot{constructor(e,t,n){super(e,t,n)}}(Gt||(Gt={})).contextData={...Ot.contextData,shaders:{...Ot.contextData.shaders,flags:["RENDER_OUTLINE","RENDER_DEPTH","RENDER_COLOR"]},webGL1:!0,webGL2:!0};class zt extends Pt{constructor(e,t,n){super(e,t,n)}}(zt||(zt={})).contextData={...Pt.contextData,shaders:{...Pt.contextData.shaders,flags:["RENDER_OUTLINE","RENDER_DEPTH","RENDER_COLOR"]},webGL1:!0,webGL2:!0};class jt extends Pt{constructor(e,t,n){super(e,t,n)}}(jt||(jt={})).contextData={...Pt.contextData,shaders:{...Pt.contextData.shaders,flags:["RENDER_OBJECT_INDEX"]},webGL1:!0,webGL2:"OffscreenCanvas"in self};class Ht extends Pt{constructor(e,t,n){super(e,t,n)}}(Ht||(Ht={})).contextData={...Pt.contextData,shaders:{...Pt.contextData.shaders,flags:["RENDER_DEPTH"]},webGL1:!0,webGL2:!0};class kt extends Pt{constructor(e,t,n){super(e,t,n)}}(kt||(kt={})).contextData={...Pt.contextData,shaders:{...Pt.contextData.shaders,flags:["RENDER_NORMAL"]},webGL1:!0,webGL2:!0};class Wt extends Ot{constructor(e,t,n){super(e,t,n)}cleanup(e){return super.cleanup(e),e.settings.terrain.asBackground}}!function(e){e.contextData={...Ot.contextData,shaders:{...Ot.contextData.shaders,flags:["RENDER_COLOR","RENDER_NORMAL","RENDER_DEPTH","RENDER_ELEVATION"]},webGL1:!0,webGL2:!0,renderOrder:-9},e.objectIndexVariant="octree_terrain_pick",e.depthVariant="octree_terrain_depth",e.normalVariant="octree_terrain_normal"}(Wt||(Wt={}));const Xt="precision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying out\n#define texture2D texture\n#else\n#if defined(RENDER_COLOR)\n#undef RENDER_NORMAL\n#undef RENDER_DEPTH\n#endif\n#endif\nattribute vec4 aPosition;attribute vec3 aNormal;attribute vec2 aTexcoord0;attribute vec3 aTexcoord1;const int MaxClippingPlanes=6;uniform mat4 uModelClipMatrix;uniform mat4 uModelWorldMatrix;uniform mat4 uModelViewMatrix;uniform mat3 uModelWorldMatrixNormal;uniform mat3 uModelViewMatrixNormal;uniform mat3 uViewWorldMatrixNormal;uniform vec2 uObjectInfoTextureSize;uniform float uOctantMask;uniform vec4 uClippingPlanes[MaxClippingPlanes];uniform float uNumClippingPlanes;uniform bool uClipInside;uniform float uOutlineEnabled;uniform vec4 uOutlineColor;uniform sampler2D texAlbedo;uniform sampler2D texObjectInfo;uniform sampler2D texColorMatrices;varying vec3 vPositionVS;\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nvarying vec3 vObjectIndex;\n#else\nflat varying uint vObjectIndex;\n#endif\n#endif\n#if defined(RENDER_DEPTH) || defined(RENDER_OUTLINE)\nvarying float vLinearZ;\n#endif\n#if defined(RENDER_NORMAL)\nvarying vec3 vNormalVS;\n#endif\n#if defined(RENDER_COLOR)\nvarying vec2 vTextureCoord0;\n#endif\nvarying float vObjectHighlight;\n#if __VERSION__ == 100\nfloat round(float value){return floor(value+0.5);}\n#endif\nbool bitTest(float bits,float bitValue){return mod(floor(bits/bitValue),2.0)==1.0;}void main(){float w=uObjectInfoTextureSize.x;float h=uObjectInfoTextureSize.y;vec2 objectInfoUV=vec2((mod(aTexcoord1.z,w)+0.5)/w,(floor(aTexcoord1.z/w)+0.5)/h);float octantBits=round(aTexcoord1.x);if(octantBits!=float(0xff)&&!bitTest(uOctantMask,octantBits))return;float objectHighlight=round(texture2D(texObjectInfo,objectInfoUV).x*255.0);bool hidden=objectHighlight==255.0;if(hidden)return;vObjectHighlight=objectHighlight;gl_Position=uModelClipMatrix*aPosition;vPositionVS=vec3(uModelViewMatrix*aPosition);\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nfloat objectIndex=aTexcoord1.z;float r=floor(mod(objectIndex/float(0x1),256.0))/255.0;float g=floor(mod(objectIndex/float(0x100),256.0))/255.0;float b=floor(mod(objectIndex/float(0x10000),256.0))/255.0;vObjectIndex=vec3(r,g,b);\n#else\nvObjectIndex=uint(aTexcoord1.z);\n#endif\n#endif\n#if defined(RENDER_DEPTH)\nvLinearZ=-vPositionVS.z;\n#endif\n#if defined(RENDER_NORMAL)\nvNormalVS=uModelViewMatrixNormal*aNormal;\n#endif\n#if defined(RENDER_COLOR)\nvTextureCoord0=aTexcoord0;\n#endif\n}",qt="#if __VERSION__ == 100\n#extension GL_OES_standard_derivatives: enable\n#extension GL_EXT_shader_texture_lod : enable\n#endif\nprecision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying in\n#define texture2D texture\n#define textureCube texture\n#define textureCubeLodEXT textureLod\n#if defined(RENDER_COLOR)\nlayout(location=0)out vec4 fragColor;\n#endif\n#if defined(RENDER_NORMAL)\nlayout(location=1)out vec4 fragNormal;\n#endif\n#if defined(RENDER_DEPTH)\nlayout(location=2)out vec4 fragDepth;\n#endif\n#if defined(RENDER_OBJECT_INDEX)\nlayout(location=0)out uvec4 fragObjectIndex;\n#endif\n#else\n#if defined(RENDER_COLOR)\n#undef RENDER_NORMAL\n#undef RENDER_DEPTH\n#endif\n#define fragColor gl_FragColor\n#define fragNormal gl_FragColor\n#define fragDepth gl_FragColor\n#define fragObjectIndex gl_FragColor\n#endif\nconst int MaxClippingPlanes=6;uniform mat4 uModelClipMatrix;uniform mat4 uModelWorldMatrix;uniform mat4 uModelViewMatrix;uniform mat3 uModelWorldMatrixNormal;uniform mat3 uModelViewMatrixNormal;uniform mat3 uViewWorldMatrixNormal;uniform vec2 uObjectInfoTextureSize;uniform float uOctantMask;uniform vec4 uClippingPlanes[MaxClippingPlanes];uniform float uNumClippingPlanes;uniform bool uClipInside;uniform float uOutlineEnabled;uniform vec4 uOutlineColor;uniform sampler2D texAlbedo;uniform sampler2D texObjectInfo;uniform sampler2D texColorMatrices;varying vec3 vPositionVS;\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nvarying vec3 vObjectIndex;\n#else\nflat varying uint vObjectIndex;\n#endif\n#endif\n#if defined(RENDER_DEPTH) || defined(RENDER_OUTLINE)\nvarying float vLinearZ;\n#endif\n#if defined(RENDER_NORMAL)\nvarying vec3 vNormalVS;\n#endif\n#if defined(RENDER_COLOR)\nvarying vec2 vTextureCoord0;\n#endif\nvarying float vObjectHighlight;\n#if __VERSION__ == 100\nfloat round(float value){return floor(value+0.5);}\n#endif\nbool bitTest(float bits,float bitValue){return mod(floor(bits/bitValue),2.0)==1.0;}const float GAMMA=2.2;const float INV_GAMMA=1.0/GAMMA;vec3 linearTosRGB(vec3 color){return pow(color,vec3(INV_GAMMA));}vec3 sRGBToLinear(vec3 srgbIn){return vec3(pow(srgbIn.xyz,vec3(GAMMA)));}vec3 toneMapACES_Narkowicz(vec3 color){const float A=2.51;const float B=0.03;const float C=2.43;const float D=0.59;const float E=0.14;return clamp((color*(A*color+B))/(color*(C*color+D)+E),0.0,1.0);}vec3 RRTAndODTFit(vec3 color){vec3 a=color*(color+0.0245786)-0.000090537;vec3 b=color*(0.983729*color+0.4329510)+0.238081;return a/b;}vec4 floatToRgba(float texelFloat,bool littleEndian){int exponent=int(log2(abs(texelFloat))+1.0);texelFloat/=exp2(float(exponent));texelFloat=(texelFloat+1.0)*(256.0*256.0*256.0-1.0)/(2.0*256.0*256.0*256.0);vec4 encode=fract(texelFloat*vec4(1.0,256.0,256.0*256.0,256.0*256.0*256.0));vec4 res=vec4(encode.xyz-encode.yzw/256.0+1.0/512.0,(float(exponent)+127.5)/256.0);return littleEndian ? res : res.abgr;}float rgbaToFloat(vec4 pack,bool littleEndian){if(!littleEndian)pack=pack.abgr;int exponent=int(pack.w*256.0-127.0);float value=dot(pack.xyz,1.0/vec3(1.0,256.0,256.0*256.0));value=value*(2.0*256.0*256.0*256.0)/(256.0*256.0*256.0-1.0)-1.0;return value*exp2(float(exponent));}const float maxHDR=16.0;const mat4 ditherThresholds=mat4(0.0/16.0,8.0/16.0,2.0/16.0,10.0/16.0,12.0/16.0,4.0/16.0,14.0/16.0,6.0/16.0,3.0/16.0,11.0/16.0,1.0/16.0,9.0/16.0,15.0/16.0,7.0/16.0,13.0/16.0,5.0/16.0);float dither(vec2 xy){float y=mod(xy.y,4.0);vec4 row;if(y<1.0)row=ditherThresholds[0];else if(y<2.0)row=ditherThresholds[1];else if(y<3.0)row=ditherThresholds[2];else row=ditherThresholds[3];float x=mod(xy.x,4.0);float threshold;if(x<1.0)threshold=row[0];else if(x<2.0)threshold=row[1];else if(x<3.0)threshold=row[2];else threshold=row[3];return threshold;}void main(){\n#if defined(RENDER_OUTLINE)\nfloat lzX=dFdx(vLinearZ)+vLinearZ;float lzY=dFdy(vLinearZ)+vLinearZ;if(!((vLinearZ<=0.&&lzX>0.)||(vLinearZ>=0.&&lzX<0.)||(vLinearZ<=0.&&lzY>0.)||(vLinearZ>=0.&&lzY<0.))){discard;}\n#endif\nvec4 vPVS=vec4(vPositionVS,1);bool inside=uNumClippingPlanes>0.0;int nc=int(uNumClippingPlanes);for(int i=0;i<MaxClippingPlanes;i++){if(!inside||i>=nc)break;inside=dot(vPVS,uClippingPlanes[i])<=0.0;}if(inside==uClipInside)discard;vec4 diffuseOpacity=texture2D(texAlbedo,vTextureCoord0);float objectHighlight=round(vObjectHighlight);float u=(objectHighlight+0.5)/256.0;mat4 colorTransform;colorTransform[0]=texture2D(texColorMatrices,vec2(u,0.5/5.0));colorTransform[1]=texture2D(texColorMatrices,vec2(u,1.5/5.0));colorTransform[2]=texture2D(texColorMatrices,vec2(u,2.5/5.0));colorTransform[3]=texture2D(texColorMatrices,vec2(u,3.5/5.0));vec4 colorTranslation=texture2D(texColorMatrices,vec2(u,4.5/5.0));diffuseOpacity=colorTransform*diffuseOpacity+colorTranslation;if((diffuseOpacity.a-0.5/16.0)<dither(gl_FragCoord.xy))discard;\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nfragObjectIndex=vec4(vObjectIndex,0.0);\n#else\nfragObjectIndex=uvec4(vObjectIndex,0,0,0);\n#endif\n#endif\n#if defined(RENDER_DEPTH)\n#if __VERSION__ == 100\nfragDepth=floatToRgba(vLinearZ,true);\n#else\nfragDepth=vec4(vLinearZ,0,0,1);\n#endif\n#endif\n#if defined(RENDER_NORMAL)\nfragNormal=vec4(normalize(gl_FrontFacing ? vNormalVS :-vNormalVS),1);\n#endif\n#if defined(RENDER_COLOR)\n#if defined(RENDER_OUTLINE)\nif(dot(uOutlineColor,uOutlineColor)!=0.){diffuseOpacity.rgb=uOutlineColor.rgb;}\n#endif\nfragColor.rgb=diffuseOpacity.rgb;fragColor.a=1.0;\n#endif\n}",Zt=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:1,type:5126,components:3,normalize:!1},{semantic:4,type:5126,components:2,normalize:!1},{semantic:22,type:5126,components:3,normalize:!1}]),Yt={0:"aPosition",1:"aNormal",4:"aTexcoord0",22:"aTexcoord1"},Jt={modelClipMatrix:["uModelClipMatrix","mat4"],modelWorldMatrix:["uModelWorldMatrix","mat4"],modelViewMatrix:["uModelViewMatrix","mat4"],modelWorldNormalMatrix:["uModelWorldMatrixNormal","mat3"],viewWorldNormalMatrix:["uViewWorldMatrixNormal","mat3"],modelViewNormalMatrix:["uModelViewMatrixNormal","mat3"],objectInfoTextureSize:["uObjectInfoTextureSize","vec2"],octantMask:["uOctantMask","float",0],clippingPlanes0:["uClippingPlanes[0]","vec4",w()],clippingPlanes1:["uClippingPlanes[1]","vec4",w()],clippingPlanes2:["uClippingPlanes[2]","vec4",w()],clippingPlanes3:["uClippingPlanes[3]","vec4",w()],clippingPlanes4:["uClippingPlanes[4]","vec4",w()],clippingPlanes5:["uClippingPlanes[5]","vec4",w()],numClippingPlanes:["uNumClippingPlanes","float"],clipInside:["uClipInside","bool"],outlineEnabled:["uOutlineEnabled","float",0],outlineColor:["uOutlineColor","vec4",w()]},$t={type:3553,10240:9728,10241:9728,10242:33071,10243:33071},Kt=[{textureSemantic:"albedo",shaderUniform:"texAlbedo",samplerState:{type:3553,10240:9729,10241:9729,10242:33071,10243:33071}},{textureSemantic:"object_info",shaderUniform:"texObjectInfo",samplerState:$t},{textureSemantic:"color_matrix",shaderUniform:"texColorMatrices",samplerState:$t}];class Qt extends K{cameraUniforms={modelWorldMatrix:b(),modelClipMatrix:b(),modelViewMatrix:b()};constructor(e,t,n){super(e,t,n)}isDoubleSided=e=>!0;computeUniforms=e=>{const{settings:t,cameraUniforms:n}=e;let o={},r=0,i=!0;if(t.clippingPlanes&&t.clippingPlanes.enabled){const e=[L(-1,0,0,t.clippingPlanes.bounds.min[0]),L(0,-1,0,t.clippingPlanes.bounds.min[1]),L(0,0,-1,t.clippingPlanes.bounds.min[2]),L(1,0,0,-t.clippingPlanes.bounds.max[0]),L(0,1,0,-t.clippingPlanes.bounds.max[1]),L(0,0,1,-t.clippingPlanes.bounds.max[2])],a=R(b(),n.worldViewMatrix);C(a,a);for(const t of e)V(t,t,a);for(let t=0;t<6;t++)o[`clippingPlanes${t}`]=e[t];r=6,i=t.clippingPlanes.inside}const{clippingVolume:a}=t;if(a.enabled){const e="intersection"==a.mode,t=[w(),w(),w(),w(),w(),w()],{planes:s}=a;r=Math.min(6,s.length);for(let n=0;n<r;n++)e?O(t[n],s[n]):I(t[n],s[n]);const l=R(b(),n.worldViewMatrix);C(l,l);for(const e of t)V(e,e,l);for(let e=0;e<6;e++)o[`clippingPlanes${e}`]=t[e];i=e}this.state={...this.state,2884:!this.isDoubleSided(e)};const s=e.settings.outline.enable?1:0,l=e.settings.outline.color??[0,0,0,0];return{...o,numClippingPlanes:r,clipInside:i,outlineEnabled:s,outlineColor:l}};computeMeshUniforms=(e,t)=>{const{cameraUniforms:n}=e,{modelWorldMatrix:o,modelClipMatrix:r,modelViewMatrix:i}=this.cameraUniforms;return t.modelWorldMatrix?(E(o,t.modelWorldMatrix),D(r,n.worldClipMatrix,o),D(i,n.worldViewMatrix,o)):(E(o,n.modelWorldMatrix),E(r,n.modelClipMatrix),E(i,n.modelViewMatrix)),this.cameraUniforms};cleanup(e){return super.cleanup(e),e.settings.terrain.asBackground}state={...k,3024:!1,2929:!0,2884:!0,2932:515}}!function(e){e.contextData={shaders:{vertex:Xt,fragment:qt,flags:["RENDER_COLOR","RENDER_NORMAL","RENDER_DEPTH"]},webGL1:!0,webGL2:!0,vertexLayout:Zt,vertexSemanticNames:Yt,uniforms:Jt,textureSlots:Kt,renderOrder:-9},e.objectIndexVariant="octree_terrain_pick",e.depthVariant="octree_terrain_depth",e.normalVariant="octree_terrain_normal",e.isDoubleSided=function(e){throw new Error("Function not implemented.")}}(Qt||(Qt={}));class en extends Qt{cleanup(e){return super.cleanup(e),!1}}!function(e){e.contextData={shaders:{vertex:Xt,fragment:qt,flags:["RENDER_COLOR","RENDER_NORMAL","RENDER_DEPTH"]},webGL1:!0,webGL2:!0,vertexLayout:Zt,vertexSemanticNames:Yt,uniforms:Jt,textureSlots:Kt},e.objectIndexVariant="octree_terrain_pick",e.depthVariant="octree_terrain_depth",e.normalVariant="octree_terrain_normal",e.isDoubleSided=function(e){throw new Error("Function not implemented.")}}(en||(en={}));const tn="precision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying out\n#define texture2D texture\n#else\n#if defined(RENDER_COLOR)\n#undef RENDER_NORMAL\n#undef RENDER_DEPTH\n#endif\n#endif\nattribute vec4 aPosition;attribute vec3 aColor;attribute vec3 aObjectInfo;\n#if defined(DEVIATION) || defined(_DEVIATION)\nattribute float aDeviation;\n#endif\n#if defined(INTENSITY) || defined(_INTENSITY)\nattribute float aIntensity;\n#endif\nconst int MaxClippingPlanes=6;uniform mat4 uModelViewMatrix;uniform mat4 uViewClipMatrix;uniform vec2 uWindowSize;uniform vec2 uObjectInfoTextureSize;uniform float uOctantMask;uniform float uPixelSize;uniform float uMaxPixelSize;uniform float uMetricSize;uniform float uTolerance;uniform float uToleranceFactor;uniform bool uRenderAsDisc;uniform vec4 uClippingPlanes[MaxClippingPlanes];uniform float uNumClippingPlanes;uniform bool uClipInside;uniform sampler2D texObjectInfo;uniform sampler2D texColorMatrices;\n#if defined(DEVIATION)\nuniform sampler2D texDeviationColors;uniform int uMode;uniform float uDeviationRangeMin;uniform float uDeviationRangeMax;\n#endif\n#if defined(INTENSITY)\nuniform sampler2D texIntensityColors;uniform int uIntensityMode;uniform float uIntensityRangeMin;uniform float uIntensityRangeMax;\n#endif\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nvarying vec3 vObjectIndex;\n#else\nflat varying uint vObjectIndex;\n#endif\n#endif\n#if defined(RENDER_DEPTH) || defined(_INTENSITY) || defined(_DEVIATION)\nvarying float vLinearZ;\n#endif\n#if defined(RENDER_COLOR)\nvarying vec4 vColor;\n#endif\nvarying vec2 vScreenPos;varying float vRadius;\n#if __VERSION__ == 100\nfloat round(float value){return floor(value+0.5);}\n#endif\nbool bitTest(float bits,float bitValue){return mod(floor(bits/bitValue),2.0)==1.0;}void main(){float octantBits=round(aObjectInfo.x);if(octantBits!=float(0xff)&&!bitTest(uOctantMask,octantBits))return;float objectIndex=aObjectInfo.z;float w=uObjectInfoTextureSize.x;float h=uObjectInfoTextureSize.y;vec2 objectInfoUV=vec2((mod(objectIndex,w)+0.5)/w,(floor(objectIndex/w)+0.5)/h);float objectHighlight=round(texture2D(texObjectInfo,objectInfoUV).x*255.0);bool hidden=objectHighlight==255.0;if(hidden)return;vec4 posVS=uModelViewMatrix*aPosition;bool inside=uNumClippingPlanes>0.0;int nc=int(uNumClippingPlanes);for(int i=0;i<MaxClippingPlanes;i++){if(!inside||i>=nc)break;inside=dot(posVS,uClippingPlanes[i])<=0.0;}if(inside==uClipInside)return;\n#if defined(RENDER_COLOR)\nfloat u=(objectHighlight+0.5)/256.0;mat4 colorTransform;colorTransform[0]=texture2D(texColorMatrices,vec2(u,0.1));colorTransform[1]=texture2D(texColorMatrices,vec2(u,0.3));colorTransform[2]=texture2D(texColorMatrices,vec2(u,0.5));colorTransform[3]=texture2D(texColorMatrices,vec2(u,0.7));vec4 colorTranslation=texture2D(texColorMatrices,vec2(u,0.9));vec4 color=vec4(aColor,1.0);\n#if defined(DEVIATION)\nif(uMode>0){float deviationTexCoord=(uDeviationRangeMin>=uDeviationRangeMax)? 0.0 :(aDeviation-uDeviationRangeMin)/(uDeviationRangeMax-uDeviationRangeMin);vec4 devcolor=texture2D(texDeviationColors,vec2(deviationTexCoord,0.0));if(uMode==1){if(devcolor.a<0.1)return;color=devcolor;}else if(devcolor.a>0.99)color.rgb=devcolor.rgb;else if(devcolor.a>0.01)color.rgb=aColor*(1.0-devcolor.a)+devcolor.rgb*devcolor.a;}\n#endif\n#if defined(INTENSITY)\nif(uIntensityMode>0){float intensityTexCoord=(uIntensityRangeMin>=uIntensityRangeMax)? 0.0 :(aIntensity-uIntensityRangeMin)/(uIntensityRangeMax-uIntensityRangeMin);vec4 intcolor=texture2D(texIntensityColors,vec2(intensityTexCoord,0.0));if(uIntensityMode==1){if(intcolor.a<0.1)return;color=intcolor;}else if(intcolor.a>0.99)color.rgb=intcolor.rgb;else if(intcolor.a>0.01)color.rgb=aColor*(1.0-intcolor.a)+intcolor.rgb*intcolor.a;}\n#endif\nvColor=colorTransform*color+colorTranslation;\n#endif\nfloat linearSize=uMetricSize+uTolerance*uToleranceFactor;gl_Position=uViewClipMatrix*posVS;float projectedSize=uViewClipMatrix[1][1]*linearSize*uWindowSize.y*0.5/gl_Position.w;gl_PointSize=min(uMaxPixelSize,max(1.0,uPixelSize+projectedSize));vec2 halfsize=uWindowSize*0.5;vScreenPos=halfsize+((gl_Position.xy/gl_Position.w)*halfsize);vRadius=max(1.0,gl_PointSize*0.5);\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nfloat r=floor(mod(objectIndex/float(0x1),256.0))/255.0;float g=floor(mod(objectIndex/float(0x100),256.0))/255.0;float b=floor(mod(objectIndex/float(0x10000),256.0))/255.0;vObjectIndex=vec3(r,g,b);\n#else\nvObjectIndex=uint(objectIndex);\n#endif\n#endif\n#if defined(RENDER_DEPTH)\nvLinearZ=gl_Position.z;\n#endif\n#if defined(_DEVIATION)\nvLinearZ=aDeviation;\n#endif\n#if defined(_INTENSITY)\nvLinearZ=aIntensity;\n#endif\n}",nn="#if __VERSION__ == 100\n#extension GL_OES_standard_derivatives: enable\n#extension GL_EXT_shader_texture_lod : enable\n#endif\nprecision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying in\n#if defined(RENDER_COLOR)\nlayout(location=0)out vec4 fragColor;\n#endif\n#if defined(RENDER_NORMAL)\nlayout(location=1)out vec4 fragNormal;\n#endif\n#if defined(RENDER_DEPTH)\nlayout(location=2)out vec4 fragDepth;\n#endif\n#if defined(RENDER_OBJECT_INDEX)\nlayout(location=0)out uvec4 fragObjectIndex;\n#endif\n#if defined(_INTENSITY)\nlayout(location=0)out vec4 fragIntensity;\n#endif\n#if defined(_DEVIATION)\nlayout(location=0)out vec4 fragDeviation;\n#endif\n#else\n#if defined(RENDER_COLOR)\n#undef RENDER_NORMAL\n#undef RENDER_DEPTH\n#endif\n#define fragColor gl_FragColor\n#define fragNormal gl_FragColor\n#define fragDepth gl_FragColor\n#define fragObjectIndex gl_FragColor\n#define fragIntensity gl_FragColor\n#define fragDeviation gl_FragColor\n#endif\nconst int MaxClippingPlanes=6;uniform mat4 uModelViewMatrix;uniform mat4 uViewClipMatrix;uniform vec2 uWindowSize;uniform vec2 uObjectInfoTextureSize;uniform float uOctantMask;uniform float uPixelSize;uniform float uMaxPixelSize;uniform float uMetricSize;uniform float uTolerance;uniform float uToleranceFactor;uniform bool uRenderAsDisc;uniform vec4 uClippingPlanes[MaxClippingPlanes];uniform float uNumClippingPlanes;uniform bool uClipInside;uniform sampler2D texObjectInfo;uniform sampler2D texColorMatrices;\n#if defined(DEVIATION)\nuniform sampler2D texDeviationColors;uniform int uMode;uniform float uDeviationRangeMin;uniform float uDeviationRangeMax;\n#endif\n#if defined(INTENSITY)\nuniform sampler2D texIntensityColors;uniform int uIntensityMode;uniform float uIntensityRangeMin;uniform float uIntensityRangeMax;\n#endif\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nvarying vec3 vObjectIndex;\n#else\nflat varying uint vObjectIndex;\n#endif\n#endif\n#if defined(RENDER_DEPTH) || defined(_INTENSITY) || defined(_DEVIATION)\nvarying float vLinearZ;\n#endif\n#if defined(RENDER_COLOR)\nvarying vec4 vColor;\n#endif\nvarying vec2 vScreenPos;varying float vRadius;\n#if __VERSION__ == 100\nfloat round(float value){return floor(value+0.5);}\n#endif\nbool bitTest(float bits,float bitValue){return mod(floor(bits/bitValue),2.0)==1.0;}vec4 floatToRgba(float texelFloat,bool littleEndian){int exponent=int(log2(abs(texelFloat))+1.0);texelFloat/=exp2(float(exponent));texelFloat=(texelFloat+1.0)*(256.0*256.0*256.0-1.0)/(2.0*256.0*256.0*256.0);vec4 encode=fract(texelFloat*vec4(1.0,256.0,256.0*256.0,256.0*256.0*256.0));vec4 res=vec4(encode.xyz-encode.yzw/256.0+1.0/512.0,(float(exponent)+127.5)/256.0);return littleEndian ? res : res.abgr;}float rgbaToFloat(vec4 pack,bool littleEndian){if(!littleEndian)pack=pack.abgr;int exponent=int(pack.w*256.0-127.0);float value=dot(pack.xyz,1.0/vec3(1.0,256.0,256.0*256.0));value=value*(2.0*256.0*256.0*256.0)/(256.0*256.0*256.0-1.0)-1.0;return value*exp2(float(exponent));}const mat4 ditherThresholds=mat4(0.0/16.0,8.0/16.0,2.0/16.0,10.0/16.0,12.0/16.0,4.0/16.0,14.0/16.0,6.0/16.0,3.0/16.0,11.0/16.0,1.0/16.0,9.0/16.0,15.0/16.0,7.0/16.0,13.0/16.0,5.0/16.0);float dither(vec2 xy){float y=mod(xy.y,4.0);vec4 row;if(y<1.0)row=ditherThresholds[0];else if(y<2.0)row=ditherThresholds[1];else if(y<3.0)row=ditherThresholds[2];else row=ditherThresholds[3];float x=mod(xy.x,4.0);float threshold;if(x<1.0)threshold=row[0];else if(x<2.0)threshold=row[1];else if(x<3.0)threshold=row[2];else threshold=row[3];return threshold;}void main(){if(uRenderAsDisc&&distance(gl_FragCoord.xy,vScreenPos)>vRadius)discard;\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nfragObjectIndex=vec4(vObjectIndex,0.0);\n#else\nfragObjectIndex=uvec4(vObjectIndex,0,0,0);\n#endif\n#endif\n#if defined(RENDER_DEPTH)\n#if __VERSION__ == 100\nfragDepth=floatToRgba(vLinearZ,true);\n#else\nfragDepth=vec4(vLinearZ,0,0,1);\n#endif\n#endif\n#if defined(_DEVIATION)\n#if __VERSION__ == 100\nfragDeviation=floatToRgba(vLinearZ,true);\n#else\nfragDeviation=vec4(vLinearZ,0,0,1);\n#endif\n#endif\n#if defined(_INTENSITY)\n#if __VERSION__ == 100\nfragIntensity=floatToRgba(vLinearZ,true);\n#else\nfragIntensity=vec4(vLinearZ,0,0,1);\n#endif\n#endif\n#if defined(RENDER_NORMAL)\nfragNormal=vec4(1,1,0,1);\n#endif\n#if defined(RENDER_COLOR)\nif((vColor.a-0.5/16.0)<dither(gl_FragCoord.xy))discard;fragColor=vec4(vColor.rgb,1.0);\n#endif\n}",on=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:12,type:5126,components:3,normalize:!1},{semantic:22,type:5126,components:3,normalize:!1}]),rn={0:"aPosition",12:"aColor",22:"aObjectInfo"},an={modelViewMatrix:["uModelViewMatrix","mat4"],viewClipMatrix:["uViewClipMatrix","mat4"],objectInfoTextureSize:["uObjectInfoTextureSize","vec2"],octantMask:["uOctantMask","float",0],clippingPlanes0:["uClippingPlanes[0]","vec4",w()],clippingPlanes1:["uClippingPlanes[1]","vec4",w()],clippingPlanes2:["uClippingPlanes[2]","vec4",w()],clippingPlanes3:["uClippingPlanes[3]","vec4",w()],clippingPlanes4:["uClippingPlanes[4]","vec4",w()],clippingPlanes5:["uClippingPlanes[5]","vec4",w()],numClippingPlanes:["uNumClippingPlanes","float"],clipInside:["uClipInside","bool"],windowSize:["uWindowSize","vec2"],pixelSize:["uPixelSize","float"],maxPixelSize:["uMaxPixelSize","float",20],metricSize:["uMetricSize","float"],tolerance:["uTolerance","float",0],toleranceFactor:["uToleranceFactor","float"],renderAsDisc:["uRenderAsDisc","bool"]},sn={type:3553,10240:9728,10241:9728,10242:33071,10243:33071},ln=[{textureSemantic:"material_properties",shaderUniform:"texMaterialProperties",samplerState:sn},{textureSemantic:"object_info",shaderUniform:"texObjectInfo",samplerState:sn},{textureSemantic:"color_matrix",shaderUniform:"texColorMatrices",samplerState:sn}];class cn extends K{modelViewMatrix=b();meshUniforms;constructor(e,t,n){super(e,t,n);const{modelViewMatrix:o}=this;this.meshUniforms={modelViewMatrix:o}}state={...k,3024:!1,2929:!0,2930:!0,2932:515};computeUniforms=this._computeUniforms;_computeUniforms(e){const{settings:t,cameraUniforms:n}=e,{points:o}=t,{width:r}=n,{drawingBufferWidth:i,drawingBufferHeight:a}=e.gl,s=A(i,a);let l=0,c=0,f=0,u=!0,d=20;if(o){u="disc"==o.shape;const{size:e}=o;e&&(l=(e.pixel??0)*i/r,d=(e.maxPixel??20)*i/r,c=e.metric??0,f=e.toleranceFactor??0)}let m={},p=0,x=!0;if(t.clippingPlanes&&t.clippingPlanes.enabled){const e=[L(-1,0,0,t.clippingPlanes.bounds.min[0]),L(0,-1,0,t.clippingPlanes.bounds.min[1]),L(0,0,-1,t.clippingPlanes.bounds.min[2]),L(1,0,0,-t.clippingPlanes.bounds.max[0]),L(0,1,0,-t.clippingPlanes.bounds.max[1]),L(0,0,1,-t.clippingPlanes.bounds.max[2])],o=R(b(),n.worldViewMatrix);C(o,o);for(const t of e)V(t,t,o);for(let t=0;t<6;t++)m[`clippingPlanes${t}`]=e[t];p=6,x=t.clippingPlanes.inside}const{clippingVolume:v}=t;if(v.enabled){const e="intersection"==v.mode,t=[w(),w(),w(),w(),w(),w()],{planes:o}=v;p=Math.min(6,o.length);for(let n=0;n<p;n++)e?O(t[n],o[n]):I(t[n],o[n]);const r=R(b(),n.worldViewMatrix);C(r,r);for(const e of t)V(e,e,r);for(let e=0;e<6;e++)m[`clippingPlanes${e}`]=t[e];x=e}return{windowSize:s,pixelSize:l,maxPixelSize:d,metricSize:c,toleranceFactor:f,renderAsDisc:u,...m,numClippingPlanes:p,clipInside:x}}computeMeshUniforms=(e,t)=>{const{cameraUniforms:n}=e,{modelViewMatrix:o,meshUniforms:r}=this,{modelWorldMatrix:i}=t;return i?D(o,n.worldViewMatrix,i):E(o,n.modelViewMatrix),r}}!function(e){e.contextData={shaders:{vertex:tn,fragment:nn,flags:["RENDER_COLOR","RENDER_NORMAL","RENDER_DEPTH"]},webGL1:!0,webGL2:!0,vertexLayout:on,vertexSemanticNames:rn,uniforms:an,textureSlots:ln},e.objectIndexVariant="pointcloud_pick",e.depthVariant="pointcloud_depth",e.normalVariant="pointcloud_normal"}(cn||(cn={}));class fn extends cn{constructor(e,t,n){super(e,t,n)}}(fn||(fn={})).contextData={...cn.contextData,shaders:{...cn.contextData.shaders,flags:["RENDER_OBJECT_INDEX"]},webGL1:!0,webGL2:"OffscreenCanvas"in self};class un extends cn{constructor(e,t,n){super(e,t,n)}}(un||(un={})).contextData={...cn.contextData,shaders:{...cn.contextData.shaders,flags:["RENDER_DEPTH"]},webGL1:!0,webGL2:!0};class dn extends cn{constructor(e,t,n){super(e,t,n)}}(dn||(dn={})).contextData={...cn.contextData,shaders:{...cn.contextData.shaders,flags:["RENDER_NORMAL"]},webGL1:!0,webGL2:!0};const mn=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:12,type:5126,components:3,normalize:!1},{semantic:13,type:5126,components:1,normalize:!1},{semantic:22,type:5126,components:3,normalize:!1}]),pn={0:"aPosition",12:"aColor",13:"aDeviation",22:"aObjectInfo"},xn={deviationRangeMin:["uDeviationRangeMin","float",1],deviationRangeMax:["uDeviationRangeMax","float",-1],deviationMode:["uMode","int",0]},vn={type:3553,10240:9728,10241:9728,10242:33071,10243:33071},hn=[{textureSemantic:"material_properties",shaderUniform:"texMaterialProperties",samplerState:vn},{textureSemantic:"object_info",shaderUniform:"texObjectInfo",samplerState:vn},{textureSemantic:"color_matrix",shaderUniform:"texColorMatrices",samplerState:vn},{textureSemantic:"deviation",shaderUniform:"texDeviationColors",samplerState:vn}];class gn extends cn{constructor(e,t,n){super(e,t,n)}computeUniforms=e=>{const t=this._computeUniforms(e),{mode:n}=e.settings.points.deviation;let o=0;switch(n){case"on":o=1;break;case"mix":o=2}return{...t,deviationMode:o}}}!function(e){e.contextData={shaders:{vertex:tn,fragment:nn,flags:["DEVIATION","RENDER_COLOR","RENDER_NORMAL","RENDER_DEPTH"]},webGL1:!0,webGL2:!0,vertexLayout:mn,vertexSemanticNames:pn,uniforms:{...cn.contextData.uniforms,...xn},textureSlots:hn},e.objectIndexVariant="pointcloud_d_pick",e.depthVariant="pointcloud_depth",e.normalVariant="pointcloud_normal",e.deviationVariant="pointcloud_d_deviation"}(gn||(gn={}));class _n extends gn{constructor(e,t,n){super(e,t,n)}}(_n||(_n={})).contextData={...gn.contextData,shaders:{...gn.contextData.shaders,flags:["RENDER_OBJECT_INDEX"]},webGL1:!0,webGL2:"OffscreenCanvas"in self};class bn extends gn{constructor(e,t,n){super(e,t,n)}}(bn||(bn={})).contextData={...gn.contextData,shaders:{...gn.contextData.shaders,flags:["_DEVIATION"]},webGL1:!0,webGL2:!0};const En=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:12,type:5126,components:3,normalize:!1},{semantic:14,type:5126,components:1,normalize:!1},{semantic:22,type:5126,components:3,normalize:!1}]),Cn={0:"aPosition",12:"aColor",14:"aIntensity",22:"aObjectInfo"},Rn={intensityRangeMin:["uIntensityRangeMin","float",1],intensityRangeMax:["uIntensityRangeMax","float",-1],intensityMode:["uIntensityMode","int",0]},Dn={type:3553,10240:9728,10241:9728,10242:33071,10243:33071},Nn=[{textureSemantic:"material_properties",shaderUniform:"texMaterialProperties",samplerState:Dn},{textureSemantic:"object_info",shaderUniform:"texObjectInfo",samplerState:Dn},{textureSemantic:"color_matrix",shaderUniform:"texColorMatrices",samplerState:Dn},{textureSemantic:"intensity",shaderUniform:"texIntensityColors",samplerState:Dn}];class Mn extends cn{constructor(e,t,n){super(e,t,n)}computeUniforms=e=>{const t=this._computeUniforms(e),{mode:n}=e.settings.points.intensity;let o=0;switch(n){case"on":o=1;break;case"mix":o=2}return{...t,intensityMode:o}}}!function(e){e.contextData={shaders:{vertex:tn,fragment:nn,flags:["INTENSITY","RENDER_COLOR","RENDER_NORMAL","RENDER_DEPTH"]},webGL1:!0,webGL2:!0,vertexLayout:En,vertexSemanticNames:Cn,uniforms:{...cn.contextData.uniforms,...Rn},textureSlots:Nn},e.objectIndexVariant="pointcloud_i_pick",e.depthVariant="pointcloud_depth",e.normalVariant="pointcloud_normal",e.intensityVariant="pointcloud_i_intensity"}(Mn||(Mn={}));class Sn extends Mn{constructor(e,t,n){super(e,t,n)}}(Sn||(Sn={})).contextData={...Mn.contextData,shaders:{...Mn.contextData.shaders,flags:["RENDER_OBJECT_INDEX"]},webGL1:!0,webGL2:"OffscreenCanvas"in self};class yn extends Mn{constructor(e,t,n){super(e,t,n)}}(yn||(yn={})).contextData={...Mn.contextData,shaders:{...Mn.contextData.shaders,flags:["_INTENSITY"]},webGL1:!0,webGL2:!0};const Tn=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:12,type:5126,components:3,normalize:!1},{semantic:13,type:5126,components:1,normalize:!1},{semantic:14,type:5126,components:1,normalize:!1},{semantic:22,type:5126,components:3,normalize:!1}]),wn={0:"aPosition",12:"aColor",13:"aDeviation",14:"aIntensity",22:"aObjectInfo"},Ln={deviationRangeMin:["uDeviationRangeMin","float",1],deviationRangeMax:["uDeviationRangeMax","float",-1],deviationMode:["uMode","int",0],intensityRangeMin:["uIntensityRangeMin","float",1],intensityRangeMax:["uIntensityRangeMax","float",-1],intensityMode:["uIntensityMode","int",0]},In={type:3553,10240:9728,10241:9728,10242:33071,10243:33071},On=[{textureSemantic:"material_properties",shaderUniform:"texMaterialProperties",samplerState:In},{textureSemantic:"object_info",shaderUniform:"texObjectInfo",samplerState:In},{textureSemantic:"color_matrix",shaderUniform:"texColorMatrices",samplerState:In},{textureSemantic:"deviation",shaderUniform:"texDeviationColors",samplerState:In},{textureSemantic:"intensity",shaderUniform:"texIntensityColors",samplerState:In}];class Vn extends cn{constructor(e,t,n){super(e,t,n)}computeUniforms=e=>{const t=this._computeUniforms(e);let n=0,o=0;{const{mode:t}=e.settings.points.deviation;switch(t){case"on":n=1;break;case"mix":n=2}}{const{mode:t}=e.settings.points.intensity;switch(t){case"on":o=1;break;case"mix":o=2}}return{...t,deviationMode:n,intensityMode:o}}}!function(e){e.contextData={shaders:{vertex:tn,fragment:nn,flags:["DEVIATION","INTENSITY","RENDER_COLOR","RENDER_NORMAL","RENDER_DEPTH"]},webGL1:!0,webGL2:!0,vertexLayout:Tn,vertexSemanticNames:wn,uniforms:{...cn.contextData.uniforms,...Ln},textureSlots:On},e.objectIndexVariant="pointcloud_di_pick",e.depthVariant="pointcloud_depth",e.normalVariant="pointcloud_normal",e.deviationVariant="pointcloud_di_deviation",e.intensityVariant="pointcloud_di_intensity"}(Vn||(Vn={}));class Pn extends Vn{constructor(e,t,n){super(e,t,n)}}(Pn||(Pn={})).contextData={...Vn.contextData,shaders:{...Vn.contextData.shaders,flags:["RENDER_OBJECT_INDEX"]},webGL1:!0,webGL2:"OffscreenCanvas"in self};class An extends Vn{constructor(e,t,n){super(e,t,n)}}(An||(An={})).contextData={...Vn.contextData,shaders:{...Vn.contextData.shaders,flags:["_DEVIATION"]},webGL1:!0,webGL2:!0};class Un extends Vn{constructor(e,t,n){super(e,t,n)}}(Un||(Un={})).contextData={...Vn.contextData,shaders:{...Vn.contextData.shaders,flags:["_INTENSITY"]},webGL1:!0,webGL2:!0};const Fn=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:22,type:5126,components:3,normalize:!1}]),Bn={0:"aPosition",22:"aTexcoord1"},Gn={modelClipMatrix:["uModelClipMatrix","mat4"],modelWorldMatrix:["uModelWorldMatrix","mat4"],modelViewMatrix:["uModelViewMatrix","mat4"],numMaterials:["uNumMaterials","float"],objectInfoTextureSize:["uObjectInfoTextureSize","vec2"],octantMask:["uOctantMask","float",0],clippingPlanes0:["uClippingPlanes[0]","vec4",w()],clippingPlanes1:["uClippingPlanes[1]","vec4",w()],clippingPlanes2:["uClippingPlanes[2]","vec4",w()],clippingPlanes3:["uClippingPlanes[3]","vec4",w()],clippingPlanes4:["uClippingPlanes[4]","vec4",w()],clippingPlanes5:["uClippingPlanes[5]","vec4",w()],numClippingPlanes:["uNumClippingPlanes","float"],clipInside:["uClipInside","bool"]},zn={type:3553,10240:9728,10241:9728,10242:33071,10243:33071},jn=[{textureSemantic:"material_properties",shaderUniform:"texMaterialProperties",samplerState:zn},{textureSemantic:"object_info",shaderUniform:"texObjectInfo",samplerState:zn},{textureSemantic:"color_matrix",shaderUniform:"texColorMatrices",samplerState:zn}];class Hn extends K{cameraUniforms={modelWorldMatrix:b(),modelClipMatrix:b(),modelViewMatrix:b()};constructor(e,t,n){super(e,t,n)}isDoubleSided=e=>e.settings.advanced.doubleSided.opaque;computeUniforms=e=>{const{settings:t,cameraUniforms:n,textures:o,sceneTextures:r}=e;let i={},a=0,s=!0;if(t.clippingPlanes&&t.clippingPlanes.enabled){const e=[L(-1,0,0,t.clippingPlanes.bounds.min[0]),L(0,-1,0,t.clippingPlanes.bounds.min[1]),L(0,0,-1,t.clippingPlanes.bounds.min[2]),L(1,0,0,-t.clippingPlanes.bounds.max[0]),L(0,1,0,-t.clippingPlanes.bounds.max[1]),L(0,0,1,-t.clippingPlanes.bounds.max[2])],o=R(b(),n.worldViewMatrix);C(o,o);for(const t of e)V(t,t,o);for(let t=0;t<6;t++)i[`clippingPlanes${t}`]=e[t];a=6,s=t.clippingPlanes.inside}const{clippingVolume:l}=t;if(l.enabled){const e="intersection"==l.mode,t=[w(),w(),w(),w(),w(),w()],{planes:o}=l;a=Math.min(6,o.length);for(let n=0;n<a;n++)e?O(t[n],o[n]):I(t[n],o[n]);const r=R(b(),n.worldViewMatrix);C(r,r);for(const e of t)V(e,e,r);for(let e=0;e<6;e++)i[`clippingPlanes${e}`]=t[e];s=e}return this.state={...this.state,2884:!this.isDoubleSided(e)},{...i,numClippingPlanes:a,clipInside:s}};computeMeshUniforms=(e,t)=>{const{cameraUniforms:n}=e,{modelWorldMatrix:o,modelClipMatrix:r,modelViewMatrix:i}=this.cameraUniforms;return t.modelWorldMatrix?(E(o,t.modelWorldMatrix),D(r,n.worldClipMatrix,o),D(i,n.worldViewMatrix,o)):(E(o,n.modelWorldMatrix),E(r,n.modelClipMatrix),E(i,n.modelViewMatrix)),this.cameraUniforms};state={...k,3024:!1,2929:!0,2884:!0,2932:515}}!function(e){e.contextData={shaders:{vertex:"precision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying out\n#define texture2D texture\n#else\n#if defined(RENDER_COLOR)\n#undef RENDER_NORMAL\n#undef RENDER_DEPTH\n#endif\n#endif\nattribute vec4 aPosition;attribute vec3 aTexcoord1;const int MaxClippingPlanes=6;uniform mat4 uModelClipMatrix;uniform mat4 uModelWorldMatrix;uniform mat4 uModelViewMatrix;uniform float uNumMaterials;uniform vec2 uObjectInfoTextureSize;uniform float uOctantMask;uniform vec4 uClippingPlanes[MaxClippingPlanes];uniform float uNumClippingPlanes;uniform bool uClipInside;uniform sampler2D texMaterialProperties;uniform sampler2D texObjectInfo;uniform sampler2D texColorMatrices;varying vec3 vPositionVS;\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nvarying vec3 vObjectIndex;\n#else\nflat varying uint vObjectIndex;\n#endif\n#endif\n#if defined(RENDER_DEPTH)\nvarying float vLinearZ;\n#endif\nvarying float vObjectHighlight;varying vec2 vTextureCoord1;\n#if __VERSION__ == 100\nfloat round(float value){return floor(value+0.5);}\n#endif\nbool bitTest(float bits,float bitValue){return mod(floor(bits/bitValue),2.0)==1.0;}void main(){float w=uObjectInfoTextureSize.x;float h=uObjectInfoTextureSize.y;vec2 objectInfoUV=vec2((mod(aTexcoord1.z,w)+0.5)/w,(floor(aTexcoord1.z/w)+0.5)/h);float octantBits=round(aTexcoord1.x);if(octantBits!=float(0xff)&&!bitTest(uOctantMask,octantBits))return;float objectHighlight=round(texture2D(texObjectInfo,objectInfoUV).x*255.0);bool hidden=objectHighlight==255.0;if(hidden)return;vObjectHighlight=objectHighlight;vTextureCoord1=vec2(aTexcoord1.x,(aTexcoord1.y+0.5)/uNumMaterials);gl_Position=uModelClipMatrix*aPosition;vPositionVS=vec3(uModelViewMatrix*aPosition);\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nfloat objectIndex=aTexcoord1.z;float r=floor(mod(objectIndex/float(0x1),256.0))/255.0;float g=floor(mod(objectIndex/float(0x100),256.0))/255.0;float b=floor(mod(objectIndex/float(0x10000),256.0))/255.0;vObjectIndex=vec3(r,g,b);\n#else\nvObjectIndex=uint(aTexcoord1.z);\n#endif\n#endif\n#if defined(RENDER_DEPTH)\nvLinearZ=gl_Position.z;\n#endif\n}",fragment:"#if __VERSION__ == 100\n#extension GL_OES_standard_derivatives: enable\n#extension GL_EXT_shader_texture_lod : enable\n#endif\nprecision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying in\n#define texture2D texture\n#if defined(RENDER_COLOR)\nlayout(location=0)out vec4 fragColor;\n#endif\n#if defined(RENDER_NORMAL)\nlayout(location=1)out vec4 fragNormal;\n#endif\n#if defined(RENDER_DEPTH)\nlayout(location=2)out vec4 fragDepth;\n#endif\n#if defined(RENDER_OBJECT_INDEX)\nlayout(location=0)out uvec4 fragObjectIndex;\n#endif\n#else\n#if defined(RENDER_COLOR)\n#undef RENDER_NORMAL\n#undef RENDER_DEPTH\n#endif\n#define fragColor gl_FragColor\n#define fragNormal gl_FragColor\n#define fragDepth gl_FragColor\n#define fragObjectIndex gl_FragColor\n#endif\nconst int MaxClippingPlanes=6;uniform mat4 uModelClipMatrix;uniform mat4 uModelWorldMatrix;uniform mat4 uModelViewMatrix;uniform float uNumMaterials;uniform vec2 uObjectInfoTextureSize;uniform float uOctantMask;uniform vec4 uClippingPlanes[MaxClippingPlanes];uniform float uNumClippingPlanes;uniform bool uClipInside;uniform sampler2D texMaterialProperties;uniform sampler2D texObjectInfo;uniform sampler2D texColorMatrices;varying vec3 vPositionVS;\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nvarying vec3 vObjectIndex;\n#else\nflat varying uint vObjectIndex;\n#endif\n#endif\n#if defined(RENDER_DEPTH)\nvarying float vLinearZ;\n#endif\nvarying float vObjectHighlight;varying vec2 vTextureCoord1;\n#if __VERSION__ == 100\nfloat round(float value){return floor(value+0.5);}\n#endif\nbool bitTest(float bits,float bitValue){return mod(floor(bits/bitValue),2.0)==1.0;}const float GAMMA=2.2;const float INV_GAMMA=1.0/GAMMA;vec3 linearTosRGB(vec3 color){return pow(color,vec3(INV_GAMMA));}vec3 sRGBToLinear(vec3 srgbIn){return vec3(pow(srgbIn.xyz,vec3(GAMMA)));}vec3 toneMapACES_Narkowicz(vec3 color){const float A=2.51;const float B=0.03;const float C=2.43;const float D=0.59;const float E=0.14;return clamp((color*(A*color+B))/(color*(C*color+D)+E),0.0,1.0);}vec3 RRTAndODTFit(vec3 color){vec3 a=color*(color+0.0245786)-0.000090537;vec3 b=color*(0.983729*color+0.4329510)+0.238081;return a/b;}vec4 floatToRgba(float texelFloat,bool littleEndian){int exponent=int(log2(abs(texelFloat))+1.0);texelFloat/=exp2(float(exponent));texelFloat=(texelFloat+1.0)*(256.0*256.0*256.0-1.0)/(2.0*256.0*256.0*256.0);vec4 encode=fract(texelFloat*vec4(1.0,256.0,256.0*256.0,256.0*256.0*256.0));vec4 res=vec4(encode.xyz-encode.yzw/256.0+1.0/512.0,(float(exponent)+127.5)/256.0);return littleEndian ? res : res.abgr;}float rgbaToFloat(vec4 pack,bool littleEndian){if(!littleEndian)pack=pack.abgr;int exponent=int(pack.w*256.0-127.0);float value=dot(pack.xyz,1.0/vec3(1.0,256.0,256.0*256.0));value=value*(2.0*256.0*256.0*256.0)/(256.0*256.0*256.0-1.0)-1.0;return value*exp2(float(exponent));}const mat4 ditherThresholds=mat4(0.0/16.0,8.0/16.0,2.0/16.0,10.0/16.0,12.0/16.0,4.0/16.0,14.0/16.0,6.0/16.0,3.0/16.0,11.0/16.0,1.0/16.0,9.0/16.0,15.0/16.0,7.0/16.0,13.0/16.0,5.0/16.0);float dither(vec2 xy){float y=mod(xy.y,4.0);vec4 row;if(y<1.0)row=ditherThresholds[0];else if(y<2.0)row=ditherThresholds[1];else if(y<3.0)row=ditherThresholds[2];else row=ditherThresholds[3];float x=mod(xy.x,4.0);float threshold;if(x<1.0)threshold=row[0];else if(x<2.0)threshold=row[1];else if(x<3.0)threshold=row[2];else threshold=row[3];return threshold;}void main(){vec4 vPVS=vec4(vPositionVS,1);bool inside=uNumClippingPlanes>0.0;int nc=int(uNumClippingPlanes);for(int i=0;i<MaxClippingPlanes;i++){if(!inside||i>=nc)break;inside=dot(vPVS,uClippingPlanes[i])<=0.0;}if(inside==uClipInside)discard;\n#if defined(RENDER_OBJECT_INDEX)\n#if __VERSION__ == 100\nfragObjectIndex=vec4(vObjectIndex,0.0);\n#else\nfragObjectIndex=uvec4(vObjectIndex,0,0,0);\n#endif\n#endif\n#if defined(RENDER_DEPTH)\n#if __VERSION__ == 100\nfragDepth=floatToRgba(vLinearZ,true);\n#else\nfragDepth=vec4(vLinearZ,0,0,1);\n#endif\n#endif\n#if defined(RENDER_NORMAL)\nfragNormal=vec4(1,1,0,1);\n#endif\n#if defined(RENDER_COLOR)\nvec4 diffuseOpacity=texture2D(texMaterialProperties,vec2(vTextureCoord1.y,0.5/2.0));diffuseOpacity.rgb=sRGBToLinear(diffuseOpacity.rgb);float objectHighlight=round(vObjectHighlight);float u=(objectHighlight+0.5)/256.0;mat4 colorTransform;colorTransform[0]=texture2D(texColorMatrices,vec2(u,0.5/5.0));colorTransform[1]=texture2D(texColorMatrices,vec2(u,1.5/5.0));colorTransform[2]=texture2D(texColorMatrices,vec2(u,2.5/5.0));colorTransform[3]=texture2D(texColorMatrices,vec2(u,3.5/5.0));vec4 colorTranslation=texture2D(texColorMatrices,vec2(u,4.5/5.0));diffuseOpacity=colorTransform*diffuseOpacity+colorTranslation;if((diffuseOpacity.a-0.5/16.0)<dither(gl_FragCoord.xy))discard;fragColor.rgb=diffuseOpacity.rgb;fragColor.a=1.0;\n#endif\n}",flags:["RENDER_COLOR","RENDER_NORMAL","RENDER_DEPTH"]},webGL1:!0,webGL2:!0,vertexLayout:Fn,vertexSemanticNames:Bn,uniforms:Gn,textureSlots:jn},e.objectIndexVariant="lines_pick",e.depthVariant="lines_depth",e.normalVariant="lines_normal",e.isDoubleSided=function(e){throw new Error("Function not implemented.")}}(Hn||(Hn={}));class kn extends Hn{constructor(e,t,n){super(e,t,n)}}(kn||(kn={})).contextData={...Hn.contextData,shaders:{...Hn.contextData.shaders,flags:["RENDER_OBJECT_INDEX"]},webGL1:!0,webGL2:"OffscreenCanvas"in self};class Wn extends Hn{constructor(e,t,n){super(e,t,n)}}(Wn||(Wn={})).contextData={...Hn.contextData,shaders:{...Hn.contextData.shaders,flags:["RENDER_DEPTH"]},webGL1:!0,webGL2:!0};class Xn extends Hn{constructor(e,t,n){super(e,t,n)}}(Xn||(Xn={})).contextData={...Hn.contextData,shaders:{...Hn.contextData.shaders,flags:["RENDER_NORMAL"]},webGL1:!0,webGL2:!0};const qn=ee([{semantic:0,type:5126,components:3,normalize:!1},{semantic:22,type:5126,components:1,normalize:!1}]),Zn={0:"aPosition",22:"aId"},Yn={worldViewNormalMatrix:["uWorldViewNormalMatrix","mat3"],clipping:["uClipping","mat4"],selectedSide:["uSelectedSide","float",-1]};class Jn extends K{clippingMin=M();clippingMax=M();constructor(e,t){super(e,t)}computeUniforms=e=>{const{settings:t,cameraUniforms:n}=e;let o;var r;t.clippingPlanes&&t.clippingPlanes.enabled&&t.clippingPlanes.showBox?(o=function(e,t,n,o){var r=t[0],i=t[1],a=t[2],s=t[3],l=r+r,c=i+i,f=a+a,u=r*l,d=r*c,m=r*f,p=i*c,x=i*f,v=a*f,h=s*l,g=s*c,_=s*f,b=o[0],E=o[1],C=o[2];return e[0]=(1-(p+v))*b,e[1]=(d+_)*b,e[2]=(m-g)*b,e[3]=0,e[4]=(d-_)*E,e[5]=(1-(u+v))*E,e[6]=(x+h)*E,e[7]=0,e[8]=(m+g)*C,e[9]=(x-h)*C,e[10]=(1-(u+p))*C,e[11]=0,e[12]=n[0],e[13]=n[1],e[14]=n[2],e[15]=1,e}(b(),((r=P())[0]=0,r[1]=0,r[2]=0,r[3]=1,r),t.clippingPlanes.bounds.min,function(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e}(M(),t.clippingPlanes.bounds.max,t.clippingPlanes.bounds.min)),D(o,n.worldClipMatrix,o)):o=function(e,t,n,o,r,i,a,s,l,c,f,u,d,m,p,x){var v=new h(16);return v[0]=0,v[1]=0,v[2]=0,v[3]=0,v[4]=0,v[5]=0,v[6]=0,v[7]=0,v[8]=0,v[9]=0,v[10]=0,v[11]=0,v[12]=0,v[13]=0,v[14]=0,v[15]=0,v}();const i=t.clippingPlanes?.highlight??-1,{worldViewNormalMatrix:a}=n;return{selectedSide:i,clipping:o,worldViewNormalMatrix:a}};state={...k,3024:!1,2929:!0,2884:!0,3042:!0,32969:770,32971:770,32968:771,32970:1}}!function(e){e.contextData={shaders:{vertex:"precision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying out\n#else\n#if defined(RENDER_COLOR)\n#undef RENDER_NORMAL\n#undef RENDER_DEPTH\n#endif\n#endif\nattribute vec3 aPosition;attribute float aId;uniform mat3 uWorldViewNormalMatrix;uniform mat4 uClipping;uniform float uSelectedSide;\n#ifdef RENDER_OBJECT_INDEX\n#if __VERSION__ == 100\nvarying vec4 vObjectIndex;\n#else\nflat varying uint vObjectIndex;\n#endif\n#endif\n#if defined(RENDER_DEPTH)\nvarying float vLinearZ;\n#endif\n#if defined(RENDER_NORMAL)\nvarying vec3 vNormalVS;\n#endif\n#if defined(RENDER_COLOR)\nvarying vec4 vColor;\n#endif\nvoid main(){gl_Position=uClipping*vec4(aPosition,1.0);\n#ifdef RENDER_OBJECT_INDEX\n#if __VERSION__ == 100\nfloat objectIndex=aId+1.0;float b=1.0-objectIndex/255.0;vObjectIndex=vec4(b,1.0,1.0,1.0);\n#else\nvObjectIndex=uint(0xFFFFFFFE)-uint(aId);\n#endif\n#endif\n#if defined(RENDER_DEPTH)\nvLinearZ=gl_Position.z;\n#endif\n#if defined(RENDER_NORMAL)\nint axis=int(aId+0.25);if(axis>2)vNormalVS=-uWorldViewNormalMatrix[axis-3];else vNormalVS=uWorldViewNormalMatrix[axis];\n#endif\n#if defined(RENDER_COLOR)\nvColor=aId==uSelectedSide ? vec4(1,0,0,0.125): vec4(0,1,0,0.125);\n#endif\n}",fragment:"#if __VERSION__ == 100\n#extension GL_OES_standard_derivatives: enable\n#extension GL_EXT_shader_texture_lod : enable\n#endif\nprecision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying in\n#define texture2D texture\n#define textureCube texture\n#define textureCubeLodEXT textureLod\n#if defined(RENDER_COLOR)\nlayout(location=0)out vec4 fragColor;\n#endif\n#if defined(RENDER_NORMAL)\nlayout(location=1)out vec4 fragNormal;\n#endif\n#if defined(RENDER_DEPTH)\nlayout(location=2)out vec4 fragDepth;\n#endif\n#if defined(RENDER_OBJECT_INDEX)\nlayout(location=0)out uvec4 fragObjectIndex;\n#endif\n#else\n#if defined(RENDER_COLOR)\n#undef RENDER_NORMAL\n#undef RENDER_DEPTH\n#endif\n#define fragColor gl_FragColor\n#define fragNormal gl_FragColor\n#define fragDepth gl_FragColor\n#define fragObjectIndex gl_FragColor\n#endif\n#ifdef RENDER_OBJECT_INDEX\n#if __VERSION__ == 100\nvarying vec4 vObjectIndex;\n#else\nflat varying uint vObjectIndex;\n#endif\n#endif\n#if defined(RENDER_DEPTH)\nvarying float vLinearZ;\n#endif\n#if defined(RENDER_NORMAL)\nvarying vec3 vNormalVS;\n#endif\n#if defined(RENDER_COLOR)\nvarying vec4 vColor;\n#endif\n#if __VERSION__ == 100\nfloat round(float value){return floor(value+0.5);}\n#endif\nvec4 floatToRgba(float texelFloat,bool littleEndian){int exponent=int(log2(abs(texelFloat))+1.0);texelFloat/=exp2(float(exponent));texelFloat=(texelFloat+1.0)*(256.0*256.0*256.0-1.0)/(2.0*256.0*256.0*256.0);vec4 encode=fract(texelFloat*vec4(1.0,256.0,256.0*256.0,256.0*256.0*256.0));vec4 res=vec4(encode.xyz-encode.yzw/256.0+1.0/512.0,(float(exponent)+127.5)/256.0);return littleEndian ? res : res.abgr;}float rgbaToFloat(vec4 pack,bool littleEndian){if(!littleEndian)pack=pack.abgr;int exponent=int(pack.w*256.0-127.0);float value=dot(pack.xyz,1.0/vec3(1.0,256.0,256.0*256.0));value=value*(2.0*256.0*256.0*256.0)/(256.0*256.0*256.0-1.0)-1.0;return value*exp2(float(exponent));}void main(){\n#ifdef RENDER_OBJECT_INDEX\n#if __VERSION__ == 100\nfragObjectIndex=vObjectIndex;\n#else\nfragObjectIndex=uvec4(vObjectIndex,0,0,0);\n#endif\n#endif\n#if defined(RENDER_DEPTH)\n#if __VERSION__ == 100\nfragDepth=floatToRgba(vLinearZ,true);\n#else\nfragDepth=vec4(vLinearZ,0,0,1);\n#endif\n#endif\n#if defined(RENDER_NORMAL)\nfragNormal=vec4(normalize(vNormalVS),1);\n#endif\n#if defined(RENDER_COLOR)\nfragColor=vColor;\n#endif\n}",flags:["RENDER_COLOR","RENDER_NORMAL","RENDER_DEPTH"]},vertexLayout:qn,vertexSemanticNames:Zn,uniforms:Yn,webGL1:!0,webGL2:!0},e.objectIndexVariant="clipping_box_pick",e.depthVariant="clipping_box_depth",e.normalVariant="clipping_box_normal"}(Jn||(Jn={}));class $n extends Jn{constructor(e,t){super(e,t)}state={...k,3024:!1,2929:!0,2884:!0,2930:!0,2932:515}}($n||($n={})).contextData={...Jn.contextData,shaders:{...Jn.contextData.shaders,flags:["RENDER_OBJECT_INDEX"]},webGL1:!0,webGL2:"OffscreenCanvas"in self};class Kn extends Jn{constructor(e,t){super(e,t)}state={...k,3024:!1,2929:!0,2884:!0,2930:!0,2932:515}}(Kn||(Kn={})).contextData={...Jn.contextData,shaders:{...Jn.contextData.shaders,flags:["RENDER_DEPTH"]},webGL1:!0,webGL2:!0};class Qn extends Jn{constructor(e,t){super(e,t)}state={...k,3024:!1,2929:!0,2884:!0,2930:!1,2932:515}}(Qn||(Qn={})).contextData={...Jn.contextData,shaders:{...Jn.contextData.shaders,flags:["RENDER_NORMAL"]},webGL1:!0,webGL2:!0};const eo={background:ne,watermark:re,basic:ue,basic_z:de,basic_za:me,phong_z:Re,phong_za:Ne,phong:Re,phong_a:Ne,phong_t:De,phong_at:Me,gltf:Pe,gltf_unlit:Ae,gltf_t:Ue,gltf_unlit_t:Fe,gltf_p:ze,pbr:ft,pbr_a:dt,pbr_t:ut,pbr_at:mt,pbr_cc:pt,pbr_cca:vt,pbr_cct:xt,pbr_ccat:ht,pbr_s:gt,pbr_sa:bt,pbr_st:_t,pbr_sat:Et,pbr_ccs:Ct,pbr_ccsa:Dt,pbr_ccst:Rt,pbr_ccsat:Nt,octree:Ot,octree_a:Vt,octree_pick:Ut,octree_depth:Ft,octree_normal:Bt,octree_ds:Pt,octree_outline:Gt,octree_ds_outline:zt,octree_ds_a:At,octree_ds_pick:jt,octree_ds_depth:Ht,octree_ds_normal:kt,octree_terrain:Wt,octree_albedo:Qt,octree_document:en,octree_terrain_pick:class extends jt{constructor(e,t,n){super(e,t,n)}shouldRender=e=>/*!context.settings.advanced.hideTerrain &&*/!e.settings.terrain.asBackground},octree_terrain_depth:class extends Ht{constructor(e,t,n){super(e,t,n)}shouldRender=e=>/*!context.settings.advanced.hideTerrain &&*/!e.settings.terrain.asBackground},octree_terrain_normal:class extends kt{constructor(e,t,n){super(e,t,n)}shouldRender=e=>/*!context.settings.advanced.hideTerrain &&*/!e.settings.terrain.asBackground},clipping_box:Jn,clipping_box_pick:$n,clipping_box_depth:Kn,clipping_box_normal:Qn,pointcloud:cn,pointcloud_pick:fn,pointcloud_deviation:gn,pointcloud_d_pick:_n,pointcloud_intensity:Mn,pointcloud_i_pick:Sn,pointcloud_deviation_intensity:Vn,pointcloud_di_pick:Pn,pointcloud_depth:un,pointcloud_normal:dn,pointcloud_d_deviation:bn,pointcloud_i_intensity:yn,pointcloud_di_deviation:An,pointcloud_di_intensity:Un,lines:Hn,lines_pick:kn,lines_depth:Wn,lines_normal:Xn};function to(e){return"compressed"==e.kind}function no(e){return 0==(e&e-1)}class oo{gl;images=[];textures=[];constructor(e){this.gl=e}dispose(){const{gl:e,textures:t,images:n}=this;for(const o of t)o&&o.texture&&!n.includes(o)&&e.deleteTexture(o.texture);this.textures.length=0;for(const t of n)t&&e.deleteTexture(t.texture);this.images.length=0}getImage(e){return this.images[e]}getTexture(e){return this.textures[e]}setImage(e,t,n){const{gl:o,images:r}=this,{generateMipmaps:i,defaultColor:a,format:s}=n??{},l=r[e]?.texture??o.createTexture(),c=t&&(i??!0)&&no(t.width)&&no(t.height),f=c?Math.log2(Math.min(t.width,t.height))+1:1;r[e]||(r[e]={texture:l,mips:f}),o.bindTexture(3553,l),o.pixelStorei(37443,o.NONE);const u=s??6408;t?(o.texImage2D(3553,0,u,u,5121,t),c&&o.generateMipmap(3553)):void 0===t&&o.texImage2D(3553,0,u,1,1,0,u,5121,new Uint8Array(a??[255,255,255,255])),o.bindTexture(3553,null)}setImageFromBuffer(e,t,n){const{gl:o,images:r}=this,{width:i,height:a,generateMipmaps:s}=n,l=(s??!0)&&no(i)&&no(a),c=n.type??5121,f=n.internalFormat??6408,u=n.format??6408,d=r[e]?.texture??o.createTexture(),m=l?Math.log2(Math.min(i,a))+1:1;r[e]||(r[e]={texture:d,mips:m}),o.bindTexture(3553,d),o.pixelStorei(37443,o.NONE),o.texImage2D(3553,0,q(o)?f:u,i,a,0,u,c,t),l&&o.generateMipmap(3553),o.bindTexture(3553,null)}deleteTexture(e){this.textures[e]?.texture&&(this.gl.deleteTexture(this.textures[e].texture),this.textures[e]=void 0)}setTexture(e,t,n){const{gl:o,textures:r}=this,{generateMipmaps:i,sampler:a,defaultColor:s,format:l}=n??{},c=void 0!==t&&"number"!=typeof t&&(i??!0)&&no(t.width)&&no(t.height);let f="number"==typeof t?this.images[t].texture:o.createTexture();const u="number"==typeof t?this.images[t].mips:c?Math.log2(Math.min(t.width,t.height))+1:1,d=r[e]??{texture:f,mips:u,samplerOverrides:a};if(r[e]||(r[e]=d),"number"!=typeof t){o.bindTexture(3553,d.texture),o.pixelStorei(37443,o.NONE);const e=l??6408;t?(o.texImage2D(3553,0,e,e,5121,t),(i??1)&&no(t.width)&&no(t.height)&&o.generateMipmap(3553)):void 0===t&&o.texImage2D(3553,0,e,1,1,0,e,5121,new Uint8Array(s??[255,255,255,255])),o.bindTexture(3553,null)}}async setTexturesFromArchive(e,t,n,o){const{gl:r}=this,{useSingleMipMapLevel:i,sampler:a}=o??{};r.activeTexture(33984);const s=q(r);for(let o=0;o<t.length;o++){const l=r.createTexture(),{target:c}=t[o];r.bindTexture(c,l);const f=Math.max(...t[o].images.map((e=>e.level)))+1;for(const e of t[o].images){let{target:t,level:o,blobRange:a}=e;if(f>1&&void 0!==i){if(o!=i)continue;o=0}const[l,c]=a,u=n.slice(l,c);if(to(e)){const{width:n,height:i,internalFormat:a}=e;r.compressedTexImage2D(t,o,a,n,i,0,new Uint8Array(u))}else{let{width:n,height:i,format:a,internalFormat:l,baseInternalFormat:c,type:f}=e;const d=new(Z(f))(u);s||(5131==f&&(f=36193),35905==l&&(a=35904)),r.pixelStorei(37443,r.NONE),r.texImage2D(t,o,s?l:a,n,i,0,a,f,d)}}this.textures[e]?.texture&&r.deleteTexture(this.textures[e].texture),this.textures[e++]={texture:l,mips:f,samplerOverrides:a},r.bindTexture(c,null)}}}class ro{width;height;ids;depths;normals;deviation;intensity;lastContext;constructor(e,t){this.width=e,this.height=t,this.ids=new Uint32Array(e*t),this.depths=new Float32Array(e*t*4),this.normals=new Uint16Array(e*t*2),this.deviation=new Float32Array(e*t*4),this.intensity=new Float32Array(e*t*4)}update(e){if(this.lastContext===e)return;this.lastContext=e;const{gl:t,buffers:n}=e,{width:o,height:r,ids:i,depths:a,normals:s,intensity:l,deviation:c}=this;performance.mark("render_pick_begin"),e.renderObjectIndex(),t.bindFramebuffer(36160,e.frameBuffer),t.framebufferTexture2D(36160,36064,3553,n.objectIndex.texture,0);const f=q(t)&&"OffscreenCanvas"in self?Uint32Array:Uint8Array;t.readPixels(0,0,o,r,n.objectIndex.format.base,n.objectIndex.format.type,new f(i.buffer)),e.renderLinearDepth();const u=q(t)?Float32Array:Uint8Array;if(t.bindFramebuffer(36160,e.frameBuffer),t.framebufferTexture2D(36160,36064,3553,n.linearDepth.texture,0),t.readPixels(0,0,o,r,n.linearDepth.format.base,n.linearDepth.format.type,new u(a.buffer)),e.renderIntensity(),t.bindFramebuffer(36160,e.frameBuffer),t.framebufferTexture2D(36160,36064,3553,n.intensity.texture,0),t.readPixels(0,0,o,r,n.intensity.format.base,n.intensity.format.type,new u(l.buffer)),e.renderDeviation(),t.bindFramebuffer(36160,e.frameBuffer),t.framebufferTexture2D(36160,36064,3553,n.deviation.texture,0),t.readPixels(0,0,o,r,n.deviation.format.base,n.deviation.format.type,new u(c.buffer)),q(t)){e.renderNormal();const i=Uint16Array;t.bindFramebuffer(36160,e.frameBuffer),t.framebufferTexture2D(36160,36064,3553,n.normal.texture,0),t.readPixels(0,0,o,r,n.normal.format.base,n.normal.format.type,new i(s.buffer))}t.framebufferTexture2D(36160,36064,3553,n.color.texture,0),t.bindFramebuffer(36160,null),performance.measure("render_pick","render_pick_begin")}}const io={createTextures(e,t,n,o){this.textureCache.setTexturesFromArchive(e,t,n,o)},createImage(e,t,n){this.textureCache.setImage(e,t,n)},createImageFromBuffer(e,t,n){const o=new(Z(n.type??5121))(t);this.textureCache.setImageFromBuffer(e,o,n)},createTexture(e,t,n){this.textureCache.setTexture(e,t,n)},deleteTexture(e){this.textureCache.deleteTexture(e)},createMaterial(e,t,n,o){this.materialGroups[e]=this.createMaterialGroup(t,n,o)},setSceneUniforms(e){this.sceneUniforms=e},setSceneTextures(e){this.sceneTextures=e},createMesh(e,t,n,o,r,i,a,s,l,c){this.materialGroups[e].createMesh(t,o,n,r,i,a,s,l,c)},updateMesh(e,t,n){this.materialGroups[e].updateMesh(t,n)},deleteMesh(e,t){this.materialGroups[e].deleteMesh(t)},updateMaterial(e,t,n){this.materialGroups[e].update(t,n)},updateImage(e,t,n){if(t instanceof ImageData){const{generateMipmaps:o}=n;this.textureCache.setImage(e,t,{generateMipmaps:o})}else{const{type:o}=n,r=new(Z(o??5121))(t);this.textureCache.setImageFromBuffer(e,r,n)}}};class ao{gl;generation;settings;cameraUniforms;sceneUniforms;sceneTextures;textures;materialGroups;buffers;currentState;drawcalls=0;triangles=0;points=0;frameBuffer;defaultClearColor=L(0,0,.25,1);isNormalRendered=!1;isDepthRendered=!1;isObjectIdRendered=!1;isDeviationRendered=!1;isIntensityRendered=!1;constructor(e,t,n,o,r,i,a,s,l,c){this.gl=e,this.generation=t,this.settings=n,this.cameraUniforms=o,this.sceneUniforms=r,this.sceneTextures=i,this.textures=a,this.materialGroups=s,this.buffers=l,this.currentState=c,this.frameBuffer=e.createFramebuffer()}get sortedMaterialGroups(){const e=[...this.materialGroups];return e.sort(((e,t)=>e.color.renderOrder-t.color.renderOrder)),e}dispose(){const{gl:e}=this;e.bindFramebuffer(36160,null),e.deleteFramebuffer(this.frameBuffer)}jitter(e,t){const{cameraUniforms:n}=this,{width:o,height:r}=n;var i;(i=n.viewClipMatrix)[8]+=e/o,i[9]+=t/r,N(n.worldClipMatrix,n.viewClipMatrix,n.worldViewMatrix)}renderOutline(){const{gl:e,buffers:t,settings:n}=this;e.bindFramebuffer(36160,this.frameBuffer),e.framebufferTexture2D(36160,36064,3553,t.color.texture,0),q(e)?(e.drawBuffers([e.COLOR_ATTACHMENT0]),this.renderPass("outline")):this.renderPass("outline"),e.bindFramebuffer(36160,null)}renderColor(e=!0,t=!1){const{gl:n,buffers:o,settings:r}=this,i=r.background&&"color"in r.background?r.background.color:this.defaultClearColor;if(n.bindFramebuffer(36160,this.frameBuffer),n.framebufferTexture2D(36160,36096,3553,o.depth.texture,0),n.framebufferTexture2D(36160,36064,3553,o.color.texture,0),q(n))n.framebufferTexture2D(36160,36065,3553,o.normal.texture,0),n.framebufferTexture2D(36160,36066,3553,o.linearDepth.texture,0),n.drawBuffers([n.COLOR_ATTACHMENT0,n.COLOR_ATTACHMENT1,36066]),e&&(i&&n.clearBufferfv(6144,0,new Float32Array(i)),n.clearBufferfv(6144,1,new Float32Array([1,1,0,0])),n.clearBufferfv(6144,2,new Float32Array([1e5,1e5,1e5,1])),n.clearBufferfi(34041,0,1,0)),this.renderPass("color",!1,t),this.isDepthRendered=!0,this.isNormalRendered=!0;else{let e=256;if(n.clearDepth(1),i){const[t,o,r,a]=i;n.clearColor(t,o,r,a),e|=16384}n.clear(e),this.renderPass("color")}n.bindFramebuffer(36160,null)}renderLinearDepth(e){if(this.isDepthRendered)return;const{gl:t,buffers:n}=this;t.bindFramebuffer(36160,this.frameBuffer),t.framebufferTexture2D(36160,36064,3553,n.linearDepth.texture,0),t.framebufferTexture2D(36160,36096,3553,n.depth.texture,0),q(t)&&t.drawBuffers([t.COLOR_ATTACHMENT0]),t.clearColor(1e5,1e5,1e5,1),t.clearDepth(1),t.clear(16640),this.renderPass("depth",e),t.bindFramebuffer(36160,null),this.isDepthRendered=!0}renderNormal(e){if(this.isNormalRendered)return;const{gl:t,buffers:n}=this;t.bindFramebuffer(36160,this.frameBuffer),t.framebufferTexture2D(36160,36064,3553,n.normal.texture,0),t.framebufferTexture2D(36160,36096,3553,n.depth.texture,0),t.clearColor(1,1,0,0),t.clearDepth(1),q(t)&&t.drawBuffers([t.COLOR_ATTACHMENT0]),t.clear(16640),this.renderPass("normal",e),t.bindFramebuffer(36160,null),this.isNormalRendered=!0}renderObjectIndex(){if(this.isObjectIdRendered)return;const{gl:e,buffers:t}=this;e.bindFramebuffer(36160,this.frameBuffer),e.framebufferTexture2D(36160,36064,3553,t.objectIndex.texture,0),q(e)&&(e.framebufferTexture2D(36160,36065,3553,null,0),e.framebufferTexture2D(36160,36066,3553,null,0),e.drawBuffers([e.COLOR_ATTACHMENT0])),e.framebufferTexture2D(36160,36096,3553,t.depth.texture,0),q(e)&&"OffscreenCanvas"in self?(e.clearBufferuiv(6144,0,new Uint32Array([4294967295,0,0,0])),e.clearBufferfi(34041,0,1,0)):(e.clearDepth(1),e.clearColor(1,1,1,1),e.clear(16640)),this.renderPass("objectIndex"),e.bindFramebuffer(36160,null),this.isObjectIdRendered=!0}renderDeviation(){if(this.isDeviationRendered)return;const{gl:e,buffers:t}=this;e.bindFramebuffer(36160,this.frameBuffer),e.framebufferTexture2D(36160,36064,3553,t.deviation.texture,0),e.framebufferTexture2D(36160,36096,3553,t.depth.texture,0),e.clearColor(1e5,1e5,1e5,1),q(e)&&e.drawBuffers([e.COLOR_ATTACHMENT0]),e.clear(16384),this.renderPass("deviation"),e.bindFramebuffer(36160,null),this.isDeviationRendered=!0}renderIntensity(){if(this.isIntensityRendered)return;const{gl:e,buffers:t}=this;e.bindFramebuffer(36160,this.frameBuffer),e.framebufferTexture2D(36160,36064,3553,t.intensity.texture,0),e.framebufferTexture2D(36160,36096,3553,t.depth.texture,0),e.clearColor(1e5,1e5,1e5,1),q(e)&&e.drawBuffers([e.COLOR_ATTACHMENT0]),e.clear(16384),this.renderPass("intensity"),e.bindFramebuffer(36160,null),this.isIntensityRendered=!0}renderPass(e="color",t,n){const{gl:o,sortedMaterialGroups:r}=this;for(const i of r){if(0==i.count)continue;if(n&&"background"==i.kind)continue;const r=i[e];if(r&&(!t||!1===i.color?.isAlpha)&&r.apply(this)){for(const e of i.meshes)e.visible&&(r.applyMeshUniforms(this,e),e.bind(),r.applyAttributes(),e.draw(),this.drawcalls++,this.triangles+=e.triangleCount(),this.points+=e.pointsCount());r.cleanup(this)&&(q(o)&&"OffscreenCanvas"in self?o.clearBufferfi(34041,0,1,0):o.clear(256))}}W(o,this.currentState,k),this.currentState=k,o.bindBuffer(34963,null),o.bindBuffer(34962,null),o.useProgram(null),o.activeTexture(33984)}}class so{width;height;format;texture;constructor(e,t,n,o){this.width=t,this.height=n,this.format=o;const r=e.createTexture();!function(e,t,n,o,r){const{type:i,base:a,internal:s}=r,l=q(e);e.activeTexture(33984),e.bindTexture(3553,t),e.texImage2D(3553,0,l?s:a,n,o,0,a,i,null),e.bindTexture(3553,null)}(e,r,t,n,o),this.texture=r}}class lo{format;_texture=null;getTexture;constructor(e){this.format=e}init(e){this.getTexture=e,this._texture=null}get texture(){return this.getTexture&&(this._texture=this.getTexture(this.format),this.getTexture=void 0),this._texture}set texture(e){this._texture=e,this.getTexture=void 0}}class co{gl;color;depth;linearDepth;normal;objectIndex;deviation;intensity;freeBuffers=[];acquiredBuffers=[];constructor(e){this.gl=e;const t=q(e),{colorBufferFormat:n,depthBufferFormat:o,linearDepthBufferFormat:r,normalBufferFormat:i,objectIndexBufferFormat:a}=t?{colorBufferFormat:{type:5131,base:6408,internal:34842},depthBufferFormat:{type:5126,base:6402,internal:36012},linearDepthBufferFormat:{type:5126,base:6408,internal:34836},normalBufferFormat:{type:5131,base:33319,internal:33327},objectIndexBufferFormat:"OffscreenCanvas"in self?{type:5125,base:36244,internal:33334}:{type:5121,base:6408,internal:32856}}:{colorBufferFormat:{type:36193,base:6408,internal:34842},depthBufferFormat:{type:5125,base:6402,internal:33190},linearDepthBufferFormat:{type:5121,base:6408,internal:32856},normalBufferFormat:{type:36193,base:6408,internal:34842},objectIndexBufferFormat:{type:5121,base:6408,internal:32856}};this.color=new lo(n),this.depth=new lo(o),this.linearDepth=new lo(r),this.normal=new lo(i),this.objectIndex=new lo(a),this.deviation=new lo(r),this.intensity=new lo(r)}dispose(e){const{gl:t}=this;for(const n of e?this.freeBuffers:[...this.freeBuffers,...this.acquiredBuffers])t.deleteTexture(n.texture);this.freeBuffers.length=0,e||(this.acquiredBuffers.length=0)}init(e,t){this.color.texture&&this.releaseBuffer(this.color.texture),this.depth.texture&&this.releaseBuffer(this.depth.texture),this.linearDepth.texture&&this.releaseBuffer(this.linearDepth.texture),this.normal.texture&&this.releaseBuffer(this.normal.texture),this.objectIndex.texture&&this.releaseBuffer(this.objectIndex.texture),this.deviation.texture&&this.releaseBuffer(this.deviation.texture),this.intensity.texture&&this.releaseBuffer(this.intensity.texture),this.dispose(!0);const n=n=>this.acquireBuffer(e,t,n);this.color.init(n),this.depth.init(n),this.linearDepth.init(n),this.normal.init(n),this.objectIndex.init(n),this.deviation.init(n),this.intensity.init(n)}acquireBuffer(e,t,n){const{gl:o,freeBuffers:r,acquiredBuffers:i}=this,a=r.findIndex((o=>o.width==e&&o.height==t&&o.format.internal==n.internal)),s=a>=0?r.splice(a,1)[0]:new so(o,e,t,n);return i.push(s),o.bindTexture(3553,null),s.texture}releaseBuffer(e){const{gl:t,freeBuffers:n,acquiredBuffers:o}=this,r=o.findIndex((t=>t.texture==e)),i=o.splice(r,1)[0];n.push(i)}}class fo{gl;program;state;inputTextures;vb;maxAttributes;fb;uniforms;constructor(e,t,n,o,r){this.gl=e,this.program=t,this.state=n,this.inputTextures=o,this.vb=e.createBuffer(),e.bindBuffer(34962,this.vb),e.bufferData(34962,new Float32Array([1,1,-1,1,-1,-1,1,-1]),35044),this.fb=e.createFramebuffer(),this.maxAttributes=e.getParameter(34921),this.uniforms=r?j(e,t,r):void 0}draw(e,t,n,o){const{gl:r,vb:i,fb:a,program:s,inputTextures:l,state:c}=this;r.useProgram(s),this.uniforms&&o&&this.uniforms.set(o),W(r,e,c);for(let e=0;e<l.length;e++){const{uniform:t,samplerState:o}=l[e],i=n[e];r.uniform1i(t,e),r.activeTexture(33984+e),r.bindTexture(3553,i),X(r,o)}r.bindBuffer(34962,i),r.enableVertexAttribArray(0);const{maxAttributes:f}=this;for(let e=1;e<f;++e)r.disableVertexAttribArray(e);return r.vertexAttribPointer(0,2,5126,!1,0,0),r.bindFramebuffer(36160,t?a:null),t&&r.framebufferTexture2D(36160,36064,3553,t,0),r.drawArrays(6,0,4),r.bindFramebuffer(36160,null),r.bindTexture(3553,null),r.bindBuffer(34962,null),r.useProgram(null),c}}const uo={...k,3024:!1},mo={type:3553,10240:9728,10241:9728,10242:33071,10243:33071},po={vertex:"precision highp float;attribute vec2 aVertexPosition;const vec2 scale=vec2(0.5,0.5);uniform mat3 uColorTransform;uniform sampler2D texInput;varying vec2 vTexCoords;void main(){vTexCoords=aVertexPosition*scale+scale;gl_Position=vec4(aVertexPosition,0.0,1.0);}",fragment:"precision highp float;uniform mat3 uColorTransform;uniform sampler2D texInput;varying vec2 vTexCoords;void main(){vec4 color=texture2D(texInput,vTexCoords);color.rgb=color.rgb*uColorTransform;gl_FragColor=color;}"},xo=(.21,.71,.07,.21,.71,.07,.21,.71,.07,(vo=new h(9))[0]=.21,vo[1]=.71,vo[2]=.07,vo[3]=.21,vo[4]=.71,vo[5]=.07,vo[6]=.21,vo[7]=.71,vo[8]=.07,vo);var vo;const ho={...k,3024:!1},go={type:3553,10240:9728,10241:9728,10242:33071,10243:33071},_o={vertex:"precision highp float;attribute vec2 aVertexPosition;const vec2 scale=vec2(0.5,0.5);uniform float uExposure;uniform sampler2D texInput;varying vec2 vTexCoords;void main(){vTexCoords=aVertexPosition*scale+scale;gl_Position=vec4(aVertexPosition,0.0,1.0);}",fragment:"precision highp float;uniform float uExposure;uniform sampler2D texInput;varying vec2 vTexCoords;const float GAMMA=2.2;const float INV_GAMMA=1.0/GAMMA;vec3 linearTosRGB(vec3 color){return pow(color,vec3(INV_GAMMA));}vec3 sRGBToLinear(vec3 srgbIn){return vec3(pow(srgbIn.xyz,vec3(GAMMA)));}vec3 toneMapACES_Narkowicz(vec3 color){const float A=2.51;const float B=0.03;const float C=2.43;const float D=0.59;const float E=0.14;return clamp((color*(A*color+B))/(color*(C*color+D)+E),0.0,1.0);}vec3 RRTAndODTFit(vec3 color){vec3 a=color*(color+0.0245786)-0.000090537;vec3 b=color*(0.983729*color+0.4329510)+0.238081;return a/b;}void main(){vec4 color=texture2D(texInput,vTexCoords);color.rgb=RRTAndODTFit(color.rgb*uExposure);color.rgb=linearTosRGB(color.rgb);gl_FragColor=color;}"},bo=class{webglVersion=1;quad;constructor(e){const t=G(e,_o),n=e.getUniformLocation(t,"texInput");this.quad=new fo(e,t,ho,[{uniform:n,samplerState:go}],{exposure:["uExposure","float"]})}apply(e){const{quad:t}=this,n=Math.pow(2,e.settings.exposure??0),o=e.buffers.color.texture;if(o){const r=null;e.currentState=t.draw(e.currentState,r,[o],{exposure:n})}}},Eo={...k,3024:!1},Co={type:3553,10240:9728,10241:9728,10242:33071,10243:33071},Ro={vertex:"precision highp float;attribute vec2 aVertexPosition;const vec2 scale=vec2(0.5,0.5);uniform float uT;uniform sampler2D texA;uniform sampler2D texB;varying vec2 vTexCoords;void main(){vTexCoords=aVertexPosition*scale+scale;gl_Position=vec4(aVertexPosition,0.0,1.0);}",fragment:"precision highp float;uniform float uT;uniform sampler2D texA;uniform sampler2D texB;varying vec2 vTexCoords;void main(){vec4 color=uT<1.0 ? texture2D(texB,vTexCoords)*uT+texture2D(texA,vTexCoords)*(1.0-uT): texture2D(texB,vTexCoords);gl_FragColor=color;}"},Do=[[-4,-7],[-7,-5],[-3,-5],[-5,-4],[-1,-4],[-2,-2],[-6,-1],[-4,0],[-7,1],[-1,2],[-6,3],[-3,3],[-7,6],[-3,6],[-5,7],[-1,7],[5,-7],[1,-6],[6,-5],[4,-4],[2,-3],[7,-2],[1,-1],[4,-1],[2,1],[6,2],[0,4],[4,4],[2,5],[7,5],[5,6],[3,7]].sort(((e,t)=>e[0]*e[0]+e[1]*e[1]-t[0]*t[0]-t[1]*t[1])).map((e=>e.map((e=>e/8)))),No={...k,3024:!1},Mo={type:3553,10240:9728,10241:9728,10242:33071,10243:33071},So={type:3553,10240:9728,10241:9728,10242:10497,10243:10497},yo={taa:class{webglVersion=1;quad;lastWidth=0;lastHeight=0;count=0;accumulate;constructor(e){const t=G(e,Ro),n=e.getUniformLocation(t,"texA"),o=e.getUniformLocation(t,"texB");this.quad=new fo(e,t,Eo,[{uniform:n,samplerState:Co},{uniform:o,samplerState:Co}],{t:["uT","float"]})}apply(e,t){const n=e.buffers,o=n.color.texture;if(!o)return;const{reset:r}=t,i=t.radius??1;r&&(this.count=0);let{width:a,height:s}=e.settings.display;a*=e.settings.quality.resolution.value,s*=e.settings.quality.resolution.value,a===this.lastWidth&&s===this.lastHeight||(this.lastWidth=a,this.lastHeight=s,this.accumulate&&n.releaseBuffer(this.accumulate),this.accumulate=n.acquireBuffer(a,s,n.color.format),this.count=0);const{quad:l}=this;if(!(this.count>=0&&this.count<Do.length))return l.draw(e.currentState,o,[this.accumulate,this.accumulate],{t:1}),!1;{const t=Do[this.count],r=n.acquireBuffer(a,s,n.color.format);e.jitter(t[0]*i,t[1]*i),e.renderColor(),e.jitter(-t[0]*i,-t[1]*i);const c={t:1/(this.count+1)};l.draw(e.currentState,r,[this.accumulate,o],c),l.draw(e.currentState,this.accumulate,[r,r],{t:1}),n.releaseBuffer(o),n.color.texture=r}return++this.count<Do.length}},ssao:class{webglVersion=1;ssao;ssaoBlur;noiseTex;samples=[];numSamples=0;lastWidth=0;lastHeight=0;ssaoBuff;constructor(e){const t=`#version ${q(e)?"300 es":"100"}\n`,n=G(e,{vertex:t+"precision highp float;\n#if __VERSION__ == 300\n#define attribute in\n#define varying out\n#endif\nattribute vec2 aVertexPosition;const vec2 scale=vec2(0.5,0.5);uniform mat4 uClipViewMatrix;uniform mat4 uViewClipMatrix;uniform vec3 uSamples[64];uniform float uNumSamples;uniform float uRadius;uniform vec2 uNoiseScale;uniform sampler2D texLinearDepth;uniform sampler2D texNormal;uniform sampler2D texNoise;varying vec2 vTexCoords;void main(){vTexCoords=aVertexPosition*scale+scale;gl_Position=vec4(aVertexPosition,0.0,1.0);}",fragment:t+"precision highp float;precision highp int;\n#if __VERSION__ == 300\n#define attribute in\n#define varying in\n#define texture2D texture\n#define gl_FragColor fragColor\nout vec4 fragColor;\n#endif\nuniform mat4 uClipViewMatrix;uniform mat4 uViewClipMatrix;uniform vec3 uSamples[64];uniform float uNumSamples;uniform float uRadius;uniform vec2 uNoiseScale;uniform sampler2D texLinearDepth;uniform sampler2D texNormal;uniform sampler2D texNoise;varying vec2 vTexCoords;vec4 floatToRgba(float texelFloat,bool littleEndian){int exponent=int(log2(abs(texelFloat))+1.0);texelFloat/=exp2(float(exponent));texelFloat=(texelFloat+1.0)*(256.0*256.0*256.0-1.0)/(2.0*256.0*256.0*256.0);vec4 encode=fract(texelFloat*vec4(1.0,256.0,256.0*256.0,256.0*256.0*256.0));vec4 res=vec4(encode.xyz-encode.yzw/256.0+1.0/512.0,(float(exponent)+127.5)/256.0);return littleEndian ? res : res.abgr;}float rgbaToFloat(vec4 pack,bool littleEndian){if(!littleEndian)pack=pack.abgr;int exponent=int(pack.w*256.0-127.0);float value=dot(pack.xyz,1.0/vec3(1.0,256.0,256.0*256.0));value=value*(2.0*256.0*256.0*256.0)/(256.0*256.0*256.0-1.0)-1.0;return value*exp2(float(exponent));}float getDepth(vec2 coords){vec4 depthTexel=texture2D(texLinearDepth,coords);\n#if __VERSION__ == 100\nfloat depth=rgbaToFloat(depthTexel,true);\n#else\nfloat depth=depthTexel.x;\n#endif\nreturn depth+2.0*uViewClipMatrix[3][2]/(uViewClipMatrix[2][2]-1.0);}void main(){vec3 normal=texture2D(texNormal,vTexCoords).xyz;float nXYsqare=normal.x*normal.x+normal.y*normal.y;if(nXYsqare>1.5){gl_FragColor=vec4(1.0);}else{normal.z=sqrt(1.0-nXYsqare);float depth=getDepth(vTexCoords);vec3 fragPos=vec3((vTexCoords*2.0-1.0)*depth/vec2(uViewClipMatrix[0][0],uViewClipMatrix[1][1]),-depth);vec3 randomVec=texture2D(texNoise,vTexCoords*uNoiseScale).xyz;vec3 tangent=normalize(randomVec-normal*dot(randomVec,normal));vec3 bitangent=cross(normal,tangent);mat3 TBN=mat3(tangent,bitangent,normal);float occlusion=0.0;for(int i=0;i<64;++i){if(float(i)>=uNumSamples)break;vec3 samplePos=TBN*uSamples[i];samplePos=fragPos+samplePos*uRadius;vec4 offset=vec4(samplePos,1.0);offset=uViewClipMatrix*offset;offset.xyz/=offset.w;offset.xyz=offset.xyz*0.5+0.5;float sampleDepth=-getDepth(offset.xy);float rangeCheck=smoothstep(0.0,1.0,uRadius/abs(samplePos.z-sampleDepth));occlusion+=(sampleDepth>=samplePos.z+0.005 ? rangeCheck : 0.0);}vec4 color=vec4(vec3(1.0-(occlusion/uNumSamples)),1.0);gl_FragColor=color;}}"}),o=e.getUniformLocation(n,"texLinearDepth"),r=e.getUniformLocation(n,"texNoise"),i=e.getUniformLocation(n,"texNormal");this.ssao=new fo(e,n,No,[{uniform:o,samplerState:Mo},{uniform:i,samplerState:Mo},{uniform:r,samplerState:So}],{clipViewMatrix:["uClipViewMatrix","mat4"],viewClipMatrix:["uViewClipMatrix","mat4"],samples:["uSamples","vec3"],numSamples:["uNumSamples","float"],radius:["uRadius","float"],noiseScale:["uNoiseScale","vec2"]});const a=[];for(let e=0;e<16;e++){const e=2*Math.random()-1,t=2*Math.random()-1;a.push(e,t,0,1)}if(this.noiseTex=e.createTexture(),e.bindTexture(3553,this.noiseTex),e.pixelStorei(37443,e.NONE),q(e))e.texImage2D(3553,0,34836,4,4,0,6408,5126,new Float32Array(a));else{var s=new Uint16Array(a.map((e=>function(e){const t=new Float32Array([e]);var n=new Int32Array(t.buffer)[0],o=n>>16&32768,r=n>>12&2047,i=n>>23&255;return i<103?o:i>142?(o|=31744,o|=(255==i?0:1)&&8388607&n):i<113?o|=((r|=2048)>>114-i)+(r>>113-i&1):(o|=i-112<<10|r>>1,o+=1&r)}(e))));e.texImage2D(3553,0,6408,4,4,0,6408,36193,s)}e.bindTexture(3553,null);const l=G(e,{vertex:"precision highp float;attribute vec2 aVertexPosition;const vec2 scale=vec2(0.5,0.5);uniform vec2 uScreenSizeInv;uniform sampler2D uSsao;uniform sampler2D uInput;varying vec2 vTexCoords;void main(){vTexCoords=aVertexPosition*scale+scale;gl_Position=vec4(aVertexPosition,0.0,1.0);}",fragment:"precision highp float;uniform vec2 uScreenSizeInv;uniform sampler2D uSsao;uniform sampler2D uInput;varying vec2 vTexCoords;void main(){vec4 color=texture2D(uInput,vTexCoords);float result=0.0;for(int x=-2;x<2;++x){for(int y=-2;y<2;++y){vec2 offset=vec2(float(x),float(y))*uScreenSizeInv;result+=texture2D(uSsao,vTexCoords+offset).r;}}color.rgb=color.rgb*result*0.0625;gl_FragColor=color;}"}),c=e.getUniformLocation(l,"uSsao"),f=e.getUniformLocation(l,"uInput");this.ssaoBlur=new fo(e,l,No,[{uniform:c,samplerState:Mo},{uniform:f,samplerState:Mo}],{screenSizeInv:["uScreenSizeInv","vec2"]})}apply(e,t){const n=e.buffers,o=n.color.texture;if(!o)return;const{radius:r,skipOpacity:i}=t,a=Math.max(16,Math.min(64,t.samples));if(a!==this.numSamples){this.numSamples=a;const e=[];for(let t=0;t<a;t++){const n=S(2*Math.random()-1,2*Math.random()-1,Math.random()),o=t/a;T(n,n),y(n,n,.1+.9*o*o),e.push(...n)}this.samples=e}const{clipViewMatrix:s,viewClipMatrix:l}=e.cameraUniforms;let{width:c,height:f}=e.settings.display;c*=e.settings.quality.resolution.value,f*=e.settings.quality.resolution.value;let{reset:u}=t;c===this.lastWidth&&f===this.lastHeight||(this.lastWidth=c,this.lastHeight=f,this.ssaoBuff&&n.releaseBuffer(this.ssaoBuff),this.ssaoBuff=n.acquireBuffer(c,f,n.color.format),u=!0);const{ssao:d,ssaoBlur:m,ssaoBuff:p}=this,x=n.acquireBuffer(c,f,n.color.format);if(u){e.renderLinearDepth(i),e.renderNormal(i);const t=A(.25*c,.25*f),o={clipViewMatrix:s,viewClipMatrix:l,samples:this.samples,numSamples:a,radius:r,noiseScale:t};d.draw(e.currentState,p,[n.linearDepth.texture,n.normal.texture,this.noiseTex],o)}m.draw(e.currentState,x,[p,o],{screenSizeInv:A(1/c,1/f)}),n.color.texture=x,n.releaseBuffer(o)}},gs:class{webglVersion=1;quad;constructor(e){const t=G(e,po),n=e.getUniformLocation(t,"texInput");this.quad=new fo(e,t,uo,[{uniform:n,samplerState:mo}],{colorTransform:["uColorTransform","mat3"]})}apply(e,t){const{quad:n}=this,o=t.colorTransform??xo,r=e.buffers;let{width:i,height:a}=e.settings.display;i*=e.settings.quality.resolution.value,a*=e.settings.quality.resolution.value;const s=r.color.texture,l={colorTransform:o};if(s){const t=r.acquireBuffer(i,a,r.color.format);n.draw(e.currentState,t,[s],l),r.color.texture=t,r.releaseBuffer(s)}}},outline:class{webglVersion=1;apply(e,t){if(!q(e.gl))return;const{cameraUniforms:n}=e,o=E(b(),n.viewClipMatrix);function r(t,n){const{cameraUniforms:o}=e,r=b();r[8]=t,r[9]=n,N(o.worldViewMatrix,r,o.worldViewMatrix),N(o.worldClipMatrix,o.viewClipMatrix,o.worldViewMatrix)}n.viewClipMatrix[10]=-10,n.viewClipMatrix[14]=-0;const i=E(b(),e.cameraUniforms.worldViewMatrix),{outline:a}=e.settings,{doubleSided:s}=e.settings.advanced,{opaque:l,transparent:c}=s;s.opaque=!0,s.transparent=!0,a.color=t?.color,a.enable=!0,r(0,1/o[0]*.1),e.renderOutline(),E(n.worldViewMatrix,i),r(1/o[5]*.1,0),e.renderOutline(),E(n.worldViewMatrix,i),E(n.viewClipMatrix,o),N(n.worldClipMatrix,n.viewClipMatrix,n.worldViewMatrix),a.enable=!1,s.opaque=l,s.transparent=c}},tonemap:bo},To=[[1,0],[0,1],[1,1],[-1,0],[0,-1],[-1,-1],[1,-1],[-1,1],[-1,2],[1,2],[2,0],[2,-1],[0,-2],[-2,-1],[-2,1]];class wo{width;height;materialTypes;canvas;gl;webGLVersion;webGLExtensions;extensions;materialContexts=new Map;materialGroups=[];sceneTextures={};sceneUniforms={};resolvedCallbacks=[];commands=[];textureCache;defaultClearColor=L(0,0,.25,1);objectPicker;disposing=!1;buffers;tonemapper;posteffects=new Map;currentContext;_hasPendingChanges=!1;_pendingChangesCallback;constructor(e,t,n,o,r){this.width=e,this.height=t,this.materialTypes=n;const i={alpha:!0,antialias:!1,depth:!0,failIfMajorPerformanceCaveat:!1,desynchronized:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!0,powerPreference:"high-performance",stencil:!1},a=void 0===r,s=r??new OffscreenCanvas(e,t);a||(s.width=e,s.height=t);let l=null;if(l=o?null:s.getContext("webgl2",i),l)this.webGLVersion=2;else{if(l=s.getContext("webgl",i),!l)throw new Error("WebGL is not supported by this device!");this.webGLVersion=1}s.addEventListener("webglcontextlost",(function(e){}),!1),s.addEventListener("webglcontextrestored",(function(e){}),!1),this.webGLExtensions=q(l)?function(e){const t={EXT_color_buffer_float:e.getExtension("EXT_color_buffer_float"),WEBGL_multi_draw:e.getExtension("WEBGL_multi_draw")};for(let e in t)if(!Reflect.get(t,e))throw new Error(`WebGL ${e} extension not supported!`);const n={OES_texture_half_float_linear:e.getExtension("OES_texture_half_float_linear"),WEBGL_compressed_texture_astc:e.getExtension("WEBGL_compressed_texture_astc"),WEBGL_compressed_texture_atc:e.getExtension("WEBGL_compressed_texture_atc"),WEBGL_compressed_texture_etc:e.getExtension("WEBGL_compressed_texture_etc"),WEBGL_compressed_texture_pvrtc:e.getExtension("WEBGL_compressed_texture_pvrtc"),WEBGL_compressed_texture_s3tc:e.getExtension("WEBGL_compressed_texture_s3tc"),WEBGL_compressed_texture_s3tc_srgb:e.getExtension("WEBGL_compressed_texture_s3tc_srgb")};return{glVersion:2,...t,...n}}(l):function(e){const t={OES_texture_half_float_linear:e.getExtension("OES_texture_half_float_linear"),OES_element_index_uint:e.getExtension("OES_element_index_uint"),OES_standard_derivatives:e.getExtension("OES_standard_derivatives"),OES_texture_float:e.getExtension("OES_texture_float"),OES_texture_half_float:e.getExtension("OES_texture_half_float"),EXT_sRGB:e.getExtension("EXT_sRGB"),EXT_shader_texture_lod:e.getExtension("EXT_shader_texture_lod"),WEBGL_depth_texture:e.getExtension("WEBGL_depth_texture")};for(let e in t)if("WEBGL_color_buffer_float"!=e&&!Reflect.get(t,e))throw new Error(`WebGL ${e} extension not supported!`);const n={WEBGL_color_buffer_float:e.getExtension("WEBGL_color_buffer_float"),WEBGL_compressed_texture_astc:e.getExtension("WEBGL_compressed_texture_astc"),WEBGL_compressed_texture_atc:e.getExtension("WEBGL_compressed_texture_atc"),WEBGL_compressed_texture_etc:e.getExtension("WEBGL_compressed_texture_etc"),WEBGL_compressed_texture_pvrtc:e.getExtension("WEBGL_compressed_texture_pvrtc"),WEBGL_compressed_texture_s3tc:e.getExtension("WEBGL_compressed_texture_s3tc"),WEBGL_compressed_texture_s3tc_srgb:e.getExtension("WEBGL_compressed_texture_s3tc_srgb")};return{glVersion:1,...t,...n}}(l);const c={};for(let e in this.webGLExtensions){const t=Reflect.get(this.webGLExtensions,e);c[e]="glVersion"==e?t:null!==t}this.extensions=c,this.gl=l,this.canvas=s,this.textureCache=new oo(l),this.objectPicker=new ro(this.width,this.height),this.buffers=new co(l),this.buffers.init(e,t),this.tonemapper=new bo(l)}getMaterial(e,t,n){const{gl:o,extensions:r,materialTypes:i,materialContexts:a}=this,s=i[e];let l=a.get(e);return l||(l=new $(o,r,s.contextData),a.set(e,l)),new s(l,t??{},n??{})}createMaterialGroup(e,t,n){const{gl:o,materialTypes:r,webGLExtensions:i}=this,{objectIndexVariant:a,depthVariant:s,normalVariant:l,deviationVariant:c,intensityVariant:f,outlineVariant:u}=r[e],d=this.getMaterial(e,t,n),m=a?this.getMaterial(a,t,n):void 0,p=s?this.getMaterial(s,t,n):void 0,x=l?this.getMaterial(l,t,n):void 0,v=c?this.getMaterial(c,t,n):void 0,h=f?this.getMaterial(f,t,n):void 0,g=u?this.getMaterial(u,t,n):void 0;return new F(o,i,e,d,m,p,x,v,h,g)}init(){this.commands.length=0,this.disposeMaterialGroups(),this.textureCache.dispose(),this.materialContexts.clear()}dispose(){this.disposing=!0,this.disposeMaterialGroups(),this.textureCache.dispose()}setPendingChangesCallback(e){this._pendingChangesCallback=e}get hasPendingChanges(){return this._hasPendingChanges}set hasPendingChanges(e){this._hasPendingChanges!=e&&(this._hasPendingChanges=e,this._pendingChangesCallback?.(e))}disposeMaterialGroups(){for(const e of this.materialGroups)e.dispose();this.materialGroups.length=0}resolved(){for(const e of this.resolvedCallbacks)e();this.resolvedCallbacks.length=0}get fullyResolved(){return new Promise((e=>{this.resolvedCallbacks.push(e)}))}size(e,t){this.width==e&&this.height==t||(this.canvas.width=this.width=e,this.canvas.height=this.height=t,this.gl.viewport(0,0,e,t),this.buffers.init(e,t))}render(e,t,n){const{gl:o,buffers:r}=this;t.background&&"color"in t.background?t.background.color:this.defaultClearColor,performance.mark("render_update_begin"),this.applyCommands(),performance.measure("render_update","render_update_begin"),performance.mark("render_draw_begin");const i=t.quality.resolution.value,a=Math.floor(t.display.width*i),s=Math.floor(t.display.height*i);this.size(a,s);let l=0,c=0,f=0;if(e){const{textureCache:i}=this,{sceneUniforms:a,sceneTextures:s}=this;this.currentContext&&this.currentContext.dispose();const u=this.currentContext=new ao(o,n,t,e,a,s,i,this.materialGroups,r,k);u.renderColor(!0,"orthographic"===e.projection),l=u.drawcalls,c=u.triangles,f=u.points}o.flush(),performance.measure("render_draw","render_draw_begin");const u=performance.getEntriesByName("render_draw")[0].duration,d=performance.getEntriesByName("render_update")[0].duration;return performance.clearMarks(),performance.clearMeasures(),this.resolved(),{drawTime:u,updateTime:d,triangles:c,points:f,drawcalls:l}}applyPostEffect(e){const{kind:t}=e,{currentContext:n}=this;let o=this.posteffects.get(t);if(!o){const e=yo[t];e&&(o=new e(this.gl),this.posteffects.set(t,o))}if(n)return o?.apply(n,e)}updatePickBuffers(){const e=this.currentContext;if(!e)return;const{gl:t}=this,{drawingBufferWidth:n,drawingBufferHeight:o}=t;n===this.objectPicker.width&&o===this.objectPicker.height||(this.objectPicker=new ro(n,o)),this.objectPicker.update(e)}pick(e,t){const n=this.currentContext;if(!n)return;const{gl:o,width:r,height:i}=this,{drawingBufferWidth:a,drawingBufferHeight:s}=o,{objectPicker:l}=this;e=Math.round(e/r*a),t=Math.round((i-1-t)/i*s);let c=Math.round(e+t*a),f=l.ids[c];const{clipViewMatrix:u,viewClipMatrix:d,viewWorldMatrix:m,viewWorldNormalMatrix:p}=n.cameraUniforms,x=0!=d[15];if(4294967295===f){for(let n=0;n<To.length;n++){const o=To[n],r=e+o[0],i=t+o[1];if(!(r<0||i<0||r>=a||i>s)&&(c=Math.round(r+i*a),f=l.ids[c],4294967295!==f))break}if(!x&&4294967295===f)return}const v=4294967295===f?0:q(o)?l.depths[4*c]:Lo(l.depths,c),h=(t+.5)/s*2-1,g=x?1:v,_=L(((e+.5)/a*2-1)/d[0]*g,h/d[5]*g,-v,1),b=2*e+2*t*a,E=V(w(),_,m),C=S(0,1,0);if(4294967295!==f){const e=J(l.normals[b]),t=J(l.normals[b+1]);!function(e,t,n){var o=t[0],r=t[1],i=t[2];e[0]=o*n[0]+r*n[3]+i*n[6],e[1]=o*n[1]+r*n[4]+i*n[7],e[2]=o*n[2]+r*n[5]+i*n[8]}(C,S(e,t,Math.sqrt(1-(e*e+t*t))),p)}return 4294967295===f&&(f=-1),{objectId:f,position:S(E[0],E[1],E[2]),normal:C}}measure(e,t){const n=this.currentContext;if(!n)return;const o=.01,{gl:r,width:i,height:a,buffers:s}=this,{drawingBufferWidth:l,drawingBufferHeight:c}=r,{objectPicker:f}=this;e=Math.round(e/i*l),t=Math.round((a-1-t)/a*c);const u=Math.round(e+t*l);let d=q(r)?f.depths[4*u]:Lo(f.depths,u);const{viewClipMatrix:m,viewWorldMatrix:p}=n.cameraUniforms,x=0!=m[15];let v=!1;if(1e5===d){if(!x)return;v=!0,d=0}let h=q(r)?f.intensity[4*u]:Lo(f.intensity,u);1e5==h&&(h=void 0);let g=q(r)?f.deviation[4*u]:Lo(f.deviation,u);1e5==g&&(g=void 0);const _=(t+.5)/c*2-1,b=x?1:d,E=L(((e+.5)/l*2-1)/m[0]*b,_/m[5]*b,-d,1),C=V(w(),E,p),R=S(C[0],C[1],C[2]);if(v)return{position:R,normalVS:void 0,deviation:g,intensity:h};let D;const N=2*e+2*t*l,M=J(f.normals[N]),y=J(f.normals[N+1]),T=Math.sqrt(1-(M*M+y*y));function I(e){const t=J(f.normals[e]),n=J(f.normals[e+1]),r=t*t+n*n;if(r>1.5)return!0;if(M-t>o)return!0;if(y-n>o)return!0;const i=Math.sqrt(1-r);return T-i>o}const O=Math.round(l/700);if(I(2*(e-O)+2*t*l))return{position:R,normalVS:D,deviation:g,intensity:h};if(I(2*(e+O)+2*t*l))return{position:R,normalVS:D,deviation:g,intensity:h};const P=Math.round(c/700);return I(2*e+2*(t-P)*l)||I(2*e+2*(t+P)*l)||(D=S(M,y,T)),{position:R,normalVS:D,deviation:g,intensity:h}}getOutputImage(){const e=this.currentContext;if(e){this.tonemapper.apply(e);const t="DedicatedWorkerGlobalScope"in self;if("transferToImageBitmap"in this.canvas){const e=this.canvas.transferToImageBitmap();return t?d(e,[e]):e}}}transferToImageBitmap(){if(this.canvas instanceof OffscreenCanvas){const e=this.canvas.transferToImageBitmap();return d(e,[e])}}async convertToBlob(e){if(this.canvas instanceof OffscreenCanvas)return await this.canvas.convertToBlob(e)}executeCommands(e){this.disposing||(this.commands.push(...e),this.hasPendingChanges=this.commands.length>0)}applyCommands(){const{commands:e}=this;!function(e,t){for(let n of t)io[n.name].apply(e,n.args)}(this,e),e.length=0,this.hasPendingChanges=this.commands.length>0}}function Lo(e,t){const n=new Uint8Array(e.buffer),o=n[4*t+3],r=n[4*t+2],i=n[4*t+1],a=o-127;let s=n[4*t]+.00390625*i+152587890625e-16*r;return s=131072*s/16777215-1,s*Math.pow(2,a)}h=Array;const Io=new class{materialTypes=function(){const e={};for(let t of Reflect.ownKeys(eo)){const n=Reflect.get(eo,t),{contextData:o}=n;Reflect.set(e,t,{contextData:o})}return e}();terminate(){"DedicatedWorkerGlobalScope"in self&&self.close()}async createView(e,t,n){return m(new wo(e,t,eo,n,self.__htmlRenderCanvas__))}};"DedicatedWorkerGlobalScope"in self?a(Io):self.__initRenderServiceEndPoint__=e=>{a(Io,e)};